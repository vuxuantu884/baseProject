{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/InputTel.tsx\",\n    _s = $RefreshSig$();\n\nimport IntlTelInput from \"react-intl-tel-input\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { StyledError } from \"@components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SharedIntlTelInput = props => {\n  _s();\n\n  //page hooks\n  const {\n    t\n  } = useTranslation(); //page props\n\n  const {\n    setFieldTouched,\n    value,\n    errorPhone,\n    disabled,\n    country,\n    handleChangePhoneNumber,\n    handleSelectFlag\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledIntlTelInput, {\n      defaultCountry: country || \"th\",\n      preferredCountries: [\"th\", \"vn\"],\n      fieldId: \"phoneNumber\",\n      fieldName: \"phoneNumber\",\n      onPhoneNumberChange: handleChangePhoneNumber,\n      onPhoneNumberBlur: () => {\n        setFieldTouched(value || \"\", true);\n      },\n      onSelectFlag: handleSelectFlag,\n      value: value,\n      disabled: disabled,\n      autoFocus: true,\n      formatOnInit: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), errorPhone && /*#__PURE__*/_jsxDEV(StyledError, {\n      className: \"custom-error\",\n      visible: true,\n      children: errorPhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SharedIntlTelInput, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SharedIntlTelInput;\nconst StyledIntlTelInput = styled(IntlTelInput)`\n    input.allow-dropdown input[type=\"tel\"] {\n        border-radius: 6px;\n    }\n`;\n_c2 = StyledIntlTelInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SharedIntlTelInput\");\n$RefreshReg$(_c2, \"StyledIntlTelInput\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/InputTel.tsx"],"names":["IntlTelInput","useTranslation","styled","StyledError","SharedIntlTelInput","props","t","setFieldTouched","value","errorPhone","disabled","country","handleChangePhoneNumber","handleSelectFlag","StyledIntlTelInput"],"mappings":";;;AAAA,OAAOA,YAAP,MAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAGA,SAASC,WAAT,QAA4B,aAA5B;;;AA4BA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAmB;AAAA;;AACjD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B,CAFiD,CAGjD;;AACA,QAAM;AACFM,IAAAA,eADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,uBANE;AAOFC,IAAAA;AAPE,MAQFR,KARJ;AAUA,sBACI;AAAA,4BACI,QAAC,kBAAD;AACI,MAAA,cAAc,EAAEM,OAAO,IAAI,IAD/B;AAEI,MAAA,kBAAkB,EAAE,CAAC,IAAD,EAAO,IAAP,CAFxB;AAGI,MAAA,OAAO,EAAC,aAHZ;AAII,MAAA,SAAS,EAAC,aAJd;AAKI,MAAA,mBAAmB,EAAEC,uBALzB;AAMI,MAAA,iBAAiB,EAAE,MAAM;AACrBL,QAAAA,eAAe,CAACC,KAAK,IAAI,EAAV,EAAc,IAAd,CAAf;AACH,OARL;AASI,MAAA,YAAY,EAAEK,gBATlB;AAUI,MAAA,KAAK,EAAEL,KAVX;AAWI,MAAA,QAAQ,EAAEE,QAXd;AAYI,MAAA,SAAS,EAAE,IAZf;AAaI,MAAA,YAAY,EAAE;AAblB;AAAA;AAAA;AAAA;AAAA,YADJ,EAgBKD,UAAU,iBACP,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAsC,MAAA,OAAO,EAAE,IAA/C;AAAA,gBACKA;AADL;AAAA;AAAA;AAAA;AAAA,YAjBR;AAAA,kBADJ;AAwBH,CAtCM;;GAAML,kB;UAEKH,c;;;KAFLG,kB;AAwCb,MAAMU,kBAAkB,GAAGZ,MAAM,CAACF,YAAD,CAAe;AAChD;AACA;AACA;AACA,CAJA;MAAMc,kB","sourcesContent":["import IntlTelInput, { CountryData } from \"react-intl-tel-input\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport parsePhoneNumber from \"libphonenumber-js\";\n\nimport { StyledError } from \"@components\";\nimport { FormikErrors } from \"formik\";\nimport { IEmailForm, IPhone, IUserSetting } from \"@interfaces\";\nimport { useEffect, useState } from \"react\";\n\ninterface IProps {\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IUserSetting | IEmailForm | IPhone>>;\n    value: string;\n    errorPhone: string;\n    disabled?: boolean | undefined;\n    country: string | undefined;\n    handleChangePhoneNumber: (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => void;\n    handleSelectFlag: (\n        currentNumber: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => void;\n}\n\nexport const SharedIntlTelInput = (props: IProps) => {\n    //page hooks\n    const { t } = useTranslation();\n    //page props\n    const {\n        setFieldTouched,\n        value,\n        errorPhone,\n        disabled,\n        country,\n        handleChangePhoneNumber,\n        handleSelectFlag,\n    } = props;\n\n    return (\n        <>\n            <StyledIntlTelInput\n                defaultCountry={country || \"th\"}\n                preferredCountries={[\"th\", \"vn\"]}\n                fieldId=\"phoneNumber\"\n                fieldName=\"phoneNumber\"\n                onPhoneNumberChange={handleChangePhoneNumber}\n                onPhoneNumberBlur={() => {\n                    setFieldTouched(value || \"\", true);\n                }}\n                onSelectFlag={handleSelectFlag}\n                value={value}\n                disabled={disabled}\n                autoFocus={true}\n                formatOnInit={false}\n            />\n            {errorPhone && (\n                <StyledError className=\"custom-error\" visible={true}>\n                    {errorPhone}\n                </StyledError>\n            )}\n        </>\n    );\n};\n\nconst StyledIntlTelInput = styled(IntlTelInput)`\n    input.allow-dropdown input[type=\"tel\"] {\n        border-radius: 6px;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}