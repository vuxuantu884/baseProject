{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/tel/SignUpTel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport \"react-intl-tel-input/dist/main.css\";\nimport { SharedButton, SharedIntlTelInput } from \"@components\";\nimport { selectMerchant } from \"@redux\";\nimport { enumExternalAuthType, enumExternalMethod } from \"@configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ComponentSignUpTel = props => {\n  _s();\n\n  var _merchant$signUpSetti;\n\n  //page hook\n  const {\n    t\n  } = useTranslation(); //page props\n\n  const {\n    values,\n    isSubmitting,\n    handleSubmit,\n    setFieldTouched,\n    setFieldValue,\n    errorPhone,\n    setError\n  } = props; //page variable\n\n  const merchant = useSelector(selectMerchant);\n  const state = {\n    type: enumExternalAuthType.SIGNUP\n  };\n  const signUpMethods = merchant === null || merchant === void 0 ? void 0 : (_merchant$signUpSetti = merchant.signUpSettings) === null || _merchant$signUpSetti === void 0 ? void 0 : _merchant$signUpSetti.signUpMethods;\n  const checkMethodSignUpSocial = (signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.GOOGLE)) || (signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.LINE)) || (signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.FACEBOOK));\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(SharedIntlTelInput, {\n      setFieldTouched: setFieldTouched,\n      setFieldValue: setFieldValue,\n      value: values.phoneNumber || \"\",\n      isSubmitting: isSubmitting,\n      errorPhone: errorPhone,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      size: \"large\",\n      bg_color: merchant.themeColor,\n      disabled: isSubmitting,\n      type: \"submit\",\n      children: t(\"page.auth.sign_up\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComponentSignUpTel, \"6VHuB+DUyebMo+Mquqzz8MD0itQ=\", false, function () {\n  return [useTranslation, useSelector];\n});\n\n_c = ComponentSignUpTel;\nconst StyledButton = styled(SharedButton)`\n    margin-top: 50px;\n`;\n_c2 = StyledButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentSignUpTel\");\n$RefreshReg$(_c2, \"StyledButton\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/tel/SignUpTel.tsx"],"names":["useTranslation","useSelector","styled","SharedButton","SharedIntlTelInput","selectMerchant","enumExternalAuthType","enumExternalMethod","ComponentSignUpTel","props","t","values","isSubmitting","handleSubmit","setFieldTouched","setFieldValue","errorPhone","setError","merchant","state","type","SIGNUP","signUpMethods","signUpSettings","checkMethodSignUpSocial","includes","GOOGLE","LINE","FACEBOOK","phoneNumber","themeColor","StyledButton"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,oCAAP;AAEA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,aAAjD;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,UAAzD;;AAmBA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAmB;AAAA;;AAAA;;AACjD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQV,cAAc,EAA5B,CAFiD,CAGjD;;AACA,QAAM;AACFW,IAAAA,MADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,eAJE;AAKFC,IAAAA,aALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA;AAPE,MAQFR,KARJ,CAJiD,CAajD;;AACA,QAAMS,QAAQ,GAAGjB,WAAW,CAACI,cAAD,CAA5B;AACA,QAAMc,KAAyB,GAAG;AAC9BC,IAAAA,IAAI,EAAEd,oBAAoB,CAACe;AADG,GAAlC;AAGA,QAAMC,aAAa,GAAGJ,QAAH,aAAGA,QAAH,gDAAGA,QAAQ,CAAEK,cAAb,0DAAG,sBAA0BD,aAAhD;AACA,QAAME,uBAAuB,GACzB,CAAAF,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEG,QAAf,CAAwBlB,kBAAkB,CAACmB,MAA3C,OACAJ,aADA,aACAA,aADA,uBACAA,aAAa,CAAEG,QAAf,CAAwBlB,kBAAkB,CAACoB,IAA3C,CADA,MAEAL,aAFA,aAEAA,aAFA,uBAEAA,aAAa,CAAEG,QAAf,CAAwBlB,kBAAkB,CAACqB,QAA3C,CAFA,CADJ;AAKA,sBACI;AAAM,IAAA,QAAQ,EAAEf,YAAhB;AAAA,4BACI,QAAC,kBAAD;AACI,MAAA,eAAe,EAAEC,eADrB;AAEI,MAAA,aAAa,EAAEC,aAFnB;AAGI,MAAA,KAAK,EAAEJ,MAAM,CAACkB,WAAP,IAAsB,EAHjC;AAII,MAAA,YAAY,EAAEjB,YAJlB;AAKI,MAAA,UAAU,EAAEI,UALhB;AAMI,MAAA,QAAQ,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,YAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAEC,QAAQ,CAACY,UAFvB;AAGI,MAAA,QAAQ,EAAElB,YAHd;AAII,MAAA,IAAI,EAAC,QAJT;AAAA,gBAMKF,CAAC,CAAC,mBAAD;AANN;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5CM;;GAAMF,kB;UAEKR,c,EAYGC,W;;;KAdRO,kB;AA8Cb,MAAMuB,YAAY,GAAG7B,MAAM,CAACC,YAAD,CAAe;AAC1C;AACA,CAFA;MAAM4B,Y","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { FormikErrors } from \"formik\";\nimport \"react-intl-tel-input/dist/main.css\";\n\nimport { SharedButton, SharedIntlTelInput } from \"@components\";\nimport { selectMerchant } from \"@redux\";\nimport { IPhone, IExternalAuthState } from \"@interfaces\";\nimport { enumExternalAuthType, enumExternalMethod } from \"@configs\";\ninterface IProps {\n    values: IPhone;\n    errorPhone: string;\n    isSubmitting: boolean;\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IPhone>>;\n    setFieldValue: (\n        field: string,\n        value: any,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IPhone>>;\n    setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const ComponentSignUpTel = (props: IProps) => {\n    //page hook\n    const { t } = useTranslation();\n    //page props\n    const {\n        values,\n        isSubmitting,\n        handleSubmit,\n        setFieldTouched,\n        setFieldValue,\n        errorPhone,\n        setError,\n    } = props;\n    //page variable\n    const merchant = useSelector(selectMerchant);\n    const state: IExternalAuthState = {\n        type: enumExternalAuthType.SIGNUP,\n    };\n    const signUpMethods = merchant?.signUpSettings?.signUpMethods;\n    const checkMethodSignUpSocial =\n        signUpMethods?.includes(enumExternalMethod.GOOGLE) ||\n        signUpMethods?.includes(enumExternalMethod.LINE) ||\n        signUpMethods?.includes(enumExternalMethod.FACEBOOK);\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <SharedIntlTelInput\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                value={values.phoneNumber || \"\"}\n                isSubmitting={isSubmitting}\n                errorPhone={errorPhone}\n                setError={setError}\n            />\n            <StyledButton\n                size=\"large\"\n                bg_color={merchant.themeColor}\n                disabled={isSubmitting}\n                type=\"submit\"\n            >\n                {t(\"page.auth.sign_up\")}\n            </StyledButton>\n        </form>\n    );\n};\n\nconst StyledButton = styled(SharedButton)`\n    margin-top: 50px;\n`;\n"]},"metadata":{},"sourceType":"module"}