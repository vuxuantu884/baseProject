{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/reward/List.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport { useTranslation } from \"react-i18next\";\nimport React from \"react\";\nimport { RewardItem } from \"./Item\";\nimport { useWindowDimensions } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Navigation]);\nexport const ComponentRewardList = props => {\n  _s();\n\n  //hook\n  const {\n    t\n  } = useTranslation();\n  const {\n    width\n  } = useWindowDimensions(); //page props\n\n  const {\n    data,\n    handleClick\n  } = props;\n  const slidesPerView = width <= 414 ? width <= 384 ? width <= 320 ? 1.2 : 1.4 : 1.6 : 1.8;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: data.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"money\",\n            children: [item.point, \" \", item.point > 1 ? t(\"page.reward.points\") : t(\"page.reward.point\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n            slidesPerView: slidesPerView,\n            children: item.reward.map((values, index) => {\n              return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                children: /*#__PURE__*/_jsxDEV(RewardItem, {\n                  data: values,\n                  handleClick: handleClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ComponentRewardList, \"kK8ooGQuJdxy5WIdENb8qjY70Fc=\", false, function () {\n  return [useTranslation, useWindowDimensions];\n});\n\n_c = ComponentRewardList;\nconst StyledContainer = styled.div`\n    width: 90%;\n    margin: 0 auto;\n    padding: 25px 0;\n    position: relative;\n    .money {\n        font-style: normal;\n        font-weight: 600;\n        font-size: 16px;\n        line-height: 21px;\n        color: #a7a7a7;\n        margin-bottom: 12px;\n    }\n    .list-reward {\n        display: flex;\n    }\n`;\n_c2 = StyledContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentRewardList\");\n$RefreshReg$(_c2, \"StyledContainer\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/reward/List.tsx"],"names":["styled","Swiper","SwiperSlide","SwiperCore","Navigation","useTranslation","React","RewardItem","useWindowDimensions","use","ComponentRewardList","props","t","width","data","handleClick","slidesPerView","map","item","index","point","reward","values","StyledContainer","div"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAOC,UAAP,IAAqBC,UAArB,QAAuC,QAAvC;AACA,OAAO,8BAAP;AACA,OAAO,uBAAP;AACA,OAAO,iDAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,QAA3B;AAEA,SAASC,mBAAT,QAAoC,QAApC;;;AAEAL,UAAU,CAACM,GAAX,CAAe,CAACL,UAAD,CAAf;AAOA,OAAO,MAAMM,mBAAmB,GAAIC,KAAD,IAAmB;AAAA;;AAClD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAYL,mBAAmB,EAArC,CAHkD,CAIlD;;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBJ,KAA9B;AAEA,QAAMK,aAAa,GAAGH,KAAK,IAAI,GAAT,GAAgBA,KAAK,IAAI,GAAT,GAAgBA,KAAK,IAAI,GAAT,GAAe,GAAf,GAAqB,GAArC,GAA4C,GAA5D,GAAmE,GAAzF;AAEA,sBACI;AAAA,2BACI,QAAC,eAAD;AAAA,gBACKC,IAAI,CAACG,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,4BACI,QAAC,KAAD,CAAO,QAAP;AAAA,qBACK,GADL,eAEI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,uBACKD,IAAI,CAACE,KADV,EACiB,GADjB,EAEKF,IAAI,CAACE,KAAL,GAAa,CAAb,GAAiBR,CAAC,CAAC,oBAAD,CAAlB,GAA2CA,CAAC,CAAC,mBAAD,CAFjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI,QAAC,MAAD;AAAQ,YAAA,aAAa,EAAEI,aAAvB;AAAA,sBACKE,IAAI,CAACG,MAAL,CAAYJ,GAAZ,CAAgB,CAACK,MAAD,EAASH,KAAT,KAAmB;AAChC,kCACI,QAAC,WAAD;AAAA,uCACI,QAAC,UAAD;AAAY,kBAAA,IAAI,EAAEG,MAAlB;AAA0B,kBAAA,WAAW,EAAEP;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAkBI,KAAlB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKH,aANA;AADL;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA,WAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAkBH,OAnBA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA0BH,CAnCM;;GAAMT,mB;UAEKL,c,EACIG,mB;;;KAHTE,mB;AAqCb,MAAMa,eAAe,GAAGvB,MAAM,CAACwB,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMD,e","sourcesContent":["import styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport { useTranslation } from \"react-i18next\";\nimport React from \"react\";\n\nimport { RewardItem } from \"./Item\";\nimport { IDataReward, IReward } from \"@interfaces\";\nimport { useWindowDimensions } from \"@utils\";\n\nSwiperCore.use([Navigation]);\n\ninterface IProps {\n    data: IDataReward[];\n    handleClick: (value: IReward) => void;\n}\n\nexport const ComponentRewardList = (props: IProps) => {\n    //hook\n    const { t } = useTranslation();\n    const { width } = useWindowDimensions();\n    //page props\n    const { data, handleClick } = props;\n\n    const slidesPerView = width <= 414 ? (width <= 384 ? (width <= 320 ? 1.2 : 1.4) : 1.6) : 1.8;\n\n    return (\n        <>\n            <StyledContainer>\n                {data.map((item, index) => {\n                    return (\n                        <React.Fragment key={index}>\n                            {\" \"}\n                            <div className=\"money\">\n                                {item.point}{\" \"}\n                                {item.point > 1 ? t(\"page.reward.points\") : t(\"page.reward.point\")}\n                            </div>\n                            <Swiper slidesPerView={slidesPerView}>\n                                {item.reward.map((values, index) => {\n                                    return (\n                                        <SwiperSlide key={index}>\n                                            <RewardItem data={values} handleClick={handleClick} />\n                                        </SwiperSlide>\n                                    );\n                                })}\n                            </Swiper>\n                        </React.Fragment>\n                    );\n                })}\n            </StyledContainer>\n        </>\n    );\n};\n\nconst StyledContainer = styled.div`\n    width: 90%;\n    margin: 0 auto;\n    padding: 25px 0;\n    position: relative;\n    .money {\n        font-style: normal;\n        font-weight: 600;\n        font-size: 16px;\n        line-height: 21px;\n        color: #a7a7a7;\n        margin-bottom: 12px;\n    }\n    .list-reward {\n        display: flex;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}