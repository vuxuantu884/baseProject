{"ast":null,"code":"export let ChannelEnum;\n\n(function (ChannelEnum) {\n  ChannelEnum[\"adminPanel\"] = \"adminPanel\";\n  ChannelEnum[\"email\"] = \"email\";\n  ChannelEnum[\"lineChat\"] = \"lineChat\";\n})(ChannelEnum || (ChannelEnum = {}));\n\nexport let EventEnum;\n\n(function (EventEnum) {\n  EventEnum[\"couponAddOrDel\"] = \"couponAddOrDel\";\n  EventEnum[\"couponCollection\"] = \"couponCollection\";\n  EventEnum[\"couponUsage\"] = \"couponUsage\";\n  EventEnum[\"membershipUpgradeOrDowngrade\"] = \"membershipUpgradeOrDowngrade\";\n  EventEnum[\"newUserSignUp\"] = \"newUserSignUp\";\n  EventEnum[\"pointsCollection\"] = \"pointsCollection\";\n  EventEnum[\"reward\"] = \"reward\";\n  EventEnum[\"rewardAddOrDel\"] = \"rewardAddOrDel\";\n  EventEnum[\"rewardRedemption\"] = \"rewardRedemption\";\n  EventEnum[\"sales\"] = \"sales\";\n})(EventEnum || (EventEnum = {}));","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Interfaces/auth.ts"],"names":["ChannelEnum","EventEnum"],"mappings":"AAsGA,WAAYA,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAuBZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["import { enumExternalAuthType, enumStatus } from \"@configs\";\nimport { IMergeSettings } from \"@interfaces\";\n\nexport interface IAuth {\n    accessToken: string;\n    refreshToken: IRefreshToken | null;\n    userPermissions: Array<string> | null;\n}\n\nexport interface IRefreshToken {\n    createdAt: string;\n    expires: number | string;\n    updatedAt: string;\n    userId: string;\n}\nexport interface ILogin {\n    email: string;\n    password: string;\n}\nexport interface IEmail {\n    email: string;\n    password?:string;\n}\nexport interface IPhone {\n    phoneNumber: string;\n}\nexport interface IForgotPassword {\n    password: string;\n}\nexport interface INitCreatePassword {\n    name?: string;\n    password: string;\n    conformPassword: string;\n}\nexport interface ICreatePassword {\n    resetPasswordId: string;\n    password: string;\n}\n\nexport interface IChangePassword {\n    currentPassword: string;\n    newPassword: string;\n    confirmNewPassword: string;\n}\nexport interface IInfo {\n    avatar:string;\n    fullName: string;\n    googleId: string;\n    isVerified:boolean;\n    roleId: string;\n    merchantId?: string;\n    status?: enumStatus;\n    merchant: IMerchant;\n    totalCoupons?:number;\n    totalPoints?:number;\n    _id?:string;\n}\n\ninterface IMerchant {\n    membershipTiers: IMemberShipTiers[];\n    _id: string;\n    status: string;\n    createdBy: string;\n    mergeSettings: IMergeSettings;\n    themeColor?: string;\n}\n\nexport interface IMemberShipTiers {\n    membershipName: string;\n    bahtSpent: number;\n    points: number;\n    benefits: Array<string>;\n    status: boolean;\n    _id: string;\n}\n\nexport interface IPreview {\n    name: string;\n    dateFrom: string | Date;\n    dateTo: string | Date;\n    timeFrom: string;\n    timeTo: string;\n    code?: string | number;\n    images: Array<string>;\n    guideline?: string;\n}\nexport interface IRoleAuth {\n    _id: string;\n    permissions: Array<string>;\n    name: string;\n}\nexport interface INotifSetting {\n    channels: IChannels;\n    events: IEvents;\n}\n\nexport interface IChannels {\n    adminPanel: boolean;\n    email: boolean;\n    lineChat: boolean;\n}\n\nexport enum ChannelEnum {\n    adminPanel = \"adminPanel\",\n    email = \"email\",\n    lineChat = \"lineChat\",\n}\nexport interface IEvents {\n    couponAddOrDel: boolean;\n    couponCollection: boolean;\n    couponUsage: boolean;\n    membershipUpgradeOrDowngrade: boolean;\n    newUserSignUp: boolean;\n    pointsCollection: boolean;\n    reward: boolean;\n    rewardAddOrDel: boolean;\n    rewardRedemption: boolean;\n    sales: boolean;\n}\n\nexport interface IUpdateUserProfile {\n    fullName: string;\n    notifSetting: INotifSetting;\n}\n\nexport enum EventEnum {\n    couponAddOrDel = \"couponAddOrDel\",\n    couponCollection = \"couponCollection\",\n    couponUsage = \"couponUsage\",\n    membershipUpgradeOrDowngrade = \"membershipUpgradeOrDowngrade\",\n    newUserSignUp = \"newUserSignUp\",\n    pointsCollection = \"pointsCollection\",\n    reward = \"reward\",\n    rewardAddOrDel = \"rewardAddOrDel\",\n    rewardRedemption = \"rewardRedemption\",\n    sales = \"sales\",\n}\nexport interface ICreatePasswordAccount {\n    fullName: string;\n    password: string;\n    resetPasswordId: string;\n}\n\nexport interface IRegister {\n    email: string;\n    inviteId?: string;\n}\n\nexport interface ILineLogin {\n    token: string;\n    refreshToken: string;\n    tokenId: string;\n    inviteId?: string;\n}\n\nexport interface ILineSignup {\n    token: string;\n    refreshToken: string;\n    tokenId: string;\n    inviteId?: string;\n}\n\nexport interface IFBLogin {\n    token: string;\n    userId: string;\n}\n\nexport interface IFBSignup {\n    token: string;\n    userId: string;\n    inviteId?: string;\n}\n\nexport interface IGGLogin {\n    token: string;\n}\n\nexport interface IGGSignup {\n    token: string;\n    inviteId?: string;\n}\n\nexport interface IAccountName {\n    accountName: string | undefined;\n}\n\nexport interface ILineState {\n    type: enumExternalAuthType;\n    inviteId?: string;\n}\n\nexport interface IExternalAuthState {\n    type: enumExternalAuthType;\n    inviteId?: string;\n}\n\nexport interface IEmailForm {\n    password: string;\n    conformPassword?: string;\n    fullName: string;\n    tel: string;\n    dateOrBirth: string | Date;\n    acceptTermsAndConditions?: boolean;\n}\n\nexport interface ISocialMedia {\n    fullName: string;\n    tel: string;\n    dateOrBirth: string | Date;\n    acceptTermsAndConditions?: boolean;\n    email: string;\n}\n\nexport interface IResetPassword {\n    password: string;\n    conformPassword?: string;\n    resetPasswordId?: string;\n    email?: string;\n}\n"]},"metadata":{},"sourceType":"module"}