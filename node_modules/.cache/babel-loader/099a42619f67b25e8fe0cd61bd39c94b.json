{"ast":null,"code":"import _regeneratorRuntime from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useFormik}from\"formik\";import*as Yup from\"yup\";import{useDispatch}from\"react-redux\";import{useHistory}from\"react-router\";import{ComponentPasswordEmail}from\"@components\";import{useYup}from\"@validations\";import{authApi}from\"@api\";import{setLoading}from\"@redux\";import{useNotify}from\"@utils\";import{PATH_SIGN_IN}from\"@configs\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ModuleEmailResetPassword=function ModuleEmailResetPassword(){//page hooks\nvar _useYup=useYup(),YubEmailSignUp=_useYup.YubEmailSignUp;var dispatch=useDispatch();var _useNotify=useNotify(),error=_useNotify.error,success=_useNotify.success;var history=useHistory();//page variable\nvar initialValues={email:\"\"};var registerSchema=Yup.object().shape(YubEmailSignUp);var handleRegister=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setSubmitting,res,data,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref.setSubmitting;_context.prev=1;setSubmitting(true);dispatch(setLoading(true));_context.next=6;return authApi.sendResetPassword(values.email);case 6:res=_context.sent;data=res.data;if(data.success){success(data.message);history.push(PATH_SIGN_IN);}_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);message=_context.t0.response.data.message;error(message);case 15:_context.prev=15;setSubmitting(false);dispatch(setLoading(false));return _context.finish(15);case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,11,15,19]]);}));return function handleRegister(_x,_x2){return _ref2.apply(this,arguments);};}();var _useFormik=useFormik({initialValues:initialValues,validationSchema:registerSchema,onSubmit:handleRegister}),values=_useFormik.values,handleChange=_useFormik.handleChange,handleBlur=_useFormik.handleBlur,handleSubmit=_useFormik.handleSubmit,isSubmitting=_useFormik.isSubmitting,errors=_useFormik.errors,touched=_useFormik.touched;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(ComponentPasswordEmail,{handleBlur:handleBlur,handleChange:handleChange,errors:errors,touched:touched,values:values,handleSubmit:handleSubmit,isSubmitting:isSubmitting})});};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/email/ResetPassword.tsx"],"names":["useFormik","Yup","useDispatch","useHistory","ComponentPasswordEmail","useYup","authApi","setLoading","useNotify","PATH_SIGN_IN","ModuleEmailResetPassword","YubEmailSignUp","dispatch","error","success","history","initialValues","email","registerSchema","object","shape","handleRegister","values","setSubmitting","sendResetPassword","res","data","message","push","response","validationSchema","onSubmit","handleChange","handleBlur","handleSubmit","isSubmitting","errors","touched"],"mappings":"2UAAA,OAASA,SAAT,KAAyC,QAAzC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA,OAASC,sBAAT,KAAuC,aAAvC,CAEA,OAASC,MAAT,KAAuB,cAAvB,CACA,OAASC,OAAT,KAAwB,MAAxB,CACA,OAASC,UAAT,KAA2B,QAA3B,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAASC,YAAT,KAA6B,UAA7B,C,gGAEA,MAAO,IAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,EAAM,CAC1C;AACA,YAA2BL,MAAM,EAAjC,CAAQM,cAAR,SAAQA,cAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,eAA2BM,SAAS,EAApC,CAAQK,KAAR,YAAQA,KAAR,CAAeC,OAAf,YAAeA,OAAf,CACA,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CAEA;AACA,GAAMa,CAAAA,aAAqB,CAAG,CAC1BC,KAAK,CAAE,EADmB,CAA9B,CAGA,GAAMC,CAAAA,cAAc,CAAGjB,GAAG,CAACkB,MAAJ,GAAaC,KAAb,CAAmBT,cAAnB,CAAvB,CAEA,GAAMU,CAAAA,cAAc,2FAAG,iBAAOC,MAAP,0JAAyBC,aAAzB,MAAyBA,aAAzB,iBAGfA,aAAa,CAAC,IAAD,CAAb,CACAX,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR,CAJe,sBAKGD,CAAAA,OAAO,CAACkB,iBAAR,CAA0BF,MAAM,CAACL,KAAjC,CALH,QAKTQ,GALS,eAMTC,IANS,CAMFD,GAAG,CAACC,IANF,CAOf,GAAIA,IAAI,CAACZ,OAAT,CAAkB,CACdA,OAAO,CAACY,IAAI,CAACC,OAAN,CAAP,CACAZ,OAAO,CAACa,IAAR,CAAanB,YAAb,EACH,CAVc,iFAYPkB,OAZO,CAYK,YAAOE,QAAP,CAAgBH,IAZrB,CAYPC,OAZO,CAafd,KAAK,CAACc,OAAD,CAAL,CAbe,yBAefJ,aAAa,CAAC,KAAD,CAAb,CACAX,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR,CAhBe,sGAAH,kBAAdc,CAAAA,cAAc,iDAApB,CAoBA,eACIrB,SAAS,CAAC,CACNgB,aAAa,CAAEA,aADT,CAENc,gBAAgB,CAAEZ,cAFZ,CAGNa,QAAQ,CAAEV,cAHJ,CAAD,CADb,CAAQC,MAAR,YAAQA,MAAR,CAAgBU,YAAhB,YAAgBA,YAAhB,CAA8BC,UAA9B,YAA8BA,UAA9B,CAA0CC,YAA1C,YAA0CA,YAA1C,CAAwDC,YAAxD,YAAwDA,YAAxD,CAAsEC,MAAtE,YAAsEA,MAAtE,CAA8EC,OAA9E,YAA8EA,OAA9E,CAOA,mBACI,sCACI,KAAC,sBAAD,EACI,UAAU,CAAEJ,UADhB,CAEI,YAAY,CAAED,YAFlB,CAGI,MAAM,CAAEI,MAHZ,CAII,OAAO,CAAEC,OAJb,CAKI,MAAM,CAAEf,MALZ,CAMI,YAAY,CAAEY,YANlB,CAOI,YAAY,CAAEC,YAPlB,EADJ,EADJ,CAaH,CArDM","sourcesContent":["import { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { ComponentPasswordEmail } from \"@components\";\nimport { IEmail } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { PATH_SIGN_IN } from \"@configs\";\n\nexport const ModuleEmailResetPassword = () => {\n    //page hooks\n    const { YubEmailSignUp } = useYup();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const history = useHistory();\n\n    //page variable\n    const initialValues: IEmail = {\n        email: \"\",\n    };\n    const registerSchema = Yup.object().shape(YubEmailSignUp);\n\n    const handleRegister = async (values: IEmail, { setSubmitting }: FormikHelpers<IEmail>) => {\n        //\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const res = await authApi.sendResetPassword(values.email);\n            const data = res.data;\n            if (data.success) {\n                success(data.message);\n                history.push(PATH_SIGN_IN);\n            }\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            error(message);\n        } finally {\n            setSubmitting(false);\n            dispatch(setLoading(false));\n        }\n    };\n\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: initialValues,\n            validationSchema: registerSchema,\n            onSubmit: handleRegister,\n        });\n\n    return (\n        <>\n            <ComponentPasswordEmail\n                handleBlur={handleBlur}\n                handleChange={handleChange}\n                errors={errors}\n                touched={touched}\n                values={values}\n                handleSubmit={handleSubmit}\n                isSubmitting={isSubmitting}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}