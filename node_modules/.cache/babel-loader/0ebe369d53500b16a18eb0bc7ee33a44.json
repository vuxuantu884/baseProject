{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail, ComponentPopUpConfirm } from \"@components\";\nimport { enumStatus, enumTypes, enumValidation, PATH_HOME } from \"@configs\";\nimport { selectMerchant, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageBenefit = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    error,\n    success\n  } = useNotify();\n  const history = useHistory(); //redux state\n\n  const {\n    membershipTiers\n  } = useSelector(selectMerchant); //page state\n\n  const [benefit, setBenefit] = useState();\n  const [dataRanks, setDataRanks] = useState([]);\n  const [currentImage, setCurrentImage] = useState(enumValidation.NUMBER_ONE);\n  const [showConfirm, setShowConfirm] = useState(false); //page variable\n\n  const levelIds = benefit === null || benefit === void 0 ? void 0 : benefit.levelIds;\n  useEffect(() => {\n    if ((levelIds === null || levelIds === void 0 ? void 0 : levelIds.length) === 0) {\n      setDataRanks(membershipTiers || []);\n    } else {\n      levelIds === null || levelIds === void 0 ? void 0 : levelIds.forEach(item => {\n        //\n        const check = (membershipTiers === null || membershipTiers === void 0 ? void 0 : membershipTiers.findIndex(value => value._id === item)) || 0;\n\n        if (check >= 0 && membershipTiers) {\n          dataRanks.push(membershipTiers[check]);\n        }\n      });\n      setDataRanks([...dataRanks]);\n    }\n  }, [benefit]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getDetailBenefitById(id);\n      const data = res.data;\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await benefitApi.redeemed({\n        objectId: (benefit === null || benefit === void 0 ? void 0 : benefit._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.BENEFIT\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n\n      history.push(PATH_HOME);\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.use_coupon.fail\"));\n      }\n\n      history.push(PATH_HOME);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleChangeImage = swiper => {\n    setCurrentImage(swiper.realIndex + 1);\n  };\n\n  const handleToggleConfirm = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [benefit && /*#__PURE__*/_jsxDEV(ComponentBenefitDetail, {\n      data: benefit,\n      handleClick: handleClick,\n      dataRanks: dataRanks,\n      handleChangeImage: handleChangeImage,\n      currentImage: currentImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), showConfirm && benefit && /*#__PURE__*/_jsxDEV(ComponentPopUpConfirm, {\n      handleCloseDetail: handleToggleConfirm,\n      data: benefit,\n      handleConfirm: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PageBenefit, \"o12Wgn3sdbKGFtAFreUWiwBRlG0=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useNotify, useHistory, useSelector];\n});\n\n_c = PageBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","useParams","useTranslation","benefitApi","ComponentBenefitDetail","ComponentPopUpConfirm","enumStatus","enumTypes","enumValidation","PATH_HOME","selectMerchant","setLoading","useNotify","PageBenefit","t","dispatch","id","error","success","history","membershipTiers","benefit","setBenefit","dataRanks","setDataRanks","currentImage","setCurrentImage","NUMBER_ONE","showConfirm","setShowConfirm","levelIds","length","forEach","item","check","findIndex","value","_id","push","res","getDetailBenefitById","data","handleClick","redeemed","objectId","status","ACTIVE","type","BENEFIT","message","err","response","handleChangeImage","swiper","realIndex","handleToggleConfirm"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,aAA9D;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,cAAhC,EAAgDC,SAAhD,QAAiE,UAAjE;AAEA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,QAA3C;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AACA,QAAMa,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAASf,SAAS,EAAxB;AACA,QAAM;AAAEgB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBN,SAAS,EAApC;AACA,QAAMO,OAAO,GAAGnB,UAAU,EAA1B,CAN6B,CAO7B;;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAsBrB,WAAW,CAACW,cAAD,CAAvC,CAR6B,CAS7B;;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,EAAtC;AACA,QAAM,CAAC0B,SAAD,EAAYC,YAAZ,IAA4B3B,QAAQ,CAAoB,EAApB,CAA1C;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAASW,cAAc,CAACmB,UAAxB,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAU,KAAV,CAA9C,CAb6B,CAc7B;;AACA,QAAMiC,QAAQ,GAAGT,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAES,QAA1B;AAEAlC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAAkC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqB,CAAzB,EAA4B;AACxBP,MAAAA,YAAY,CAACJ,eAAe,IAAI,EAApB,CAAZ;AACH,KAFD,MAEO;AACHU,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,OAAV,CAAmBC,IAAD,IAAU;AACxB;AACA,cAAMC,KAAK,GAAG,CAAAd,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEe,SAAjB,CAA4BC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcJ,IAApD,MAA6D,CAA3E;;AACA,YAAIC,KAAK,IAAI,CAAT,IAAcd,eAAlB,EAAmC;AAC/BG,UAAAA,SAAS,CAACe,IAAV,CAAelB,eAAe,CAACc,KAAD,CAA9B;AACH;AACJ,OAND;AAOAV,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,CAAD,CAAZ;AACH;AACJ,GAbQ,EAaN,CAACF,OAAD,CAbM,CAAT;AAeAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTmB,MAAAA,QAAQ,CAACJ,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAM4B,GAAG,GAAG,MAAMpC,UAAU,CAACqC,oBAAX,CAAgCxB,EAAhC,CAAlB;AACA,YAAMyB,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAnB,MAAAA,UAAU,CAACmB,IAAD,CAAV;AAEA1B,MAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAM+B,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA3B,MAAAA,QAAQ,CAACJ,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAM4B,GAAG,GAAG,MAAMpC,UAAU,CAACwC,QAAX,CAAoB;AAClCC,QAAAA,QAAQ,EAAE,CAAAvB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEgB,GAAT,KAAgB,EADQ;AAElCQ,QAAAA,MAAM,EAAEvC,UAAU,CAACwC,MAFe;AAGlCC,QAAAA,IAAI,EAAExC,SAAS,CAACyC;AAHkB,OAApB,CAAlB;;AAKA,UAAIT,GAAG,CAACE,IAAJ,CAASQ,OAAb,EAAsB;AAClB/B,QAAAA,OAAO,CAACqB,GAAG,CAACE,IAAJ,CAASQ,OAAV,CAAP;AACH;;AACD9B,MAAAA,OAAO,CAACmB,IAAR,CAAa7B,SAAb;AACH,KAXD,CAWE,OAAOyC,GAAP,EAAiB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAcC,GAAG,CAACC,QAAJ,CAAaV,IAAjC;;AACA,UAAIQ,OAAJ,EAAa;AACThC,QAAAA,KAAK,CAACgC,OAAD,CAAL;AACH,OAFD,MAEO;AACHhC,QAAAA,KAAK,CAACH,CAAC,CAAC,yBAAD,CAAF,CAAL;AACH;;AACDK,MAAAA,OAAO,CAACmB,IAAR,CAAa7B,SAAb;AACH,KAnBD,SAmBU;AACNM,MAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAvBD;;AAyBA,QAAMyC,iBAAiB,GAAIC,MAAD,IAAwB;AAC9C3B,IAAAA,eAAe,CAAC2B,MAAM,CAACC,SAAP,GAAmB,CAApB,CAAf;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAC9B1B,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACH,GAFD;;AAIA,sBACI;AAAA,eACKP,OAAO,iBACJ,QAAC,sBAAD;AACI,MAAA,IAAI,EAAEA,OADV;AAEI,MAAA,WAAW,EAAEqB,WAFjB;AAGI,MAAA,SAAS,EAAEnB,SAHf;AAII,MAAA,iBAAiB,EAAE6B,iBAJvB;AAKI,MAAA,YAAY,EAAE3B;AALlB;AAAA;AAAA;AAAA;AAAA,YAFR,EAUKG,WAAW,IAAIP,OAAf,iBACG,QAAC,qBAAD;AACI,MAAA,iBAAiB,EAAEkC,mBADvB;AAEI,MAAA,IAAI,EAAElC,OAFV;AAGI,MAAA,aAAa,EAAEqB;AAHnB;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA,kBADJ;AAoBH,CAhGM;;GAAM7B,W;UAEKX,c,EACGJ,W,EACFG,S,EACYW,S,EACXZ,U,EAEYD,W;;;KARnBc,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport SwiperCore from \"swiper\";\n\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail, ComponentPopUpConfirm } from \"@components\";\nimport { enumStatus, enumTypes, enumValidation, PATH_HOME } from \"@configs\";\nimport { IBenefit, IMembershipTier } from \"@interfaces\";\nimport { selectMerchant, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageBenefit = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const { error, success } = useNotify();\n    const history = useHistory();\n    //redux state\n    const { membershipTiers } = useSelector(selectMerchant);\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit>();\n    const [dataRanks, setDataRanks] = useState<IMembershipTier[]>([]);\n    const [currentImage, setCurrentImage] = useState<number>(enumValidation.NUMBER_ONE);\n    const [showConfirm, setShowConfirm] = useState<boolean>(false);\n    //page variable\n    const levelIds = benefit?.levelIds;\n\n    useEffect(() => {\n        if (levelIds?.length === 0) {\n            setDataRanks(membershipTiers || []);\n        } else {\n            levelIds?.forEach((item) => {\n                //\n                const check = membershipTiers?.findIndex((value) => value._id === item) || 0;\n                if (check >= 0 && membershipTiers) {\n                    dataRanks.push(membershipTiers[check]);\n                }\n            });\n            setDataRanks([...dataRanks]);\n        }\n    }, [benefit]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getDetailBenefitById(id);\n            const data = res.data as IBenefit;\n            setBenefit(data);\n\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await benefitApi.redeemed({\n                objectId: benefit?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.BENEFIT,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n            }\n            history.push(PATH_HOME);\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.use_coupon.fail\"));\n            }\n            history.push(PATH_HOME);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleChangeImage = (swiper: SwiperCore) => {\n        setCurrentImage(swiper.realIndex + 1);\n    };\n\n    const handleToggleConfirm = () => {\n        setShowConfirm(!showConfirm);\n    };\n\n    return (\n        <>\n            {benefit && (\n                <ComponentBenefitDetail\n                    data={benefit}\n                    handleClick={handleClick}\n                    dataRanks={dataRanks}\n                    handleChangeImage={handleChangeImage}\n                    currentImage={currentImage}\n                />\n            )}\n            {showConfirm && benefit && (\n                <ComponentPopUpConfirm\n                    handleCloseDetail={handleToggleConfirm}\n                    data={benefit as IBenefit}\n                    handleConfirm={handleClick}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}