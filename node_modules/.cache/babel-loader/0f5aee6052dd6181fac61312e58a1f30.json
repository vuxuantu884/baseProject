{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Free-point.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { freePointApi, merchantApi } from \"@api\";\nimport { ComponentFreePointDetail, ComponentPopUpConfirm } from \"@components\";\nimport { PATH_404, enumStatus, enumTypes, PATH_HOME, PATH_SIGN_IN, enumValidation } from \"@configs\";\nimport { selectAuth, setExternalTypes, setLoading, setMainColor, setMerchant, setMerchantID, setToggleConfirm } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageFreePoint = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const {\n    error,\n    success\n  } = useNotify(); //page redux\n\n  const {\n    auth,\n    externalType,\n    showConfirm\n  } = useSelector(selectAuth); //page state\n\n  const [freePoint, setFreePoint] = useState();\n  const [currentImage, setCurrentImage] = useState(enumValidation.NUMBER_ONE); //page variable\n\n  const token = auth === null || auth === void 0 ? void 0 : auth.accessToken;\n  useEffect(_s(() => {\n    _s();\n\n    useFreePoint();\n  }, \"PoOj47Ga9rxCNfXp+SwoyqaV5ME=\", false, function () {\n    return [useFreePoint];\n  }), []);\n\n  const useFreePoint = async () => {\n    try {\n      dispatch(setLoading(true));\n\n      if (id) {\n        if (token) {\n          const res = await freePointApi.getPreviewFreePoint(id);\n          const data = res.data;\n          setFreePoint(data);\n          dispatch(setExternalTypes({\n            type: (externalType === null || externalType === void 0 ? void 0 : externalType.type) || enumTypes.FREE_POINT,\n            id: \"\"\n          }));\n        } else {\n          const res = await merchantApi.getFreePointId(id);\n          const data = res.data;\n          dispatch(setMerchantID(data.merchantId));\n          const merchantConfig = await merchantApi.getMerchantConfig();\n          const merchant = merchantConfig.data.merchant;\n          dispatch(setMerchant(merchant));\n          dispatch(setMainColor(merchant.themeColor));\n          dispatch(setExternalTypes({\n            type: enumTypes.COUPON,\n            id\n          }));\n          history.push(PATH_SIGN_IN);\n        }\n      } else {\n        history.push(PATH_404);\n      }\n    } catch {\n      history.push(PATH_404);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleRedeemedFreePoint = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await freePointApi.redeemedFreePoint({\n        objectId: (freePoint === null || freePoint === void 0 ? void 0 : freePoint._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.FREE_POINT\n      }, id);\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.received.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n      history.push(PATH_HOME);\n    }\n  };\n\n  const handleToggleConfirm = () => {\n    dispatch(setToggleConfirm());\n  };\n\n  const handleChangeImage = swiper => {\n    setCurrentImage(swiper.realIndex + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [freePoint && /*#__PURE__*/_jsxDEV(ComponentFreePointDetail, {\n      freePoint: freePoint,\n      handleToggleConfirm: handleToggleConfirm,\n      handleChangeImage: handleChangeImage,\n      currentImage: currentImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this), showConfirm && freePoint && /*#__PURE__*/_jsxDEV(ComponentPopUpConfirm, {\n      handleCloseDetail: handleToggleConfirm,\n      data: freePoint,\n      handleConfirm: handleRedeemedFreePoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(PageFreePoint, \"pOypI76VXcDfUVHbwtR4DMb5oVY=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useHistory, useNotify, useSelector];\n});\n\n_c = PageFreePoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageFreePoint\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Free-point.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","useParams","useTranslation","freePointApi","merchantApi","ComponentFreePointDetail","ComponentPopUpConfirm","PATH_404","enumStatus","enumTypes","PATH_HOME","PATH_SIGN_IN","enumValidation","selectAuth","setExternalTypes","setLoading","setMainColor","setMerchant","setMerchantID","setToggleConfirm","useNotify","PageFreePoint","t","dispatch","id","history","error","success","auth","externalType","showConfirm","freePoint","setFreePoint","currentImage","setCurrentImage","NUMBER_ONE","token","accessToken","useFreePoint","res","getPreviewFreePoint","data","type","FREE_POINT","getFreePointId","merchantId","merchantConfig","getMerchantConfig","merchant","themeColor","COUPON","push","handleRedeemedFreePoint","redeemedFreePoint","objectId","_id","status","ACTIVE","message","err","response","handleToggleConfirm","handleChangeImage","swiper","realIndex"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,MAA1C;AACA,SAASC,wBAAT,EAAmCC,qBAAnC,QAAgE,aAAhE;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,EAA0CC,SAA1C,EAAqDC,YAArD,EAAmEC,cAAnE,QAAyF,UAAzF;AAEA,SACIC,UADJ,EAEIC,gBAFJ,EAGIC,UAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,aANJ,EAOIC,gBAPJ,QAQO,QARP;AASA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAAA;;AAC/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQpB,cAAc,EAA5B;AACA,QAAMqB,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM;AAAE0B,IAAAA;AAAF,MAASvB,SAAS,EAAxB;AACA,QAAMwB,OAAO,GAAGzB,UAAU,EAA1B;AACA,QAAM;AAAE0B,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBP,SAAS,EAApC,CAN+B,CAO/B;;AACA,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,MAAsC/B,WAAW,CAACc,UAAD,CAAvD,CAR+B,CAS/B;;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnC,QAAQ,EAA1C;AACA,QAAM,CAACoC,YAAD,EAAeC,eAAf,IAAkCrC,QAAQ,CAASe,cAAc,CAACuB,UAAxB,CAAhD,CAX+B,CAY/B;;AACA,QAAMC,KAAK,GAAGR,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAES,WAApB;AAEAzC,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZ0C,IAAAA,YAAY;AACf,GAFQ;AAAA,YACLA,YADK;AAAA,MAEN,EAFM,CAAT;;AAIA,QAAMA,YAAY,GAAG,YAAY;AAC7B,QAAI;AACAf,MAAAA,QAAQ,CAACR,UAAU,CAAC,IAAD,CAAX,CAAR;;AACA,UAAIS,EAAJ,EAAQ;AACJ,YAAIY,KAAJ,EAAW;AACP,gBAAMG,GAAG,GAAG,MAAMpC,YAAY,CAACqC,mBAAb,CAAiChB,EAAjC,CAAlB;AACA,gBAAMiB,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAT,UAAAA,YAAY,CAACS,IAAD,CAAZ;AACAlB,UAAAA,QAAQ,CACJT,gBAAgB,CAAC;AACb4B,YAAAA,IAAI,EAAE,CAAAb,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEa,IAAd,KAAsBjC,SAAS,CAACkC,UADzB;AAEbnB,YAAAA,EAAE,EAAE;AAFS,WAAD,CADZ,CAAR;AAMH,SAVD,MAUO;AACH,gBAAMe,GAAG,GAAG,MAAMnC,WAAW,CAACwC,cAAZ,CAA2BpB,EAA3B,CAAlB;AACA,gBAAMiB,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAlB,UAAAA,QAAQ,CAACL,aAAa,CAACuB,IAAI,CAACI,UAAN,CAAd,CAAR;AACA,gBAAMC,cAAc,GAAG,MAAM1C,WAAW,CAAC2C,iBAAZ,EAA7B;AACA,gBAAMC,QAAQ,GAAGF,cAAc,CAACL,IAAf,CAAoBO,QAArC;AACAzB,UAAAA,QAAQ,CAACN,WAAW,CAAC+B,QAAD,CAAZ,CAAR;AACAzB,UAAAA,QAAQ,CAACP,YAAY,CAACgC,QAAQ,CAACC,UAAV,CAAb,CAAR;AACA1B,UAAAA,QAAQ,CAACT,gBAAgB,CAAC;AAAE4B,YAAAA,IAAI,EAAEjC,SAAS,CAACyC,MAAlB;AAA0B1B,YAAAA;AAA1B,WAAD,CAAjB,CAAR;AACAC,UAAAA,OAAO,CAAC0B,IAAR,CAAaxC,YAAb;AACH;AACJ,OAtBD,MAsBO;AACHc,QAAAA,OAAO,CAAC0B,IAAR,CAAa5C,QAAb;AACH;AACJ,KA3BD,CA2BE,MAAM;AACJkB,MAAAA,OAAO,CAAC0B,IAAR,CAAa5C,QAAb;AACH,KA7BD,SA6BU;AACNgB,MAAAA,QAAQ,CAACR,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAjCD;;AAmCA,QAAMqC,uBAAuB,GAAG,YAAY;AACxC,QAAI;AACA7B,MAAAA,QAAQ,CAACR,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMwB,GAAG,GAAG,MAAMpC,YAAY,CAACkD,iBAAb,CACd;AACIC,QAAAA,QAAQ,EAAE,CAAAvB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEwB,GAAX,KAAkB,EADhC;AAEIC,QAAAA,MAAM,EAAEhD,UAAU,CAACiD,MAFvB;AAGIf,QAAAA,IAAI,EAAEjC,SAAS,CAACkC;AAHpB,OADc,EAMdnB,EANc,CAAlB;;AAQA,UAAIe,GAAG,CAACE,IAAJ,CAASiB,OAAb,EAAsB;AAClB/B,QAAAA,OAAO,CAACY,GAAG,CAACE,IAAJ,CAASiB,OAAV,CAAP;AACH;AACJ,KAbD,CAaE,OAAOC,GAAP,EAAiB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAcC,GAAG,CAACC,QAAJ,CAAanB,IAAjC;;AACA,UAAIiB,OAAJ,EAAa;AACThC,QAAAA,KAAK,CAACgC,OAAD,CAAL;AACH,OAFD,MAEO;AACHhC,QAAAA,KAAK,CAACJ,CAAC,CAAC,uBAAD,CAAF,CAAL;AACH;AACJ,KApBD,SAoBU;AACNC,MAAAA,QAAQ,CAACR,UAAU,CAAC,KAAD,CAAX,CAAR;AACAU,MAAAA,OAAO,CAAC0B,IAAR,CAAazC,SAAb;AACH;AACJ,GAzBD;;AA2BA,QAAMmD,mBAAmB,GAAG,MAAM;AAC9BtC,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,GAFD;;AAGA,QAAM2C,iBAAiB,GAAIC,MAAD,IAAwB;AAC9C7B,IAAAA,eAAe,CAAC6B,MAAM,CAACC,SAAP,GAAmB,CAApB,CAAf;AACH,GAFD;;AAIA,sBACI;AAAA,eACKjC,SAAS,iBACN,QAAC,wBAAD;AACI,MAAA,SAAS,EAAEA,SADf;AAEI,MAAA,mBAAmB,EAAE8B,mBAFzB;AAGI,MAAA,iBAAiB,EAAEC,iBAHvB;AAII,MAAA,YAAY,EAAE7B;AAJlB;AAAA;AAAA;AAAA;AAAA,YAFR,EAUKH,WAAW,IAAIC,SAAf,iBACG,QAAC,qBAAD;AACI,MAAA,iBAAiB,EAAE8B,mBADvB;AAEI,MAAA,IAAI,EAAE9B,SAFV;AAGI,MAAA,aAAa,EAAEqB;AAHnB;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA,kBADJ;AAoBH,CA5GM;;IAAM/B,a;UAEKnB,c,EACGJ,W,EACFG,S,EACCD,U,EACWoB,S,EAEiBrB,W;;;KARnCsB,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport SwiperCore from \"swiper\";\n\nimport { freePointApi, merchantApi } from \"@api\";\nimport { ComponentFreePointDetail, ComponentPopUpConfirm } from \"@components\";\nimport { PATH_404, enumStatus, enumTypes, PATH_HOME, PATH_SIGN_IN, enumValidation } from \"@configs\";\nimport { IFreePoint, IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport {\n    selectAuth,\n    setExternalTypes,\n    setLoading,\n    setMainColor,\n    setMerchant,\n    setMerchantID,\n    setToggleConfirm,\n} from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageFreePoint = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const { error, success } = useNotify();\n    //page redux\n    const { auth, externalType, showConfirm } = useSelector(selectAuth);\n    //page state\n    const [freePoint, setFreePoint] = useState<IFreePoint>();\n    const [currentImage, setCurrentImage] = useState<number>(enumValidation.NUMBER_ONE);\n    //page variable\n    const token = auth?.accessToken;\n\n    useEffect(() => {\n        useFreePoint();\n    }, []);\n\n    const useFreePoint = async () => {\n        try {\n            dispatch(setLoading(true));\n            if (id) {\n                if (token) {\n                    const res = await freePointApi.getPreviewFreePoint(id);\n                    const data = res.data as IFreePoint;\n                    setFreePoint(data);\n                    dispatch(\n                        setExternalTypes({\n                            type: externalType?.type || enumTypes.FREE_POINT,\n                            id: \"\",\n                        })\n                    );\n                } else {\n                    const res = await merchantApi.getFreePointId(id);\n                    const data = res.data as IMerchantQRcode;\n                    dispatch(setMerchantID(data.merchantId));\n                    const merchantConfig = await merchantApi.getMerchantConfig();\n                    const merchant = merchantConfig.data.merchant as IMerchant;\n                    dispatch(setMerchant(merchant));\n                    dispatch(setMainColor(merchant.themeColor));\n                    dispatch(setExternalTypes({ type: enumTypes.COUPON, id }));\n                    history.push(PATH_SIGN_IN);\n                }\n            } else {\n                history.push(PATH_404);\n            }\n        } catch {\n            history.push(PATH_404);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleRedeemedFreePoint = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await freePointApi.redeemedFreePoint(\n                {\n                    objectId: freePoint?._id || \"\",\n                    status: enumStatus.ACTIVE,\n                    type: enumTypes.FREE_POINT,\n                },\n                id\n            );\n            if (res.data.message) {\n                success(res.data.message);\n            }\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.received.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n            history.push(PATH_HOME);\n        }\n    };\n\n    const handleToggleConfirm = () => {\n        dispatch(setToggleConfirm());\n    };\n    const handleChangeImage = (swiper: SwiperCore) => {\n        setCurrentImage(swiper.realIndex + 1);\n    };\n\n    return (\n        <>\n            {freePoint && (\n                <ComponentFreePointDetail\n                    freePoint={freePoint}\n                    handleToggleConfirm={handleToggleConfirm}\n                    handleChangeImage={handleChangeImage}\n                    currentImage={currentImage}\n                />\n            )}\n\n            {showConfirm && freePoint && (\n                <ComponentPopUpConfirm\n                    handleCloseDetail={handleToggleConfirm}\n                    data={freePoint as IFreePoint}\n                    handleConfirm={handleRedeemedFreePoint}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}