{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail } from \"@components\";\nimport { enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageBenefit = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    error,\n    success\n  } = useNotify();\n  const history = useHistory(); //page state\n\n  const [benefit, setBenefit] = useState();\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getDetailBenefitById(id);\n      const data = res.data;\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await benefitApi.redeemed({\n        objectId: (benefit === null || benefit === void 0 ? void 0 : benefit._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.BENEFIT\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n\n      history.push(PATH_HOME);\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.use_coupon.fail\"));\n      }\n\n      history.push(PATH_HOME);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: benefit && /*#__PURE__*/_jsxDEV(ComponentBenefitDetail, {\n      data: benefit,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 26\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageBenefit, \"tp7gsRzVN5trb4saU137rexTHCI=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useNotify, useHistory];\n});\n\n_c = PageBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useHistory","useParams","useTranslation","benefitApi","ComponentBenefitDetail","enumStatus","enumTypes","PATH_HOME","setLoading","useNotify","PageBenefit","t","dispatch","id","error","success","history","benefit","setBenefit","res","getDetailBenefitById","data","handleClick","redeemed","objectId","_id","status","ACTIVE","type","BENEFIT","message","push","err","response"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,sBAAT,QAAuC,aAAvC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,SAAhC,QAAiD,UAAjD;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQT,cAAc,EAA5B;AACA,QAAMU,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAASZ,SAAS,EAAxB;AACA,QAAM;AAAEa,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBN,SAAS,EAApC;AACA,QAAMO,OAAO,GAAGhB,UAAU,EAA1B,CAN6B,CAQ7B;;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTe,MAAAA,QAAQ,CAACJ,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMW,GAAG,GAAG,MAAMhB,UAAU,CAACiB,oBAAX,CAAgCP,EAAhC,CAAlB;AACA,YAAMQ,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAH,MAAAA,UAAU,CAACG,IAAD,CAAV;AAEAT,MAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMc,WAAW,GAAG,YAAY;AAC5B,QAAI;AACAV,MAAAA,QAAQ,CAACJ,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMW,GAAG,GAAG,MAAMhB,UAAU,CAACoB,QAAX,CAAoB;AAClCC,QAAAA,QAAQ,EAAE,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,GAAT,KAAgB,EADQ;AAElCC,QAAAA,MAAM,EAAErB,UAAU,CAACsB,MAFe;AAGlCC,QAAAA,IAAI,EAAEtB,SAAS,CAACuB;AAHkB,OAApB,CAAlB;;AAKA,UAAIV,GAAG,CAACE,IAAJ,CAASS,OAAb,EAAsB;AAClBf,QAAAA,OAAO,CAACI,GAAG,CAACE,IAAJ,CAASS,OAAV,CAAP;AACH;;AACDd,MAAAA,OAAO,CAACe,IAAR,CAAaxB,SAAb;AACH,KAXD,CAWE,OAAOyB,GAAP,EAAiB;AACf,YAAM;AAAEF,QAAAA;AAAF,UAAcE,GAAG,CAACC,QAAJ,CAAaZ,IAAjC;;AACA,UAAIS,OAAJ,EAAa;AACThB,QAAAA,KAAK,CAACgB,OAAD,CAAL;AACH,OAFD,MAEO;AACHhB,QAAAA,KAAK,CAACH,CAAC,CAAC,yBAAD,CAAF,CAAL;AACH;;AACDK,MAAAA,OAAO,CAACe,IAAR,CAAaxB,SAAb;AACH,KAnBD,SAmBU;AACNK,MAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAvBD;;AAyBA,sBAAO;AAAA,cAAGS,OAAO,iBAAI,QAAC,sBAAD;AAAwB,MAAA,IAAI,EAAEA,OAA9B;AAAuC,MAAA,WAAW,EAAEK;AAApD;AAAA;AAAA;AAAA;AAAA;AAAd,mBAAP;AACH,CAhDM;;GAAMZ,W;UAEKR,c,EACGH,W,EACFE,S,EACYQ,S,EACXT,U;;;KANPU,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail } from \"@components\";\nimport { enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { IBenefit } from \"@interfaces\";\nimport { setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageBenefit = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const { error, success } = useNotify();\n    const history = useHistory();\n\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit>();\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getDetailBenefitById(id);\n            const data = res.data as IBenefit;\n            setBenefit(data);\n\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await benefitApi.redeemed({\n                objectId: benefit?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.BENEFIT,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n            }\n            history.push(PATH_HOME);\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.use_coupon.fail\"));\n            }\n            history.push(PATH_HOME);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    return <>{benefit && <ComponentBenefitDetail data={benefit} handleClick={handleClick} />}</>;\n};\n"]},"metadata":{},"sourceType":"module"}