{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/InputTel.tsx\",\n    _s = $RefreshSig$();\n\nimport IntlTelInput from \"react-intl-tel-input\";\nimport { useTranslation } from \"react-i18next\";\nimport { StyledError } from \"@components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SharedIntlTelInput = props => {\n  _s();\n\n  //page hooks\n  const {\n    t\n  } = useTranslation(); //page props\n\n  const {\n    setFieldTouched,\n    value,\n    isSubmitting,\n    errorPhone,\n    setFieldValue,\n    setError\n  } = props;\n\n  const handleSelectFlag = (currentNumber, selectedCountryData, fullNumber) => {\n    setFieldValue(\"phoneNumber\", currentNumber.replace(/(\\s|-)/g, \"\"));\n    setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n  };\n\n  const handleChangePhoneNumber = (isValid, value, selectedCountryData, fullNumber) => {\n    if (!isValid) setError(t(\"validation.isNumber\"));else {\n      setError(\"\");\n    }\n    setFieldValue(\"phoneNumber\", value);\n    setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IntlTelInput, {\n      defaultCountry: \"th\",\n      preferredCountries: [\"th\", \"vn\"],\n      fieldId: \"phoneNumber\",\n      fieldName: \"phoneNumber\",\n      onPhoneNumberChange: handleChangePhoneNumber,\n      onPhoneNumberBlur: () => {\n        setFieldTouched(value || \"\", true);\n      },\n      onSelectFlag: handleSelectFlag,\n      value: value,\n      disabled: isSubmitting,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), errorPhone && /*#__PURE__*/_jsxDEV(StyledError, {\n      visible: true,\n      children: errorPhone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SharedIntlTelInput, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = SharedIntlTelInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SharedIntlTelInput\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/InputTel.tsx"],"names":["IntlTelInput","useTranslation","StyledError","SharedIntlTelInput","props","t","setFieldTouched","value","isSubmitting","errorPhone","setFieldValue","setError","handleSelectFlag","currentNumber","selectedCountryData","fullNumber","replace","handleChangePhoneNumber","isValid"],"mappings":";;;AAAA,OAAOA,YAAP,MAA0C,sBAA1C;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;AAiBA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAmB;AAAA;;AACjD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B,CAFiD,CAGjD;;AACA,QAAM;AAAEK,IAAAA,eAAF;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA,UAAxC;AAAoDC,IAAAA,aAApD;AAAmEC,IAAAA;AAAnE,MAAgFP,KAAtF;;AAEA,QAAMQ,gBAAgB,GAAG,CACrBC,aADqB,EAErBC,mBAFqB,EAGrBC,UAHqB,KAIpB;AACDL,IAAAA,aAAa,CAAC,aAAD,EAAgBG,aAAa,CAACG,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAhB,CAAb;AACAN,IAAAA,aAAa,CAAC,OAAD,EAAUK,UAAU,CAACC,OAAX,CAAmB,SAAnB,EAA8B,EAA9B,CAAV,CAAb;AACH,GAPD;;AASA,QAAMC,uBAAuB,GAAG,CAC5BC,OAD4B,EAE5BX,KAF4B,EAG5BO,mBAH4B,EAI5BC,UAJ4B,KAK3B;AACD,QAAI,CAACG,OAAL,EAAcP,QAAQ,CAACN,CAAC,CAAC,qBAAD,CAAF,CAAR,CAAd,KACK;AACDM,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AAEDD,IAAAA,aAAa,CAAC,aAAD,EAAgBH,KAAhB,CAAb;AACAG,IAAAA,aAAa,CAAC,OAAD,EAAUK,UAAU,CAACC,OAAX,CAAmB,SAAnB,EAA8B,EAA9B,CAAV,CAAb;AACH,GAbD;;AAeA,sBACI;AAAA,4BACI,QAAC,YAAD;AACI,MAAA,cAAc,EAAE,IADpB;AAEI,MAAA,kBAAkB,EAAE,CAAC,IAAD,EAAO,IAAP,CAFxB;AAGI,MAAA,OAAO,EAAC,aAHZ;AAII,MAAA,SAAS,EAAC,aAJd;AAKI,MAAA,mBAAmB,EAAEC,uBALzB;AAMI,MAAA,iBAAiB,EAAE,MAAM;AACrBX,QAAAA,eAAe,CAACC,KAAK,IAAI,EAAV,EAAc,IAAd,CAAf;AACH,OARL;AASI,MAAA,YAAY,EAAEK,gBATlB;AAUI,MAAA,KAAK,EAAEL,KAVX;AAWI,MAAA,QAAQ,EAAEC,YAXd;AAYI,MAAA,SAAS,EAAE;AAZf;AAAA;AAAA;AAAA;AAAA,YADJ,EAeKC,UAAU,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AAAA,gBAA6BA;AAA7B;AAAA;AAAA;AAAA;AAAA,YAfnB;AAAA,kBADJ;AAmBH,CAjDM;;GAAMN,kB;UAEKF,c;;;KAFLE,kB","sourcesContent":["import IntlTelInput, { CountryData } from \"react-intl-tel-input\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { StyledError } from \"@components\";\nimport { FormikErrors } from \"formik\";\nimport { IUserSetting } from \"@interfaces\";\n\ninterface IProps {\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IUserSetting>>;\n    setFieldValue: any;\n    value: string;\n    isSubmitting: boolean;\n    errorPhone: string;\n    setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const SharedIntlTelInput = (props: IProps) => {\n    //page hooks\n    const { t } = useTranslation();\n    //page props\n    const { setFieldTouched, value, isSubmitting, errorPhone, setFieldValue, setError } = props;\n\n    const handleSelectFlag = (\n        currentNumber: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        setFieldValue(\"phoneNumber\", currentNumber.replace(/(\\s|-)/g, \"\"));\n        setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    const handleChangePhoneNumber = (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        if (!isValid) setError(t(\"validation.isNumber\"));\n        else {\n            setError(\"\");\n        }\n\n        setFieldValue(\"phoneNumber\", value);\n        setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    return (\n        <>\n            <IntlTelInput\n                defaultCountry={\"th\"}\n                preferredCountries={[\"th\", \"vn\"]}\n                fieldId=\"phoneNumber\"\n                fieldName=\"phoneNumber\"\n                onPhoneNumberChange={handleChangePhoneNumber}\n                onPhoneNumberBlur={() => {\n                    setFieldTouched(value || \"\", true);\n                }}\n                onSelectFlag={handleSelectFlag}\n                value={value}\n                disabled={isSubmitting}\n                autoFocus={true}\n            />\n            {errorPhone && <StyledError visible={true}>{errorPhone}</StyledError>}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}