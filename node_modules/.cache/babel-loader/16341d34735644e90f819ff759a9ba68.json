{"ast":null,"code":"import thunk from\"redux-thunk\";import{configureStore}from\"@reduxjs/toolkit\";import{persistStore,persistReducer}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";import{useDispatch,useSelector}from\"react-redux\";import reducer from\"./Slices\";var persistConfig={key:\"root\",storage:storage,whitelist:[\"theme\",\"auth\",\"merchant\"],blackList:[\"app\"]};var persistedReducer=persistReducer(persistConfig,reducer);var store=configureStore({reducer:persistedReducer,middleware:[thunk]});export var persistor=persistStore(store);export default store;// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport var useAppDispatch=function useAppDispatch(){return useDispatch();};export var useAppSelector=useSelector;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Redux/store.ts"],"names":["thunk","configureStore","persistStore","persistReducer","storage","useDispatch","useSelector","reducer","persistConfig","key","whitelist","blackList","persistedReducer","store","middleware","persistor","useAppDispatch","useAppSelector"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAA+BC,WAA/B,CAA4CC,WAA5C,KAA+D,aAA/D,CAEA,MAAOC,CAAAA,OAAP,KAAmC,UAAnC,CAEA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,GAAG,CAAE,MADa,CAElBL,OAAO,CAAPA,OAFkB,CAGlBM,SAAS,CAAE,CAAC,OAAD,CAAU,MAAV,CAAkB,UAAlB,CAHO,CAIlBC,SAAS,CAAE,CAAC,KAAD,CAJO,CAAtB,CAOA,GAAMC,CAAAA,gBAAgB,CAAGT,cAAc,CAACK,aAAD,CAAgBD,OAAhB,CAAvC,CAEA,GAAMM,CAAAA,KAAK,CAAGZ,cAAc,CAAC,CACzBM,OAAO,CAAEK,gBADgB,CAEzBE,UAAU,CAAE,CAACd,KAAD,CAFa,CAAD,CAA5B,CAKA,MAAO,IAAMe,CAAAA,SAAS,CAAGb,YAAY,CAACW,KAAD,CAA9B,CAIP,cAAeA,CAAAA,KAAf,CAEA;AACA,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMX,CAAAA,WAAW,EAAjB,EAAvB,CACP,MAAO,IAAMY,CAAAA,cAA+C,CAAGX,WAAxD","sourcesContent":["import thunk from \"redux-thunk\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nimport reducer, { RootState } from \"./Slices\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"theme\", \"auth\", \"merchant\"],\n    blackList: [\"app\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk],\n});\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"]},"metadata":{},"sourceType":"module"}