{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { rewardApi } from \"@api\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageReward = () => {\n  _s();\n\n  //page hooks\n  const {\n    id\n  } = useParams(); //page state\n\n  const [reward, setReward] = useState();\n  useEffect(() => {\n    (async () => {\n      if (id) {\n        const res = await rewardApi.getDetailById(id);\n        const data = res.data;\n        setReward(data);\n        console.log(res);\n      }\n    })();\n  }, []);\n  console.log(id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(PageReward, \"rjiDvyoT60qON5eGlWHd3MGG4hI=\", false, function () {\n  return [useParams];\n});\n\n_c = PageReward;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageReward\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Reward.tsx"],"names":["useEffect","useState","useParams","rewardApi","PageReward","id","reward","setReward","res","getDetailById","data","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAGA,SAASC,SAAT,QAA0B,MAA1B;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB,CAF4B,CAI5B;;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,UAAIK,EAAJ,EAAQ;AACJ,cAAMG,GAAG,GAAG,MAAML,SAAS,CAACM,aAAV,CAAwBJ,EAAxB,CAAlB;AACA,cAAMK,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAH,QAAAA,SAAS,CAACG,IAAD,CAAT;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH;AACJ,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWAG,EAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACA,sBAAO,qCAAP;AACH,CApBM;;GAAMD,U;UAEMF,S;;;KAFNE,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport { IReward } from \"@interfaces\";\nimport { rewardApi } from \"@api\";\n\nexport const PageReward = () => {\n    //page hooks\n    const { id } = useParams<{ id: string }>();\n\n    //page state\n    const [reward, setReward] = useState<IReward>();\n\n    useEffect(() => {\n        (async () => {\n            if (id) {\n                const res = await rewardApi.getDetailById(id);\n                const data = res.data as IReward;\n                setReward(data);\n                console.log(res);\n            }\n        })();\n    }, []);\n\n    console.log(id);\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}