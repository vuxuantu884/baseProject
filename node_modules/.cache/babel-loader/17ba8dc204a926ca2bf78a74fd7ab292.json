{"ast":null,"code":"import _regeneratorRuntime from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{useTranslation}from\"react-i18next\";import{useFormik}from\"formik\";import*as Yup from\"yup\";import{useDispatch,useSelector}from\"react-redux\";import{useHistory}from\"react-router\";import{ComponentFromTel}from\"@components\";import{DAYS,enumExternalMethod,MONTHS,PATH_HOME,YEARS}from\"@configs\";import{useYup}from\"@validations\";import{selectMerchant,setExternalLogin,setLoading}from\"@redux\";import{authApi}from\"@api\";import{useNotify}from\"@utils\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ModuleTel=function ModuleTel(){var _merchant$signUpSetti;//page hook\nvar _useTranslation=useTranslation(),t=_useTranslation.t;var _useYup=useYup(),YubEmailTelUpForm=_useYup.YubEmailTelUpForm;var dispatch=useDispatch();var history=useHistory();var _useNotify=useNotify(),error=_useNotify.error,success=_useNotify.success;//redux state\nvar merchant=useSelector(selectMerchant);//page state\nvar _useState=useState({day:\"\",month:\"\",year:\"\",error:\"\"}),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),surveyQuestions=_useState4[0],setSurveyQuestions=_useState4[1];//page variable\nvar daySelects=DAYS.map(function(item){return{id:item,label:item};});var monthSelects=MONTHS.map(function(item){return{id:item,label:item};});var yearSelects=YEARS.map(function(item){return{id:item,label:item};});var initialValues={fullName:\"\",dateOrBirth:\"\",acceptTermsAndConditions:false};var registerSchema=Yup.object().shape(YubEmailTelUpForm);var fields=(_merchant$signUpSetti=merchant.signUpSettings)===null||_merchant$signUpSetti===void 0?void 0:_merchant$signUpSetti.fields;useEffect(function(){var data=(fields===null||fields===void 0?void 0:fields.map(function(field){return{questionId:field._id||\"\",question:field.fieldName||\"\",answers:[],propertyName:field.propertyName};}))||[];setSurveyQuestions(_toConsumableArray(data));},[]);var handleChangeDay=function handleChangeDay(value){setDate(_objectSpread(_objectSpread({},date),{},{day:value,error:\"\"}));};var handleChangeMonth=function handleChangeMonth(value){setDate(_objectSpread(_objectSpread({},date),{},{month:value,error:\"\"}));};var handleChangeYear=function handleChangeYear(value){setDate(_objectSpread(_objectSpread({},date),{},{year:value,error:\"\"}));};var handleRegister=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setSubmitting,dateForm,res,errorsResponse;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref.setSubmitting;if(!(!date.day||!date.month||!date.year)){_context.next=4;break;}setDate(_objectSpread(_objectSpread({},date),{},{error:t(\"validation.is_required\")}));return _context.abrupt(\"return\");case 4:_context.prev=4;setSubmitting(true);dispatch(setLoading(true));dateForm=new Date(date.day+\"/\"+date.month+\"/\"+date.year);_context.next=10;return authApi.createPassword(_objectSpread(_objectSpread({},values),{},{dateOrBirth:dateForm,surveyQuestions:surveyQuestions}));case 10:res=_context.sent;if(res){success(t(\"message.sign_up.success\"));dispatch(setExternalLogin({type:enumExternalMethod.TEL,isSignUp:false}));history.push(PATH_HOME);}_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](4);errorsResponse=_context.t0.response.data.errors;if(Array.isArray(errorsResponse)&&errorsResponse.length){error(errorsResponse[0]);}else{error(t(\"message.sign_up.fail\"));}case 18:_context.prev=18;setSubmitting(false);dispatch(setLoading(false));return _context.finish(18);case 22:case\"end\":return _context.stop();}}},_callee,null,[[4,14,18,22]]);}));return function handleRegister(_x,_x2){return _ref2.apply(this,arguments);};}();var _useFormik=useFormik({initialValues:initialValues,validationSchema:registerSchema,onSubmit:handleRegister}),values=_useFormik.values,handleChange=_useFormik.handleChange,handleBlur=_useFormik.handleBlur,handleSubmit=_useFormik.handleSubmit,isSubmitting=_useFormik.isSubmitting,errors=_useFormik.errors,touched=_useFormik.touched;var handleChangeAnswerByIndex=function handleChangeAnswerByIndex(answer,index){if(Array.isArray(answer)){surveyQuestions[index].answers=answer;}else{surveyQuestions[index].answers=[answer];}setSurveyQuestions(_toConsumableArray(surveyQuestions));};return/*#__PURE__*/_jsx(ComponentFromTel,{handleBlur:handleBlur,handleChange:handleChange,errors:errors,touched:touched,values:values,isSubmitting:isSubmitting,handleSubmit:handleSubmit,days:daySelects,months:monthSelects,years:yearSelects,onChangeDay:handleChangeDay,onChangeMonth:handleChangeMonth,onChangeYear:handleChangeYear,date:date,surveyQuestions:surveyQuestions,handleChangeAnswerByIndex:handleChangeAnswerByIndex});};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/tel/Tel.tsx"],"names":["useEffect","useState","useTranslation","useFormik","Yup","useDispatch","useSelector","useHistory","ComponentFromTel","DAYS","enumExternalMethod","MONTHS","PATH_HOME","YEARS","useYup","selectMerchant","setExternalLogin","setLoading","authApi","useNotify","ModuleTel","t","YubEmailTelUpForm","dispatch","history","error","success","merchant","day","month","year","date","setDate","surveyQuestions","setSurveyQuestions","daySelects","map","item","id","label","monthSelects","yearSelects","initialValues","fullName","dateOrBirth","acceptTermsAndConditions","registerSchema","object","shape","fields","signUpSettings","data","field","questionId","_id","question","fieldName","answers","propertyName","handleChangeDay","value","handleChangeMonth","handleChangeYear","handleRegister","values","setSubmitting","dateForm","Date","createPassword","res","type","TEL","isSignUp","push","errorsResponse","response","errors","Array","isArray","length","validationSchema","onSubmit","handleChange","handleBlur","handleSubmit","isSubmitting","touched","handleChangeAnswerByIndex","answer","index"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FormikHelpers, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { ComponentFromTel } from \"@components\";\nimport { DAYS, enumExternalMethod, MONTHS, PATH_HOME, YEARS } from \"@configs\";\nimport { IDate, IEmailForm, ISelect, ISurveyQuestions } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { selectMerchant, setExternalLogin, setLoading } from \"@redux\";\nimport { authApi } from \"@api\";\nimport { useNotify } from \"@utils\";\n\nexport const ModuleTel = () => {\n    //page hook\n    const { t } = useTranslation();\n    const { YubEmailTelUpForm } = useYup();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { error, success } = useNotify();\n    //redux state\n    const merchant = useSelector(selectMerchant);\n    //page state\n    const [date, setDate] = useState<IDate>({\n        day: \"\",\n        month: \"\",\n        year: \"\",\n        error: \"\",\n    });\n    const [surveyQuestions, setSurveyQuestions] = useState<ISurveyQuestions[]>([]);\n    //page variable\n    const daySelects: ISelect[] = DAYS.map((item) => {\n        return {\n            id: item,\n            label: item,\n        };\n    });\n    const monthSelects: ISelect[] = MONTHS.map((item) => {\n        return {\n            id: item,\n            label: item,\n        };\n    });\n    const yearSelects: ISelect[] = YEARS.map((item) => {\n        return {\n            id: item,\n            label: item,\n        };\n    });\n\n    const initialValues: IEmailForm = {\n        fullName: \"\",\n        dateOrBirth: \"\",\n        acceptTermsAndConditions: false,\n    };\n    const registerSchema = Yup.object().shape(YubEmailTelUpForm);\n    const fields = merchant.signUpSettings?.fields;\n    useEffect(() => {\n        const data: ISurveyQuestions[] =\n            fields?.map((field) => {\n                return {\n                    questionId: field._id || \"\",\n                    question: field.fieldName || \"\",\n                    answers: [],\n                    propertyName: field.propertyName,\n                };\n            }) || [];\n        setSurveyQuestions([...data]);\n    }, []);\n\n    const handleChangeDay = (value: string) => {\n        setDate({\n            ...date,\n            day: value,\n            error: \"\",\n        });\n    };\n    const handleChangeMonth = (value: string) => {\n        setDate({\n            ...date,\n            month: value,\n            error: \"\",\n        });\n    };\n    const handleChangeYear = (value: string) => {\n        setDate({\n            ...date,\n            year: value,\n            error: \"\",\n        });\n    };\n\n    const handleRegister = async (\n        values: IEmailForm,\n        { setSubmitting }: FormikHelpers<IEmailForm>\n    ) => {\n        if (!date.day || !date.month || !date.year) {\n            setDate({\n                ...date,\n                error: t(\"validation.is_required\"),\n            });\n            return;\n        }\n\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const dateForm = new Date(date.day + \"/\" + date.month + \"/\" + date.year);\n            const res = await authApi.createPassword({\n                ...values,\n                dateOrBirth: dateForm,\n                surveyQuestions,\n            });\n            if (res) {\n                success(t(\"message.sign_up.success\"));\n                dispatch(setExternalLogin({ type: enumExternalMethod.TEL, isSignUp: false }));\n                history.push(PATH_HOME);\n            }\n        } catch (errors: any) {\n            const errorsResponse = errors.response.data.errors;\n            if (Array.isArray(errorsResponse) && errorsResponse.length) {\n                error(errorsResponse[0]);\n            } else {\n                error(t(\"message.sign_up.fail\"));\n            }\n        } finally {\n            setSubmitting(false);\n            dispatch(setLoading(false));\n        }\n    };\n\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: initialValues,\n            validationSchema: registerSchema,\n            onSubmit: handleRegister,\n        });\n\n    const handleChangeAnswerByIndex = (answer: string | string[], index: number) => {\n        if (Array.isArray(answer)) {\n            surveyQuestions[index].answers = answer;\n        } else {\n            surveyQuestions[index].answers = [answer];\n        }\n        setSurveyQuestions([...surveyQuestions]);\n    };\n\n    return (\n        <ComponentFromTel\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errors={errors}\n            touched={touched}\n            values={values}\n            isSubmitting={isSubmitting}\n            handleSubmit={handleSubmit}\n            days={daySelects}\n            months={monthSelects}\n            years={yearSelects}\n            onChangeDay={handleChangeDay}\n            onChangeMonth={handleChangeMonth}\n            onChangeYear={handleChangeYear}\n            date={date}\n            surveyQuestions={surveyQuestions}\n            handleChangeAnswerByIndex={handleChangeAnswerByIndex}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}