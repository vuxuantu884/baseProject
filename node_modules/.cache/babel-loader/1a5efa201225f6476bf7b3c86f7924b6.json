{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { useYup } from \"@validations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageUserSetting = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify();\n  const {\n    YubEmailSignIn\n  } = useYup(); //redux state\n\n  const {\n    userInfo\n  } = useSelector(selectAuth); //page state\n\n  const [title, setTitle] = useState(\"\");\n  const [user, setUser] = useState({\n    avatar: userInfo === null || userInfo === void 0 ? void 0 : userInfo.avatar,\n    fullName: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.fullName) || \"\",\n    dateOfBirth: \"11/11/2021\",\n    phoneNumber: \"0934270080\",\n    email: \"tuvu884884@gmail.com\"\n  });\n\n  const handleUploadImage = async e => {\n    dispatch(setLoading(true)); //@ts-ignore\n\n    const values = e.file;\n    const formData = new FormData();\n    formData.append(\"file\", values);\n\n    try {\n      const res = await merchantApi.uploadImage(formData);\n      console.log(res);\n      setUser({ ...user,\n        avatar: res.data\n      });\n    } catch (err) {\n      const data = err.response.data;\n      const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n      error(mess);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched\n  } = useFormik({\n    initialValues: user,\n    validationSchema: registerSchema,\n    onSubmit: handleLogin\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComponentUserSetting, {\n      handleUploadImage: handleUploadImage,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageUserSetting, \"0MdBBr0dSz53EKG5+8Zpk5GrxzM=\", false, function () {\n  return [useDispatch, useNotify, useYup, useSelector, useFormik];\n});\n\n_c = PageUserSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageUserSetting\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx"],"names":["useDispatch","useSelector","useState","useFormik","merchantApi","ComponentUserSetting","selectAuth","setLoading","useNotify","useYup","PageUserSetting","dispatch","error","YubEmailSignIn","userInfo","title","setTitle","user","setUser","avatar","fullName","dateOfBirth","phoneNumber","email","handleUploadImage","e","values","file","formData","FormData","append","res","uploadImage","console","log","data","err","response","mess","Array","isArray","errors","message","handleChange","handleBlur","handleSubmit","isSubmitting","touched","initialValues","validationSchema","registerSchema","onSubmit","handleLogin"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\n\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { IUserSetting } from \"@interfaces\";\nimport { useYup } from \"@validations\";\n\nexport const PageUserSetting = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    const { YubEmailSignIn } = useYup();\n\n    //redux state\n    const { userInfo } = useSelector(selectAuth);\n    //page state\n    const [title, setTitle] = useState<string>(\"\");\n    const [user, setUser] = useState<IUserSetting>({\n        avatar: userInfo?.avatar,\n        fullName: userInfo?.fullName || \"\",\n        dateOfBirth: \"11/11/2021\",\n        phoneNumber: \"0934270080\",\n        email: \"tuvu884884@gmail.com\",\n    });\n\n    const handleUploadImage = async (e: React.ChangeEventHandler<HTMLInputElement> | undefined) => {\n        dispatch(setLoading(true));\n        //@ts-ignore\n        const values = e.file;\n        const formData = new FormData();\n        formData.append(\"file\", values);\n        try {\n            const res = await merchantApi.uploadImage(formData);\n            console.log(res);\n            setUser({\n                ...user,\n                avatar: res.data,\n            });\n        } catch (err: any) {\n            const data = err.response.data;\n            const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n            error(mess);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: user,\n            validationSchema: registerSchema,\n            onSubmit: handleLogin,\n        });\n\n    return (\n        <>\n            <ComponentUserSetting handleUploadImage={handleUploadImage} user={user} />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}