{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { useYup } from \"@validations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageUserSetting = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify();\n  const {\n    YubEmailSignIn\n  } = useYup(); //redux state\n\n  const {\n    userInfo\n  } = useSelector(selectAuth); //page state\n\n  const [title, setTitle] = useState(\"\"); //page variable\n\n  const initialValue = {\n    avatar: userInfo === null || userInfo === void 0 ? void 0 : userInfo.avatar,\n    fullName: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.fullName) || \"\",\n    dateOfBirth: \"11/11/2021\",\n    phoneNumber: \"0934270080\",\n    email: \"tuvu884884@gmail.com\"\n  };\n  const registerSchema = Yup.object().shape(YubEmailSignIn);\n\n  const handleUploadImage = async e => {\n    dispatch(setLoading(true)); //@ts-ignore\n\n    const values = e.file;\n    const formData = new FormData();\n    formData.append(\"file\", values);\n\n    try {\n      const res = await merchantApi.uploadImage(formData);\n    } catch (err) {\n      const data = err.response.data;\n      const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n      error(mess);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleSaveSetting = () => {//\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched,\n    setFieldValue\n  } = useFormik({\n    initialValues: initialValue,\n    validationSchema: registerSchema,\n    onSubmit: handleSaveSetting\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComponentUserSetting, {\n      handleUploadImage: handleUploadImage,\n      values: values\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageUserSetting, \"97dbULhLEApEFrWPyNwHA0aY5f0=\", false, function () {\n  return [useDispatch, useNotify, useYup, useSelector, useFormik];\n});\n\n_c = PageUserSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageUserSetting\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx"],"names":["useDispatch","useSelector","useState","useFormik","Yup","merchantApi","ComponentUserSetting","selectAuth","setLoading","useNotify","useYup","PageUserSetting","dispatch","error","YubEmailSignIn","userInfo","title","setTitle","initialValue","avatar","fullName","dateOfBirth","phoneNumber","email","registerSchema","object","shape","handleUploadImage","e","values","file","formData","FormData","append","res","uploadImage","err","data","response","mess","Array","isArray","errors","message","handleSaveSetting","handleChange","handleBlur","handleSubmit","isSubmitting","touched","setFieldValue","initialValues","validationSchema","onSubmit"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { IUserSetting } from \"@interfaces\";\nimport { useYup } from \"@validations\";\n\nexport const PageUserSetting = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    const { YubEmailSignIn } = useYup();\n    //redux state\n    const { userInfo } = useSelector(selectAuth);\n    //page state\n    const [title, setTitle] = useState<string>(\"\");\n\n    //page variable\n    const initialValue: IUserSetting = {\n        avatar: userInfo?.avatar,\n        fullName: userInfo?.fullName || \"\",\n        dateOfBirth: \"11/11/2021\",\n        phoneNumber: \"0934270080\",\n        email: \"tuvu884884@gmail.com\",\n    };\n    const registerSchema = Yup.object().shape(YubEmailSignIn);\n\n    const handleUploadImage = async (e: React.ChangeEventHandler<HTMLInputElement> | undefined) => {\n        dispatch(setLoading(true));\n        //@ts-ignore\n        const values = e.file;\n        const formData = new FormData();\n        formData.append(\"file\", values);\n        try {\n            const res = await merchantApi.uploadImage(formData);\n        } catch (err: any) {\n            const data = err.response.data;\n            const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n            error(mess);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleSaveSetting = () => {\n        //\n    };\n\n    const {\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        errors,\n        touched,\n        setFieldValue,\n    } = useFormik({\n        initialValues: initialValue,\n        validationSchema: registerSchema,\n        onSubmit: handleSaveSetting,\n    });\n\n    return (\n        <>\n            <ComponentUserSetting handleUploadImage={handleUploadImage} values={values} />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}