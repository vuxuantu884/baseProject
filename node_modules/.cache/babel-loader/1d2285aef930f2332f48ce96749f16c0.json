{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/BaseProject/src/Components/Toast.tsx\",\n    _s = $RefreshSig$();\n\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport { closeToast, selectToast, useAppSelector } from \"@redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ComponentToast = () => {\n  _s();\n\n  //page hooks\n  const toast = useAppSelector(selectToast).toast;\n  const dispatch = useDispatch();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    dispatch(closeToast());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      anchorOrigin: {\n        vertical: toast.vertical || \"top\",\n        horizontal: toast.horizontal || \"right\"\n      },\n      open: toast.open,\n      autoHideDuration: toast.autoHideDuration,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: toast.type,\n        children: toast.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      draggable: true,\n      limit: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ComponentToast, \"qovOPP8GUvJIkkK2lW5g/K9AGds=\", false, function () {\n  return [useAppSelector, useDispatch];\n});\n\n_c = ComponentToast;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentToast\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/BaseProject/src/Components/Toast.tsx"],"names":["Snackbar","Alert","useDispatch","ToastContainer","closeToast","selectToast","useAppSelector","ComponentToast","toast","dispatch","handleClose","event","reason","vertical","horizontal","open","autoHideDuration","type","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,cAAlC,QAAwD,QAAxD;;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC;AACA,QAAMC,KAAK,GAAGF,cAAc,CAACD,WAAD,CAAd,CAA4BG,KAA1C;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,QAAMQ,WAAW,GAAG,CAACC,KAAD,EAA+BC,MAA/B,KAAmD;AACnE,QAAIA,MAAM,KAAK,WAAf,EAA4B;AACxB;AACH;;AAEDH,IAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACH,GAND;;AAOA,sBACI;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,YAAY,EAAE;AACVS,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,IAAkB,KADlB;AAEVC,QAAAA,UAAU,EAAEN,KAAK,CAACM,UAAN,IAAoB;AAFtB,OADlB;AAKI,MAAA,IAAI,EAAEN,KAAK,CAACO,IALhB;AAMI,MAAA,gBAAgB,EAAEP,KAAK,CAACQ,gBAN5B;AAOI,MAAA,OAAO,EAAEN,WAPb;AAAA,6BASI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,WAAhB;AAA6B,QAAA,QAAQ,EAAEF,KAAK,CAACS,IAA7C;AAAA,kBACKT,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI,QAAC,cAAD;AACI,MAAA,QAAQ,EAAC,WADb;AAEI,MAAA,SAAS,EAAE,IAFf;AAGI,MAAA,eAAe,EAAE,IAHrB;AAII,MAAA,WAAW,EAAE,KAJjB;AAKI,MAAA,YAAY,MALhB;AAMI,MAAA,GAAG,EAAE,KANT;AAOI,MAAA,SAAS,MAPb;AAQI,MAAA,KAAK,EAAE;AARX;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA,kBADJ;AA2BH,CAvCM;;GAAMX,c;UAEKD,c,EACGJ,W;;;KAHRK,c","sourcesContent":["import { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport { closeToast, selectToast, useAppSelector } from \"@redux\";\n\nexport const ComponentToast = () => {\n    //page hooks\n    const toast = useAppSelector(selectToast).toast;\n    const dispatch = useDispatch();\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        dispatch(closeToast());\n    };\n    return (\n        <>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: toast.vertical || \"top\",\n                    horizontal: toast.horizontal || \"right\",\n                }}\n                open={toast.open}\n                autoHideDuration={toast.autoHideDuration}\n                onClose={handleClose}\n            >\n                <Alert onClose={handleClose} severity={toast.type}>\n                    {toast.message}\n                </Alert>\n            </Snackbar>\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={2000}\n                hideProgressBar={true}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                draggable\n                limit={1}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}