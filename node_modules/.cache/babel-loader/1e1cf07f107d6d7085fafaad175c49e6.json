{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Coupon.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { couponApi, merchantApi } from \"@api\";\nimport { ComponentCouponPreview } from \"@components\";\nimport { PATH_404, PATH_SIGN_IN_EMAIL } from \"@configs\";\nimport { selectAuth, setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageCoupon = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //page hook\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const history = useHistory(); //page rdux\n\n  const {\n    auth\n  } = useSelector(selectAuth); //page state\n\n  const [coupon, setCoupon] = useState(); //page variable\n\n  const token = auth === null || auth === void 0 ? void 0 : auth.accessToken;\n  useEffect(_s(() => {\n    _s();\n\n    useCoupon();\n  }, \"CCFEAyTohPMBrRsGhMXvqgOAwf8=\", false, function () {\n    return [useCoupon];\n  }), []);\n\n  const useCoupon = async () => {\n    dispatch(load);\n\n    if (id) {\n      if (token) {\n        const res = await couponApi.getPreviewCoupon(id);\n        const data = res.data;\n        setCoupon(data);\n      } else {\n        const res = await merchantApi.getCouponId(id);\n        const data = res.data;\n        dispatch(setMerchantID(data.merchantId));\n        const merchantConfig = await merchantApi.getMerchantConfig();\n        const merchant = merchantConfig.data.merchant;\n        dispatch(setMerchant(merchant));\n        dispatch(setMainColor(merchant.themeColor));\n        history.push(PATH_SIGN_IN_EMAIL);\n      }\n    } else {\n      history.push(PATH_404);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: coupon && /*#__PURE__*/_jsxDEV(ComponentCouponPreview, {\n      coupon: coupon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }, this)\n  }, void 0, false);\n};\n\n_s2(PageCoupon, \"CdD6imbT/xfa7J1zrgp0ZUgh9sQ=\", false, function () {\n  return [useDispatch, useParams, useHistory, useSelector];\n});\n\n_c = PageCoupon;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageCoupon\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Coupon.tsx"],"names":["couponApi","merchantApi","ComponentCouponPreview","PATH_404","PATH_SIGN_IN_EMAIL","selectAuth","setMainColor","setMerchant","setMerchantID","useEffect","useState","useDispatch","useSelector","useHistory","useParams","PageCoupon","dispatch","id","history","auth","coupon","setCoupon","token","accessToken","useCoupon","load","res","getPreviewCoupon","data","getCouponId","merchantId","merchantConfig","getMerchantConfig","merchant","themeColor","push"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,MAAvC;AACA,SAASC,sBAAT,QAAuC,aAAvC;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,UAA7C;AAEA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgDC,aAAhD,QAAqE,QAArE;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAAA;;AAC5B;AACA,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAMI,OAAO,GAAGL,UAAU,EAA1B,CAJ4B,CAK5B;;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAWP,WAAW,CAACP,UAAD,CAA5B,CAN4B,CAO5B;;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBX,QAAQ,EAApC,CAR4B,CAS5B;;AACA,QAAMY,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,WAApB;AAEAd,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZe,IAAAA,SAAS;AACZ,GAFQ;AAAA,YACLA,SADK;AAAA,MAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC1BR,IAAAA,QAAQ,CAACS,IAAD,CAAR;;AACA,QAAIR,EAAJ,EAAQ;AACJ,UAAIK,KAAJ,EAAW;AACP,cAAMI,GAAG,GAAG,MAAM1B,SAAS,CAAC2B,gBAAV,CAA2BV,EAA3B,CAAlB;AACA,cAAMW,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAP,QAAAA,SAAS,CAACO,IAAD,CAAT;AACH,OAJD,MAIO;AACH,cAAMF,GAAG,GAAG,MAAMzB,WAAW,CAAC4B,WAAZ,CAAwBZ,EAAxB,CAAlB;AACA,cAAMW,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAZ,QAAAA,QAAQ,CAACR,aAAa,CAACoB,IAAI,CAACE,UAAN,CAAd,CAAR;AACA,cAAMC,cAAc,GAAG,MAAM9B,WAAW,CAAC+B,iBAAZ,EAA7B;AACA,cAAMC,QAAQ,GAAGF,cAAc,CAACH,IAAf,CAAoBK,QAArC;AACAjB,QAAAA,QAAQ,CAACT,WAAW,CAAC0B,QAAD,CAAZ,CAAR;AACAjB,QAAAA,QAAQ,CAACV,YAAY,CAAC2B,QAAQ,CAACC,UAAV,CAAb,CAAR;AACAhB,QAAAA,OAAO,CAACiB,IAAR,CAAa/B,kBAAb;AACH;AACJ,KAfD,MAeO;AACHc,MAAAA,OAAO,CAACiB,IAAR,CAAahC,QAAb;AACH;AACJ,GApBD;;AAsBA,sBAAO;AAAA,cAAGiB,MAAM,iBAAI,QAAC,sBAAD;AAAwB,MAAA,MAAM,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA;AAAb,mBAAP;AACH,CAvCM;;IAAML,U;UAEQJ,W,EACFG,S,EACCD,U,EAECD,W;;;KANRG,U","sourcesContent":["import { couponApi, merchantApi } from \"@api\";\nimport { ComponentCouponPreview } from \"@components\";\nimport { PATH_404, PATH_SIGN_IN_EMAIL } from \"@configs\";\nimport { ICoupon, IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport { selectAuth, setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\n\nexport const PageCoupon = () => {\n    //page hook\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    //page rdux\n    const { auth } = useSelector(selectAuth);\n    //page state\n    const [coupon, setCoupon] = useState<ICoupon>();\n    //page variable\n    const token = auth?.accessToken;\n\n    useEffect(() => {\n        useCoupon();\n    }, []);\n\n    const useCoupon = async () => {\n        dispatch(load);\n        if (id) {\n            if (token) {\n                const res = await couponApi.getPreviewCoupon(id);\n                const data = res.data as ICoupon;\n                setCoupon(data);\n            } else {\n                const res = await merchantApi.getCouponId(id);\n                const data = res.data as IMerchantQRcode;\n                dispatch(setMerchantID(data.merchantId));\n                const merchantConfig = await merchantApi.getMerchantConfig();\n                const merchant = merchantConfig.data.merchant as IMerchant;\n                dispatch(setMerchant(merchant));\n                dispatch(setMainColor(merchant.themeColor));\n                history.push(PATH_SIGN_IN_EMAIL);\n            }\n        } else {\n            history.push(PATH_404);\n        }\n    };\n\n    return <>{coupon && <ComponentCouponPreview coupon={coupon} />}</>;\n};\n"]},"metadata":{},"sourceType":"module"}