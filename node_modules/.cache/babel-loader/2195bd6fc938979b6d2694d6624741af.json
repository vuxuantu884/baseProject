{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/tel/Sign.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { ComponentSignUpTel } from \"@components\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { setExternalLogin, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { enumExternalMethod } from \"@configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleTelSignUp = () => {\n  _s();\n\n  //page hooks\n  const {\n    YubPhoneSignUp\n  } = useYup();\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify(); //page variable\n\n  const initialValues = {\n    phoneNumber: \"\"\n  };\n  const registerSchema = Yup.object().shape(YubPhoneSignUp);\n\n  const handleRegister = async (values, {\n    setSubmitting\n  }) => {\n    //\n    try {\n      setSubmitting(true);\n      dispatch(setLoading(true));\n      const res = await authApi.registerPhone(values);\n\n      if (res.data.success) {\n        dispatch(setExternalLogin({\n          type: enumExternalMethod.TEL\n        }));\n      }\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n      error(message);\n    } finally {\n      setSubmitting(false);\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handle;\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched,\n    setFieldTouched,\n    setFieldValue\n  } = useFormik({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: handleRegister\n  });\n  return /*#__PURE__*/_jsxDEV(ComponentSignUpTel, {\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    errors: errors,\n    touched: touched,\n    values: values,\n    handleSubmit: handleSubmit,\n    isSubmitting: isSubmitting\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModuleTelSignUp, \"QmYz6/Nma+wfnLXGgtGUUjusAuM=\", false, function () {\n  return [useYup, useDispatch, useNotify, useFormik];\n});\n\n_c = ModuleTelSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleTelSignUp\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/tel/Sign.tsx"],"names":["useFormik","Yup","useDispatch","ComponentSignUpTel","useYup","authApi","setExternalLogin","setLoading","useNotify","enumExternalMethod","ModuleTelSignUp","YubPhoneSignUp","dispatch","error","initialValues","phoneNumber","registerSchema","object","shape","handleRegister","values","setSubmitting","res","registerPhone","data","success","type","TEL","errors","message","response","handle","handleChange","handleBlur","handleSubmit","isSubmitting","touched","setFieldTouched","setFieldValue","validationSchema","onSubmit"],"mappings":";;;AAAA,SAASA,SAAT,QAAyC,QAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,kBAAT,QAAmC,aAAnC;AAEA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,QAA7C;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,kBAAT,QAAmC,UAAnC;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAqBP,MAAM,EAAjC;AACA,QAAMQ,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAYL,SAAS,EAA3B,CAJiC,CAMjC;;AACA,QAAMM,aAAqB,GAAG;AAC1BC,IAAAA,WAAW,EAAE;AADa,GAA9B;AAGA,QAAMC,cAAc,GAAGf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmBP,cAAnB,CAAvB;;AAEA,QAAMQ,cAAc,GAAG,OAAOC,MAAP,EAAuB;AAAEC,IAAAA;AAAF,GAAvB,KAAoE;AACvF;AACA,QAAI;AACAA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAT,MAAAA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMe,GAAG,GAAG,MAAMjB,OAAO,CAACkB,aAAR,CAAsBH,MAAtB,CAAlB;;AACA,UAAIE,GAAG,CAACE,IAAJ,CAASC,OAAb,EAAsB;AAClBb,QAAAA,QAAQ,CAACN,gBAAgB,CAAC;AAAEoB,UAAAA,IAAI,EAAEjB,kBAAkB,CAACkB;AAA3B,SAAD,CAAjB,CAAR;AACH;AACJ,KAPD,CAOE,OAAOC,MAAP,EAAoB;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAAM,CAACE,QAAP,CAAgBN,IAApC;AACAX,MAAAA,KAAK,CAACgB,OAAD,CAAL;AACH,KAVD,SAUU;AACNR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAT,MAAAA,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAhBD;;AAkBA,QAAMwB,MAAN;AAEA,QAAM;AACFX,IAAAA,MADE;AAEFY,IAAAA,YAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA,YALE;AAMFP,IAAAA,MANE;AAOFQ,IAAAA,OAPE;AAQFC,IAAAA,eARE;AASFC,IAAAA;AATE,MAUFtC,SAAS,CAAC;AACVc,IAAAA,aAAa,EAAEA,aADL;AAEVyB,IAAAA,gBAAgB,EAAEvB,cAFR;AAGVwB,IAAAA,QAAQ,EAAErB;AAHA,GAAD,CAVb;AAeA,sBACI,QAAC,kBAAD;AACI,IAAA,UAAU,EAAEc,UADhB;AAEI,IAAA,YAAY,EAAED,YAFlB;AAGI,IAAA,MAAM,EAAEJ,MAHZ;AAII,IAAA,OAAO,EAAEQ,OAJb;AAKI,IAAA,MAAM,EAAEhB,MALZ;AAMI,IAAA,YAAY,EAAEc,YANlB;AAOI,IAAA,YAAY,EAAEC;AAPlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA1DM;;GAAMzB,e;UAEkBN,M,EACVF,W,EACCM,S,EAsCdR,S;;;KA1CKU,e","sourcesContent":["import { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ComponentSignUpTel } from \"@components\";\nimport { IPhone } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { setExternalLogin, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { enumExternalMethod } from \"@configs\";\n\nexport const ModuleTelSignUp = () => {\n    //page hooks\n    const { YubPhoneSignUp } = useYup();\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n\n    //page variable\n    const initialValues: IPhone = {\n        phoneNumber: \"\",\n    };\n    const registerSchema = Yup.object().shape(YubPhoneSignUp);\n\n    const handleRegister = async (values: IPhone, { setSubmitting }: FormikHelpers<IPhone>) => {\n        //\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const res = await authApi.registerPhone(values);\n            if (res.data.success) {\n                dispatch(setExternalLogin({ type: enumExternalMethod.TEL }));\n            }\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            error(message);\n        } finally {\n            setSubmitting(false);\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handle;\n\n    const {\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        errors,\n        touched,\n        setFieldTouched,\n        setFieldValue,\n    } = useFormik({\n        initialValues: initialValues,\n        validationSchema: registerSchema,\n        onSubmit: handleRegister,\n    });\n    return (\n        <ComponentSignUpTel\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errors={errors}\n            touched={touched}\n            values={values}\n            handleSubmit={handleSubmit}\n            isSubmitting={isSubmitting}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}