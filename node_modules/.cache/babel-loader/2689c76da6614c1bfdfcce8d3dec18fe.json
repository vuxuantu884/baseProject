{"ast":null,"code":"import _regeneratorRuntime from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useEffect}from\"react\";import{useDispatch}from\"react-redux\";import{useHistory,useParams}from\"react-router\";import{setMainColor,setMerchant,setMerchantID}from\"@redux\";import{merchantApi}from\"@api\";import{enumStatus,PATH_404,PATH_WELCOME}from\"@configs\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var PageTrafficSource=function PageTrafficSource(){//page hook\nvar dispatch=useDispatch();var _useParams=useParams(),id=_useParams.id;var history=useHistory();useEffect(function(){merchantConfig();},[]);var merchantConfig=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data,_merchantConfig,merchant;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!id){_context.next=18;break;}_context.next=3;return merchantApi.getTrafficSourceId(id);case 3:res=_context.sent;data=res.data;if(!(data.status!==enumStatus.ACTIVE)){_context.next=8;break;}history.push(PATH_404);return _context.abrupt(\"return\");case 8:dispatch(setMerchantID(data.merchantId));_context.next=11;return merchantApi.getMerchantConfig();case 11:_merchantConfig=_context.sent;merchant=_merchantConfig.data.merchant;dispatch(setMerchant(merchant));dispatch(setMainColor(merchant.themeColor));history.push(PATH_WELCOME);_context.next=19;break;case 18:history.push(PATH_404);case 19:case\"end\":return _context.stop();}}},_callee);}));return function merchantConfig(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{});};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/TrafficSource.tsx"],"names":["useEffect","useDispatch","useHistory","useParams","setMainColor","setMerchant","setMerchantID","merchantApi","enumStatus","PATH_404","PATH_WELCOME","PageTrafficSource","dispatch","id","history","merchantConfig","getTrafficSourceId","res","data","status","ACTIVE","push","merchantId","getMerchantConfig","merchant","themeColor"],"mappings":"2UAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,cAAtC,CAEA,OAASC,YAAT,CAAuBC,WAAvB,CAAoCC,aAApC,KAAyD,QAAzD,CACA,OAASC,WAAT,KAA4B,MAA5B,CAEA,OAASC,UAAT,CAAqBC,QAArB,CAA+BC,YAA/B,KAAmD,UAAnD,C,gGAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACnC;AACA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,eAAeE,SAAS,EAAxB,CAAQU,EAAR,YAAQA,EAAR,CACA,GAAMC,CAAAA,OAAO,CAAGZ,UAAU,EAA1B,CAEAF,SAAS,CAAC,UAAM,CACZe,cAAc,GACjB,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,cAAc,0FAAG,6KACfF,EADe,gDAEGN,CAAAA,WAAW,CAACS,kBAAZ,CAA+BH,EAA/B,CAFH,QAETI,GAFS,eAGTC,IAHS,CAGFD,GAAG,CAACC,IAHF,MAIXA,IAAI,CAACC,MAAL,GAAgBX,UAAU,CAACY,MAJhB,0BAKXN,OAAO,CAACO,IAAR,CAAaZ,QAAb,EALW,wCAQfG,QAAQ,CAACN,aAAa,CAACY,IAAI,CAACI,UAAN,CAAd,CAAR,CARe,uBAScf,CAAAA,WAAW,CAACgB,iBAAZ,EATd,SASTR,eATS,eAUTS,QAVS,CAUET,eAAc,CAACG,IAAf,CAAoBM,QAVtB,CAWfZ,QAAQ,CAACP,WAAW,CAACmB,QAAD,CAAZ,CAAR,CACAZ,QAAQ,CAACR,YAAY,CAACoB,QAAQ,CAACC,UAAV,CAAb,CAAR,CACAX,OAAO,CAACO,IAAR,CAAaX,YAAb,EAbe,+BAefI,OAAO,CAACO,IAAR,CAAaZ,QAAb,EAfe,uDAAH,kBAAdM,CAAAA,cAAc,0CAApB,CAkBA,mBAAO,kBAAP,CACH,CA7BM","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\n\nimport { setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { merchantApi } from \"@api\";\nimport { IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport { enumStatus, PATH_404, PATH_WELCOME } from \"@configs\";\n\nexport const PageTrafficSource = () => {\n    //page hook\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n\n    useEffect(() => {\n        merchantConfig();\n    }, []);\n\n    const merchantConfig = async () => {\n        if (id) {\n            const res = await merchantApi.getTrafficSourceId(id);\n            const data = res.data as IMerchantQRcode;\n            if (data.status !== enumStatus.ACTIVE) {\n                history.push(PATH_404);\n                return;\n            }\n            dispatch(setMerchantID(data.merchantId));\n            const merchantConfig = await merchantApi.getMerchantConfig();\n            const merchant = merchantConfig.data.merchant as IMerchant;\n            dispatch(setMerchant(merchant));\n            dispatch(setMainColor(merchant.themeColor));\n            history.push(PATH_WELCOME);\n        } else {\n            history.push(PATH_404);\n        }\n    };\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}