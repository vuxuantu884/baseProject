{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={mobile:false,boxed:false,darkSidebar:false,sidebarPopup:false,sidebarIcons:false,collapsed:false,weakColor:false,optionDrawer:false,mobileDrawer:false,fullscreen:false,loading:true};var appSlice=createSlice({name:\"app\",initialState:initialState,reducers:{resetApp:function resetApp(){return initialState;},setMobile:function setMobile(state,action){state.mobile=action.payload;},setBoxed:function setBoxed(state,action){state.boxed=action.payload;},setDarkSidebar:function setDarkSidebar(state,action){state.darkSidebar=action.payload;},setSidebarPopup:function setSidebarPopup(state,action){state.sidebarPopup=action.payload;},setSidebarIcons:function setSidebarIcons(state,action){state.sidebarIcons=action.payload;},setCollapsed:function setCollapsed(state,action){state.collapsed=action.payload;},setWeakColor:function setWeakColor(state,action){state.weakColor=action.payload;},setOptionDrawer:function setOptionDrawer(state,action){state.optionDrawer=action.payload;},setMobileDrawer:function setMobileDrawer(state,action){state.mobileDrawer=action.payload;},setLoading:function setLoading(state,action){state.loading=action.payload;},setFullscreen:function setFullscreen(state){var element=document.querySelector(\"#root\");//@ts-ignore\nvar isFullscreen=document.webkitIsFullScreen||document.mozFullScreen||false;//@ts-ignore\nelement.requestFullScreen=//@ts-ignore\nelement.requestFullScreen||//@ts-ignore\nelement.webkitRequestFullScreen||//@ts-ignore\nelement.mozRequestFullScreen||function(){return false;};//@ts-ignore\ndocument.cancelFullScreen=//@ts-ignore\ndocument.cancelFullScreen||//@ts-ignore\ndocument.webkitCancelFullScreen||//@ts-ignore\ndocument.mozCancelFullScreen||function(){return false;};//@ts-ignore\nisFullscreen?document.cancelFullScreen():element.requestFullScreen();state.fullscreen=!isFullscreen;}}});var _appSlice$actions=appSlice.actions,resetApp=_appSlice$actions.resetApp,setMobile=_appSlice$actions.setMobile,setBoxed=_appSlice$actions.setBoxed,setDarkSidebar=_appSlice$actions.setDarkSidebar,setCollapsed=_appSlice$actions.setCollapsed,setFullscreen=_appSlice$actions.setFullscreen,setMobileDrawer=_appSlice$actions.setMobileDrawer,setOptionDrawer=_appSlice$actions.setOptionDrawer,setSidebarIcons=_appSlice$actions.setSidebarIcons,setSidebarPopup=_appSlice$actions.setSidebarPopup,setWeakColor=_appSlice$actions.setWeakColor,setLoading=_appSlice$actions.setLoading;export{resetApp,setMobile,setBoxed,setDarkSidebar,setCollapsed,setFullscreen,setMobileDrawer,setOptionDrawer,setSidebarIcons,setSidebarPopup,setWeakColor,setLoading};export var selectApp=function selectApp(state){return state.app;};export default appSlice.reducer;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Redux/Slices/app.ts"],"names":["createSlice","initialState","mobile","boxed","darkSidebar","sidebarPopup","sidebarIcons","collapsed","weakColor","optionDrawer","mobileDrawer","fullscreen","loading","appSlice","name","reducers","resetApp","setMobile","state","action","payload","setBoxed","setDarkSidebar","setSidebarPopup","setSidebarIcons","setCollapsed","setWeakColor","setOptionDrawer","setMobileDrawer","setLoading","setFullscreen","element","document","querySelector","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","actions","selectApp","app","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \".\";\n\ninterface IState {\n    mobile: boolean;\n    boxed: boolean;\n    darkSidebar: boolean;\n    sidebarPopup: boolean;\n    sidebarIcons: boolean;\n    collapsed: boolean;\n    weakColor: boolean;\n    optionDrawer: boolean;\n    mobileDrawer: boolean;\n    fullscreen: boolean;\n    loading:boolean;\n}\n\nconst initialState: IState = {\n    mobile: false,\n    boxed: false,\n    darkSidebar: false,\n    sidebarPopup: false,\n    sidebarIcons: false,\n    collapsed: false,\n    weakColor: false,\n    optionDrawer: false,\n    mobileDrawer: false,\n    fullscreen: false,\n    loading:true,\n};\n\nconst appSlice = createSlice({\n    name: \"app\",\n    initialState: initialState,\n    reducers: {\n        resetApp: () => {\n            return initialState;\n        },\n        setMobile: (state, action: PayloadAction<boolean>) => {\n            state.mobile = action.payload;\n        },\n        setBoxed: (state, action: PayloadAction<boolean>) => {\n            state.boxed = action.payload;\n        },\n        setDarkSidebar: (state, action: PayloadAction<boolean>) => {\n            state.darkSidebar = action.payload;\n        },\n        setSidebarPopup: (state, action: PayloadAction<boolean>) => {\n            state.sidebarPopup = action.payload;\n        },\n        setSidebarIcons: (state, action: PayloadAction<boolean>) => {\n            state.sidebarIcons = action.payload;\n        },\n        setCollapsed: (state, action: PayloadAction<boolean>) => {\n            state.collapsed = action.payload;\n        },\n        setWeakColor: (state, action: PayloadAction<boolean>) => {\n            state.weakColor = action.payload;\n        },\n        setOptionDrawer: (state, action: PayloadAction<boolean>) => {\n            state.optionDrawer = action.payload;\n        },\n        setMobileDrawer: (state, action: PayloadAction<boolean>) => {\n            state.mobileDrawer = action.payload;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.loading = action.payload;\n        },\n        setFullscreen: (state) => {\n            const element = document.querySelector(\"#root\");\n            //@ts-ignore\n            const isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false;\n            //@ts-ignore\n            element.requestFullScreen =\n                //@ts-ignore\n                element.requestFullScreen ||\n                //@ts-ignore\n                element.webkitRequestFullScreen ||\n                //@ts-ignore\n                element.mozRequestFullScreen ||\n                function () {\n                    return false;\n                };\n            //@ts-ignore\n            document.cancelFullScreen =\n                //@ts-ignore\n                document.cancelFullScreen ||\n                //@ts-ignore\n                document.webkitCancelFullScreen ||\n                //@ts-ignore\n                document.mozCancelFullScreen ||\n                function () {\n                    return false;\n                };\n            //@ts-ignore\n            isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n\n            state.fullscreen = !isFullscreen;\n        },\n    },\n});\n\nexport const {\n    resetApp,\n    setMobile,\n    setBoxed,\n    setDarkSidebar,\n    setCollapsed,\n    setFullscreen,\n    setMobileDrawer,\n    setOptionDrawer,\n    setSidebarIcons,\n    setSidebarPopup,\n    setWeakColor,\n    setLoading\n} = appSlice.actions;\n\nexport const selectApp = (state: RootState) => state.app;\n\nexport default appSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}