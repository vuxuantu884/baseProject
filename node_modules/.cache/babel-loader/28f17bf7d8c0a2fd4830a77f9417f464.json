{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/email/Email.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { StyledSignUp, ComponentFromEmail } from \"@components\";\nimport { DAYS, MONTHS, YEARS } from \"@configs\";\nimport { useYup } from \"@validations\";\nimport { setLoading } from \"@redux\";\nimport { authApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleEmail = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const {\n    YubEmailSignUpForm\n  } = useYup();\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify(); //page state\n\n  const [date, setDate] = useState({\n    day: \"\",\n    month: \"\",\n    year: \"\",\n    error: \"\"\n  }); //page variable\n\n  const daySelects = DAYS.map(item => {\n    return {\n      id: item,\n      label: item\n    };\n  });\n  const monthSelects = MONTHS.map(item => {\n    return {\n      id: item,\n      label: item\n    };\n  });\n  const yearSelects = YEARS.map(item => {\n    return {\n      id: item,\n      label: item\n    };\n  });\n  const initialValues = {\n    password: \"\",\n    conformPassword: \"\",\n    fullName: \"\",\n    tel: \"\",\n    dateOrBirth: \"\",\n    acceptTermsAndConditions: false\n  };\n  const registerSchema = Yup.object().shape(YubEmailSignUpForm);\n\n  const handleChangeDay = value => {\n    setDate({ ...date,\n      day: value,\n      error: \"\"\n    });\n  };\n\n  const handleChangeMonth = value => {\n    setDate({ ...date,\n      month: value,\n      error: \"\"\n    });\n  };\n\n  const handleChangeYear = value => {\n    setDate({ ...date,\n      year: value,\n      error: \"\"\n    });\n  };\n\n  const handleChangeAdditionField = value => {\n    //\n    value;\n  };\n\n  const handleRegister = async (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n\n    if (!date.day || !date.month || !date.year) {\n      setDate({ ...date,\n        error: t(\"validation.is_required\")\n      });\n      return;\n    }\n\n    try {\n      setSubmitting(true);\n      dispatch(setLoading(true));\n      const dateForm = new Date(date.day + \"/\" + date.month + \"/\" + date.year);\n      console.log(values);\n      const res = await authApi.createPassword({ ...values,\n        dateOrBirth: dateForm\n      });\n    } catch (errors) {\n      //\n      const errorsResponse = errors.response.errors;\n\n      if (Array.isArray(errorsResponse) && errorsResponse.length) {\n        error(errorsResponse[0]);\n      } else {\n        error(\"\");\n      }\n    } finally {\n      //\n      setSubmitting(false);\n      dispatch(setLoading(false));\n    }\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched\n  } = useFormik({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: handleRegister\n  });\n  return /*#__PURE__*/_jsxDEV(StyledSignUp, {\n    children: [/*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [t(\"page.auth.fill_in_the_information_and_receive_special_benefits\"), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ComponentFromEmail, {\n      handleBlur: handleBlur,\n      handleChange: handleChange,\n      errors: errors,\n      touched: touched,\n      values: values,\n      isSubmitting: isSubmitting,\n      days: daySelects,\n      months: monthSelects,\n      years: yearSelects,\n      onChangeDay: handleChangeDay,\n      onChangeMonth: handleChangeMonth,\n      onChangeYear: handleChangeYear,\n      onChangeAdditionField: handleChangeAdditionField,\n      handleSubmit: handleSubmit,\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModuleEmail, \"b15bJsaAR/hzSYvZxO01KwbW/Is=\", false, function () {\n  return [useTranslation, useYup, useDispatch, useNotify, useFormik];\n});\n\n_c = ModuleEmail;\nconst StyledContainer = styled.div`\n    .title {\n        font-style: normal;\n        font-weight: bold;\n        font-size: 20px;\n        line-height: 27px;\n        color: #000000;\n        max-width: 70%;\n        margin: 0 auto 46px auto;\n    }\n`;\n_c2 = StyledContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModuleEmail\");\n$RefreshReg$(_c2, \"StyledContainer\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/email/Email.tsx"],"names":["styled","useTranslation","useFormik","Yup","useState","useDispatch","StyledSignUp","ComponentFromEmail","DAYS","MONTHS","YEARS","useYup","setLoading","authApi","useNotify","ModuleEmail","t","YubEmailSignUpForm","dispatch","error","date","setDate","day","month","year","daySelects","map","item","id","label","monthSelects","yearSelects","initialValues","password","conformPassword","fullName","tel","dateOrBirth","acceptTermsAndConditions","registerSchema","object","shape","handleChangeDay","value","handleChangeMonth","handleChangeYear","handleChangeAdditionField","handleRegister","values","setSubmitting","dateForm","Date","console","log","res","createPassword","errors","errorsResponse","response","Array","isArray","length","handleChange","handleBlur","handleSubmit","isSubmitting","touched","validationSchema","onSubmit","StyledContainer","div"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { StyledSignUp, ComponentFromEmail } from \"@components\";\nimport { DAYS, MONTHS, YEARS } from \"@configs\";\nimport { IDate, IEmailForm, ISelect } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { setLoading } from \"@redux\";\nimport { authApi } from \"@api\";\nimport { useNotify } from \"@utils\";\n\nexport const ModuleEmail = () => {\n    //page hook\n    const { t } = useTranslation();\n    const { YubEmailSignUpForm } = useYup();\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n\n    //page state\n    const [date, setDate] = useState<IDate>({\n        day: \"\",\n        month: \"\",\n        year: \"\",\n        error: \"\",\n    });\n    //page variable\n    const daySelects: ISelect[] = DAYS.map((item) => {\n        return {\n            id: item,\n            label: item,\n        };\n    });\n    const monthSelects: ISelect[] = MONTHS.map((item) => {\n        return {\n            id: item,\n            label: item,\n        };\n    });\n    const yearSelects: ISelect[] = YEARS.map((item) => {\n        return {\n            id: item,\n            label: item,\n        };\n    });\n\n    const initialValues: IEmailForm = {\n        password: \"\",\n        conformPassword: \"\",\n        fullName: \"\",\n        tel: \"\",\n        dateOrBirth: \"\",\n        acceptTermsAndConditions: false,\n    };\n\n    const registerSchema = Yup.object().shape(YubEmailSignUpForm);\n\n    const handleChangeDay = (value: string) => {\n        setDate({\n            ...date,\n            day: value,\n            error: \"\",\n        });\n    };\n    const handleChangeMonth = (value: string) => {\n        setDate({\n            ...date,\n            month: value,\n            error: \"\",\n        });\n    };\n    const handleChangeYear = (value: string) => {\n        setDate({\n            ...date,\n            year: value,\n            error: \"\",\n        });\n    };\n\n    const handleChangeAdditionField = (value: string) => {\n        //\n        value;\n    };\n\n    const handleRegister = async (\n        values: IEmailForm,\n        { setSubmitting }: FormikHelpers<IEmailForm>\n    ) => {\n        if (!date.day || !date.month || !date.year) {\n            setDate({\n                ...date,\n                error: t(\"validation.is_required\"),\n            });\n            return;\n        }\n\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const dateForm = new Date(date.day + \"/\" + date.month + \"/\" + date.year);\n            console.log(values);\n            const res = await authApi.createPassword({ ...values, dateOrBirth: dateForm });\n        } catch (errors: any) {\n            //\n            const errorsResponse = errors.response.errors;\n            if (Array.isArray(errorsResponse) && errorsResponse.length) {\n                error(errorsResponse[0]);\n            } else {\n                error(\"\");\n            }\n        } finally {\n            //\n            setSubmitting(false);\n            dispatch(setLoading(false));\n        }\n    };\n\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: initialValues,\n            validationSchema: registerSchema,\n            onSubmit: handleRegister,\n        });\n\n    return (\n        <StyledSignUp>\n            <StyledContainer>\n                <div className=\"title\">\n                    {t(\"page.auth.fill_in_the_information_and_receive_special_benefits\")}{\" \"}\n                </div>\n            </StyledContainer>\n            <ComponentFromEmail\n                handleBlur={handleBlur}\n                handleChange={handleChange}\n                errors={errors}\n                touched={touched}\n                values={values}\n                isSubmitting={isSubmitting}\n                days={daySelects}\n                months={monthSelects}\n                years={yearSelects}\n                onChangeDay={handleChangeDay}\n                onChangeMonth={handleChangeMonth}\n                onChangeYear={handleChangeYear}\n                onChangeAdditionField={handleChangeAdditionField}\n                handleSubmit={handleSubmit}\n                date={date}\n            />\n        </StyledSignUp>\n    );\n};\n\nconst StyledContainer = styled.div`\n    .title {\n        font-style: normal;\n        font-weight: bold;\n        font-size: 20px;\n        line-height: 27px;\n        color: #000000;\n        max-width: 70%;\n        margin: 0 auto 46px auto;\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}