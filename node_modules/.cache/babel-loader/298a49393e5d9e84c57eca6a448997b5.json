{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail } from \"@components\";\nimport { enumStatus, enumTypes } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageBenefit = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    error,\n    success\n  } = useNotify(); //page state\n\n  const [benefit, setBenefit] = useState();\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getDetailBenefitById(id);\n      const data = res.data;\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await benefitApi.redeemed({\n        objectId: (benefit === null || benefit === void 0 ? void 0 : benefit._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.BENEFIT\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.use_coupon.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: benefit && /*#__PURE__*/_jsxDEV(ComponentBenefitDetail, {\n      data: benefit,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 26\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageBenefit, \"DNKPnNY9H5P6d0CT6ch/mJHxPfY=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useNotify];\n});\n\n_c = PageBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useParams","useTranslation","benefitApi","ComponentBenefitDetail","enumStatus","enumTypes","setLoading","useNotify","PageBenefit","t","dispatch","id","error","success","benefit","setBenefit","res","getDetailBenefitById","data","handleClick","redeemed","objectId","_id","status","ACTIVE","type","BENEFIT","message","err","response"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,UAAT,QAAmD,MAAnD;AACA,SAASC,sBAAT,QAA8D,aAA9D;AACA,SAAuCC,UAAvC,EAAmDC,SAAnD,QAA+E,UAA/E;AAEA,SAGIC,UAHJ,QAOO,QAPP;AAQA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,EAA5B;AACA,QAAMS,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASX,SAAS,EAAxB;AACA,QAAM;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBN,SAAS,EAApC,CAL6B,CAO7B;;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTa,MAAAA,QAAQ,CAACJ,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMU,GAAG,GAAG,MAAMd,UAAU,CAACe,oBAAX,CAAgCN,EAAhC,CAAlB;AACA,YAAMO,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAH,MAAAA,UAAU,CAACG,IAAD,CAAV;AAEAR,MAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMa,WAAW,GAAG,YAAY;AAC5B,QAAI;AACAT,MAAAA,QAAQ,CAACJ,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMU,GAAG,GAAG,MAAMd,UAAU,CAACkB,QAAX,CAAoB;AAClCC,QAAAA,QAAQ,EAAE,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,GAAT,KAAgB,EADQ;AAElCC,QAAAA,MAAM,EAAEnB,UAAU,CAACoB,MAFe;AAGlCC,QAAAA,IAAI,EAAEpB,SAAS,CAACqB;AAHkB,OAApB,CAAlB;;AAKA,UAAIV,GAAG,CAACE,IAAJ,CAASS,OAAb,EAAsB;AAClBd,QAAAA,OAAO,CAACG,GAAG,CAACE,IAAJ,CAASS,OAAV,CAAP;AACH;AACJ,KAVD,CAUE,OAAOC,GAAP,EAAiB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAcC,GAAG,CAACC,QAAJ,CAAaX,IAAjC;;AACA,UAAIS,OAAJ,EAAa;AACTf,QAAAA,KAAK,CAACe,OAAD,CAAL;AACH,OAFD,MAEO;AACHf,QAAAA,KAAK,CAACH,CAAC,CAAC,yBAAD,CAAF,CAAL;AACH;AACJ,KAjBD,SAiBU;AACNC,MAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GArBD;;AAuBA,sBAAO;AAAA,cAAGQ,OAAO,iBAAI,QAAC,sBAAD;AAAwB,MAAA,IAAI,EAAEA,OAA9B;AAAuC,MAAA,WAAW,EAAEK;AAApD;AAAA;AAAA;AAAA;AAAA;AAAd,mBAAP;AACH,CA7CM;;GAAMX,W;UAEKP,c,EACGF,W,EACFC,S,EACYO,S;;;KALlBC,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { benefitApi, couponApi, merchantApi } from \"@api\";\nimport { ComponentBenefitDetail, ComponentCouponDetail } from \"@components\";\nimport { PATH_404, PATH_SIGN_IN_EMAIL, enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { IBenefit, ICoupon, IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport {\n    selectAuth,\n    setExternalTypes,\n    setLoading,\n    setMainColor,\n    setMerchant,\n    setMerchantID,\n} from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageBenefit = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const { error, success } = useNotify();\n\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit>();\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getDetailBenefitById(id);\n            const data = res.data as IBenefit;\n            setBenefit(data);\n\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await benefitApi.redeemed({\n                objectId: benefit?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.BENEFIT,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n            }\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.use_coupon.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    return <>{benefit && <ComponentBenefitDetail data={benefit} handleClick={handleClick} />}</>;\n};\n"]},"metadata":{},"sourceType":"module"}