{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/user/Save.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport IntlTelInput from \"react-intl-tel-input\";\nimport { DatePicker } from \"antd\";\nimport { SharedButton, SharedInput, StyledError } from \"@components\";\nimport { useSetting } from \"@configs\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ComponentUserSettingSave = props => {\n  _s();\n\n  //page hooks\n  const {\n    t\n  } = useTranslation(); //page props\n\n  const {\n    values,\n    handleBlur,\n    handleChange,\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    title,\n    setFieldTouched,\n    handleChangePhoneNumber,\n    errorPhone\n  } = props;\n\n  const render = () => {\n    switch (title) {\n      case useSetting.FULL_NAME:\n        return t(\"page.user_detail.name\");\n        break;\n\n      case useSetting.PHONE_NUMBER:\n        return t(\"page.user_detail.phone_number\");\n        break;\n\n      case useSetting.EMAIL:\n        return t(\"page.user_detail.email\");\n        break;\n\n      case useSetting.DATE_OF_BIRTH:\n        return t(\"page.user_detail.date\");\n        break;\n\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        break;\n    }\n  };\n\n  const renderName = () => {\n    switch (title) {\n      case useSetting.FULL_NAME:\n        return useSetting.FULL_NAME;\n        break;\n\n      case useSetting.PHONE_NUMBER:\n        return useSetting.PHONE_NUMBER;\n        break;\n\n      case useSetting.EMAIL:\n        return useSetting.EMAIL;\n        break;\n\n      default:\n        return \"\";\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledSettingSave, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: render()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), title !== useSetting.DATE_OF_BIRTH && (title === useSetting.PHONE_NUMBER ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(IntlTelInput, {\n          defaultCountry: \"th\",\n          preferredCountries: [\"fr\", \"gb\", \"es\", \"be\", \"de\"],\n          fieldId: \"phoneNumber\",\n          fieldName: \"phoneNumber\",\n          onPhoneNumberChange: handleChangePhoneNumber,\n          onPhoneNumberBlur: () => {\n            setFieldTouched(values[title].toString(), true);\n          },\n          value: values[title],\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), errorPhone && /*#__PURE__*/_jsxDEV(StyledError, {\n          visible: true,\n          children: errorPhone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(StyledSharedInput, {\n        name: renderName(),\n        value: values[title],\n        onBlur: handleBlur,\n        onChange: handleChange,\n        errors: errors[title],\n        touched: touched[title]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)), title === useSetting.DATE_OF_BIRTH && /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(StyledSharedButton, {\n        size: \"large\",\n        bg_color: \"#05C755\",\n        disabled: isSubmitting,\n        type: \"submit\",\n        children: t(\"page.auth.sign_up\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComponentUserSettingSave, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ComponentUserSettingSave;\nconst StyledSharedInput = styled(SharedInput)`\n    width: 90%;\n    margin: 0 auto;\n`;\n_c2 = StyledSharedInput;\nconst StyledSettingSave = styled.div`\n    text-align: center;\n    padding-top: 24px;\n    .title {\n        font-family: \"Roboto\", sans-serif;\n        font-style: normal;\n        font-weight: 600;\n        font-size: 14px;\n        color: #707070;\n        margin-bottom: 12px;\n    }\n    .allow-dropdown.intl-tel-input {\n        width: 90%;\n    }\n    .intl-tel-input.allow-dropdown input[type=\"text\"],\n    .intl-tel-input.allow-dropdown input[type=\"tel\"] {\n        height: 48px !important;\n        outline: none;\n        border: none;\n        background-color: #f7f7f8;\n        width: 100% !important;\n        font-size: 16px;\n        color: black;\n        box-shadow: none !important;\n        font-weight: 500;\n    }\n    .ant-calendar-picker {\n        width: 90%;\n    }\n    .ant-calendar-picker-input.ant-input {\n        height: 48px;\n        font-size: 16px;\n        border: initial;\n    }\n    .ant-input:focus {\n        border-color: initial !important;\n    }\n`;\n_c3 = StyledSettingSave;\nconst StyledSharedButton = styled(SharedButton)`\n    width: 90%;\n`;\n_c4 = StyledSharedButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ComponentUserSettingSave\");\n$RefreshReg$(_c2, \"StyledSharedInput\");\n$RefreshReg$(_c3, \"StyledSettingSave\");\n$RefreshReg$(_c4, \"StyledSharedButton\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/user/Save.tsx"],"names":["styled","useTranslation","IntlTelInput","DatePicker","SharedButton","SharedInput","StyledError","useSetting","ComponentUserSettingSave","props","t","values","handleBlur","handleChange","errors","touched","handleSubmit","isSubmitting","title","setFieldTouched","handleChangePhoneNumber","errorPhone","render","FULL_NAME","PHONE_NUMBER","EMAIL","DATE_OF_BIRTH","renderName","toString","StyledSharedInput","StyledSettingSave","div","StyledSharedButton"],"mappings":"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","sourcesContent":["import { FormikErrors, FormikTouched } from \"formik\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport IntlTelInput, { CountryData } from \"react-intl-tel-input\";\nimport { DatePicker } from \"antd\";\n\nimport { IHandleBlur, IUserSetting, IHandleChange } from \"@interfaces\";\nimport { SharedButton, SharedInput, StyledError } from \"@components\";\nimport { useSetting } from \"@configs\";\n\ninterface IProps {\n    values: IUserSetting;\n    handleBlur: IHandleBlur;\n    handleChange: IHandleChange;\n    errors: FormikErrors<IUserSetting>;\n    touched: FormikTouched<IUserSetting>;\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\n    isSubmitting: boolean;\n    title: useSetting;\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IUserSetting>>;\n    handleChangePhoneNumber: (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string,\n        extension: string\n    ) => void;\n    errorPhone: string;\n}\n\nexport const ComponentUserSettingSave = (props: IProps) => {\n    //page hooks\n    const { t } = useTranslation();\n    //page props\n    const {\n        values,\n        handleBlur,\n        handleChange,\n        errors,\n        touched,\n        handleSubmit,\n        isSubmitting,\n        title,\n        setFieldTouched,\n        handleChangePhoneNumber,\n        errorPhone,\n    } = props;\n\n    const render = () => {\n        switch (title) {\n            case useSetting.FULL_NAME:\n                return t(\"page.user_detail.name\");\n                break;\n            case useSetting.PHONE_NUMBER:\n                return t(\"page.user_detail.phone_number\");\n                break;\n            case useSetting.EMAIL:\n                return t(\"page.user_detail.email\");\n                break;\n            case useSetting.DATE_OF_BIRTH:\n                return t(\"page.user_detail.date\");\n                break;\n            default:\n                return <></>;\n                break;\n        }\n    };\n\n    const renderName = () => {\n        switch (title) {\n            case useSetting.FULL_NAME:\n                return useSetting.FULL_NAME;\n                break;\n            case useSetting.PHONE_NUMBER:\n                return useSetting.PHONE_NUMBER;\n                break;\n            case useSetting.EMAIL:\n                return useSetting.EMAIL;\n                break;\n            default:\n                return \"\";\n                break;\n        }\n    };\n\n    return (\n        <StyledSettingSave>\n            <form onSubmit={handleSubmit}>\n                <div className=\"title\">{render()}</div>\n                {title !== useSetting.DATE_OF_BIRTH &&\n                    (title === useSetting.PHONE_NUMBER ? (\n                        <>\n                            <IntlTelInput\n                                defaultCountry=\"th\"\n                                preferredCountries={[\"fr\", \"gb\", \"es\", \"be\", \"de\"]}\n                                fieldId=\"phoneNumber\"\n                                fieldName=\"phoneNumber\"\n                                onPhoneNumberChange={handleChangePhoneNumber}\n                                onPhoneNumberBlur={() => {\n                                    setFieldTouched(values[title].toString(), true);\n                                }}\n                                value={values[title]}\n                                disabled={isSubmitting}\n                            />\n                            {errorPhone && <StyledError visible={true}>{errorPhone}</StyledError>}\n                        </>\n                    ) : (\n                        <StyledSharedInput\n                            name={renderName()}\n                            value={values[title]}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            errors={errors[title]}\n                            touched={touched[title]}\n                        />\n                    ))}\n\n                {title === useSetting.DATE_OF_BIRTH && <DatePicker />}\n\n                <StyledSharedButton\n                    size=\"large\"\n                    bg_color=\"#05C755\"\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                >\n                    {t(\"page.auth.sign_up\")}\n                </StyledSharedButton>\n            </form>\n        </StyledSettingSave>\n    );\n};\n\nconst StyledSharedInput = styled(SharedInput)`\n    width: 90%;\n    margin: 0 auto;\n`;\n\nconst StyledSettingSave = styled.div`\n    text-align: center;\n    padding-top: 24px;\n    .title {\n        font-family: \"Roboto\", sans-serif;\n        font-style: normal;\n        font-weight: 600;\n        font-size: 14px;\n        color: #707070;\n        margin-bottom: 12px;\n    }\n    .allow-dropdown.intl-tel-input {\n        width: 90%;\n    }\n    .intl-tel-input.allow-dropdown input[type=\"text\"],\n    .intl-tel-input.allow-dropdown input[type=\"tel\"] {\n        height: 48px !important;\n        outline: none;\n        border: none;\n        background-color: #f7f7f8;\n        width: 100% !important;\n        font-size: 16px;\n        color: black;\n        box-shadow: none !important;\n        font-weight: 500;\n    }\n    .ant-calendar-picker {\n        width: 90%;\n    }\n    .ant-calendar-picker-input.ant-input {\n        height: 48px;\n        font-size: 16px;\n        border: initial;\n    }\n    .ant-input:focus {\n        border-color: initial !important;\n    }\n`;\n\nconst StyledSharedButton = styled(SharedButton)`\n    width: 90%;\n`;\n"]},"metadata":{},"sourceType":"module"}