{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/Email.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { ComponentSignInEmail } from \"@components\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { setAuth, setExternalLogin, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { enumExternalMethod } from \"@configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModuleEmailSignIn = props => {\n  _s();\n\n  //page props\n  const {\n    handleForgotPassword\n  } = props; //page hooks\n\n  const {\n    YubEmailSignIn\n  } = useYup();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useNotify();\n  const {\n    t\n  } = useTranslation(); //page variable\n\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const registerSchema = Yup.object().shape(YubEmailSignIn);\n\n  const handleLogin = async (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n\n    //\n    try {\n      setSubmitting(true);\n      dispatch(setLoading(true));\n      const res = await authApi.login(values);\n      const data = res.data;\n      dispatch(setAuth(data));\n      dispatch(setExternalLogin({\n        type: enumExternalMethod.EMAIL_NOT_SOCIAL\n      }));\n      success(t(\"message.login.success\"));\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n      error(message);\n    } finally {\n      setSubmitting(false);\n      dispatch(setLoading(false));\n    }\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched\n  } = useFormik({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: handleLogin\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComponentSignInEmail, {\n      handleForgotPassword: handleForgotPassword,\n      handleBlur: handleBlur,\n      handleChange: handleChange,\n      errors: errors,\n      touched: touched,\n      values: values,\n      handleSubmit: handleSubmit,\n      isSubmitting: isSubmitting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModuleEmailSignIn, \"sOsVpSOkd5kDbbLiVNlRhl2pebs=\", false, function () {\n  return [useYup, useDispatch, useNotify, useTranslation, useFormik];\n});\n\n_c = ModuleEmailSignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleEmailSignIn\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/Email.tsx"],"names":["useFormik","Yup","useDispatch","useTranslation","ComponentSignInEmail","useYup","authApi","setAuth","setExternalLogin","setLoading","useNotify","enumExternalMethod","ModuleEmailSignIn","props","handleForgotPassword","YubEmailSignIn","dispatch","error","success","t","initialValues","email","password","registerSchema","object","shape","handleLogin","values","setSubmitting","res","login","data","type","EMAIL_NOT_SOCIAL","errors","message","response","handleChange","handleBlur","handleSubmit","isSubmitting","touched","validationSchema","onSubmit"],"mappings":"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","sourcesContent":["import { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { ComponentSignInEmail } from \"@components\";\nimport { IAuth, ILogin } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { setAuth, setExternalLogin, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { enumExternalMethod } from \"@configs\";\n\ninterface IProps {\n    handleForgotPassword: () => void;\n}\n\nexport const ModuleEmailSignIn = (props: IProps) => {\n    //page props\n    const { handleForgotPassword } = props;\n    //page hooks\n    const { YubEmailSignIn } = useYup();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const { t } = useTranslation();\n\n    //page variable\n    const initialValues: ILogin = {\n        email: \"\",\n        password: \"\",\n    };\n    const registerSchema = Yup.object().shape(YubEmailSignIn);\n\n    const handleLogin = async (values: ILogin, { setSubmitting }: FormikHelpers<ILogin>) => {\n        //\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const res = await authApi.login(values);\n            const data = res.data as IAuth;\n            dispatch(setAuth(data));\n            dispatch(setExternalLogin({ type: enumExternalMethod.EMAIL_NOT_SOCIAL }));\n            success(t(\"message.login.success\"));\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            error(message);\n        } finally {\n            setSubmitting(false);\n            dispatch(setLoading(false));\n        }\n    };\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: initialValues,\n            validationSchema: registerSchema,\n            onSubmit: handleLogin,\n        });\n    return (\n        <>\n            <ComponentSignInEmail\n                handleForgotPassword={handleForgotPassword}\n                handleBlur={handleBlur}\n                handleChange={handleChange}\n                errors={errors}\n                touched={touched}\n                values={values}\n                handleSubmit={handleSubmit}\n                isSubmitting={isSubmitting}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}