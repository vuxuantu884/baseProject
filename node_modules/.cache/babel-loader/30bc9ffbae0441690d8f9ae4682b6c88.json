{"ast":null,"code":"import{Route,useHistory,useLocation}from\"react-router\";import{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{LayoutApp}from\"@layouts\";import{authRoutes,COUPON,enumTypes,normalRoutes,PATH_404,PATH_HOME,PATH_SIGN_IN,PATH_SIGN_UP_FROM}from\"@configs\";import{getInfo,selectAuth,selectMerchant}from\"@redux\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ComponentAppRoute=function ComponentAppRoute(props){//page props\nvar path=props.path,exact=props.exact;//page hook\nvar _useLocation=useLocation(),pathname=_useLocation.pathname;var history=useHistory();var dispatch=useDispatch();//redux state\nvar _useSelector=useSelector(selectAuth),auth=_useSelector.auth,isSignUp=_useSelector.isSignUp,externalType=_useSelector.externalType;var _useSelector2=useSelector(selectMerchant),_id=_useSelector2._id;//page variable\n//WHAT: check user login\nvar token=auth===null||auth===void 0?void 0:auth.accessToken;var Component=props.component;var Layout=LayoutApp;//WHAT: check valid route\nuseEffect(function(){//What: check merchantID\nif(!_id){history.push(PATH_404);}//WHAT: check normal path\nvar isNormalRoute=pathname===PATH_HOME?true:normalRoutes.some(function(item){if(item===PATH_HOME){return false;}return pathname.includes(item);});//WHAT: check a uth path\nvar isAuthRoute=authRoutes.some(function(item){return pathname.includes(item);});if(token){// const userPermissions = auth.userPermissions;\n// || (props.permission && !userPermissions?.includes(props.permission))\nif((externalType===null||externalType===void 0?void 0:externalType.type)===enumTypes.COUPON&&externalType.id){history.push(COUPON+\"/\"+externalType.id);}else if(isSignUp){history.push(PATH_SIGN_UP_FROM);}else if(isAuthRoute){history.push(PATH_HOME);}}else if(isNormalRoute){history.push(PATH_SIGN_IN);}},[pathname,auth]);useEffect(function(){if(token){dispatch(getInfo());}},[]);return/*#__PURE__*/_jsx(Route,{path:path,exact:exact,render:function render(){return/*#__PURE__*/_jsx(Layout,{children:/*#__PURE__*/_jsx(Component,{})});}});};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/AppRoute.tsx"],"names":["Route","useHistory","useLocation","useEffect","useDispatch","useSelector","LayoutApp","authRoutes","COUPON","enumTypes","normalRoutes","PATH_404","PATH_HOME","PATH_SIGN_IN","PATH_SIGN_UP_FROM","getInfo","selectAuth","selectMerchant","ComponentAppRoute","props","path","exact","pathname","history","dispatch","auth","isSignUp","externalType","_id","token","accessToken","Component","component","Layout","push","isNormalRoute","some","item","includes","isAuthRoute","type","id"],"mappings":"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","sourcesContent":["import { Route, useHistory, useLocation } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { IRoute } from \"@interfaces\";\nimport { LayoutApp } from \"@layouts\";\nimport {\n    authRoutes,\n    COUPON,\n    enumTypes,\n    normalRoutes,\n    PATH_404,\n    PATH_HOME,\n    PATH_SIGN_IN,\n    PATH_SIGN_UP_FROM,\n} from \"@configs\";\nimport { getInfo, selectAuth, selectMerchant } from \"@redux\";\n\nexport const ComponentAppRoute = (props: IRoute) => {\n    //page props\n    const { path, exact } = props;\n    //page hook\n    const { pathname } = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    //redux state\n    const { auth, isSignUp, externalType } = useSelector(selectAuth);\n    const { _id } = useSelector(selectMerchant);\n\n    //page variable\n    //WHAT: check user login\n    const token = auth?.accessToken;\n    const Component = props.component;\n    const Layout = LayoutApp;\n\n    //WHAT: check valid route\n    useEffect(() => {\n        //What: check merchantID\n        if (!_id) {\n            history.push(PATH_404);\n        }\n\n        //WHAT: check normal path\n        const isNormalRoute =\n            pathname === PATH_HOME\n                ? true\n                : normalRoutes.some((item: string) => {\n                      if (item === PATH_HOME) {\n                          return false;\n                      }\n                      return pathname.includes(item);\n                  });\n\n        //WHAT: check a uth path\n        const isAuthRoute = authRoutes.some((item: string) => pathname.includes(item));\n        if (token) {\n            // const userPermissions = auth.userPermissions;\n            // || (props.permission && !userPermissions?.includes(props.permission))\n            if (externalType?.type === enumTypes.COUPON && externalType.id) {\n                history.push(COUPON + \"/\" + externalType.id);\n            } else if (isSignUp) {\n                history.push(PATH_SIGN_UP_FROM);\n            } else if (isAuthRoute) {\n                history.push(PATH_HOME);\n            }\n        } else if (isNormalRoute) {\n            history.push(PATH_SIGN_IN);\n        }\n    }, [pathname, auth]);\n\n    useEffect(() => {\n        if (token) {\n            dispatch(getInfo());\n        }\n    }, []);\n\n    return (\n        <Route\n            path={path}\n            exact={exact}\n            render={() => (\n                <Layout>\n                    <Component />\n                </Layout>\n            )}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}