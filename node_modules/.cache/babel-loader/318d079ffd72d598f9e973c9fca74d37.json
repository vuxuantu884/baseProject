{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useTranslation } from \"react-i18next\";\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting, ComponentUserSettingSave } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { useYup } from \"@validations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageUserSetting = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify();\n  const {\n    YubSUserSetting\n  } = useYup();\n  const {\n    t\n  } = useTranslation(); //redux state\n\n  const {\n    userInfo\n  } = useSelector(selectAuth); //page state\n\n  const [title, setTitle] = useState(\"\");\n  const [errorPhone, setError] = useState(); //page variable\n\n  const contact = userInfo === null || userInfo === void 0 ? void 0 : userInfo.contact;\n  const initialValue = {\n    avatar: userInfo === null || userInfo === void 0 ? void 0 : userInfo.avatar,\n    fullName: (contact === null || contact === void 0 ? void 0 : contact.fullName) || \"\",\n    dateOfBirth: (contact === null || contact === void 0 ? void 0 : contact.dateOfBirth) || \"\",\n    phoneNumber: (contact === null || contact === void 0 ? void 0 : contact.phoneNumber) || \"\",\n    email: (contact === null || contact === void 0 ? void 0 : contact.email) || \"\"\n  };\n  const registerSchema = Yup.object().shape(YubSUserSetting);\n\n  const handleUploadImage = async e => {\n    dispatch(setLoading(true)); //@ts-ignore\n\n    const values = e.file;\n    const formData = new FormData();\n    formData.append(\"file\", values);\n\n    try {\n      const res = await merchantApi.uploadImage(formData);\n      setFieldValue(\"avatar\", res.data);\n    } catch (err) {\n      const data = err.response.data;\n      const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n      error(mess);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleSaveSetting = async (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n\n    //\n    if (!values.phoneNumber) {\n      setError(t(\"validation.isNumber\"));\n      return;\n    }\n\n    try {\n      setSubmitting(true);\n      dispatch(setLoading(true));\n      const dateForm = new Date(date.day + \"/\" + date.month + \"/\" + date.year);\n      const res = await authApi.createPassword({ ...values,\n        dateOrBirth: dateForm,\n        surveyQuestions\n      });\n\n      if (res) {\n        success(t(\"message.sign_up.success\"));\n        dispatch(setExternalLogin({\n          type: enumExternalMethod.EMAIL,\n          isSignUp: false\n        }));\n        history.push(PATH_HOME);\n      }\n    } catch (errors) {\n      const errorsResponse = errors.response.data.errors;\n\n      if (Array.isArray(errorsResponse) && errorsResponse.length) {\n        error(errorsResponse[0]);\n      } else {\n        error(t(\"message.sign_up.fail\"));\n      }\n    } finally {\n      setSubmitting(false);\n      dispatch(setLoading(false));\n    }\n\n    console.log(12321);\n    setTitle(\"\");\n  };\n\n  const handleChangeTitle = title => {\n    setTitle(title);\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched\n  } = useFormik({\n    initialValues: initialValue,\n    validationSchema: registerSchema,\n    onSubmit: handleSaveSetting\n  });\n\n  const handleChangePhoneNumber = (isValid, value, selectedCountryData, fullNumber) => {\n    if (!isValid) setError(t(\"validation.isNumber\"));else {\n      setError(\"\");\n    }\n    setFieldValue(\"phoneNumber\", fullNumber.replace(/(\\s|-)/g, \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: title ? /*#__PURE__*/_jsxDEV(ComponentUserSettingSave, {\n      values: values,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      handleSubmit: handleSubmit,\n      isSubmitting: isSubmitting,\n      errors: errors,\n      touched: touched,\n      title: title,\n      setFieldTouched: setFieldTouched,\n      handleChangePhoneNumber: handleChangePhoneNumber,\n      errorPhone: errorPhone || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ComponentUserSetting, {\n      handleUploadImage: handleUploadImage,\n      values: values,\n      handleChangeTitle: handleChangeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageUserSetting, \"v2BYMM9/n3RSpjvNnrrIDhRTMCc=\", false, function () {\n  return [useDispatch, useNotify, useYup, useTranslation, useSelector, useFormik];\n});\n\n_c = PageUserSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageUserSetting\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx"],"names":["useDispatch","useSelector","useState","useFormik","Yup","useTranslation","merchantApi","ComponentUserSetting","ComponentUserSettingSave","selectAuth","setLoading","useNotify","useYup","PageUserSetting","dispatch","error","YubSUserSetting","t","userInfo","title","setTitle","errorPhone","setError","contact","initialValue","avatar","fullName","dateOfBirth","phoneNumber","email","registerSchema","object","shape","handleUploadImage","e","values","file","formData","FormData","append","res","uploadImage","setFieldValue","data","err","response","mess","Array","isArray","errors","message","handleSaveSetting","setSubmitting","dateForm","Date","date","day","month","year","authApi","createPassword","dateOrBirth","surveyQuestions","success","setExternalLogin","type","enumExternalMethod","EMAIL","isSignUp","history","push","PATH_HOME","errorsResponse","length","console","log","handleChangeTitle","handleChange","handleBlur","handleSubmit","isSubmitting","touched","setFieldTouched","initialValues","validationSchema","onSubmit","handleChangePhoneNumber","isValid","value","selectedCountryData","fullNumber","replace"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { FormikHelpers, useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { CountryData } from \"react-intl-tel-input\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting, ComponentUserSettingSave } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { IUserSetting } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { useSetting } from \"@configs\";\n\nexport const PageUserSetting = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    const { YubSUserSetting } = useYup();\n    const { t } = useTranslation();\n    //redux state\n    const { userInfo } = useSelector(selectAuth);\n    //page state\n    const [title, setTitle] = useState<useSetting | \"\">(\"\");\n    const [errorPhone, setError] = useState<string>();\n\n    //page variable\n\n    const contact = userInfo?.contact;\n    const initialValue: IUserSetting = {\n        avatar: userInfo?.avatar,\n        fullName: contact?.fullName || \"\",\n        dateOfBirth: contact?.dateOfBirth || \"\",\n        phoneNumber: contact?.phoneNumber || \"\",\n        email: contact?.email || \"\",\n    };\n    const registerSchema = Yup.object().shape(YubSUserSetting);\n\n    const handleUploadImage = async (e: React.ChangeEventHandler<HTMLInputElement> | undefined) => {\n        dispatch(setLoading(true));\n        //@ts-ignore\n        const values = e.file;\n        const formData = new FormData();\n        formData.append(\"file\", values);\n        try {\n            const res = await merchantApi.uploadImage(formData);\n            setFieldValue(\"avatar\", res.data);\n        } catch (err: any) {\n            const data = err.response.data;\n            const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n            error(mess);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleSaveSetting = async (\n        values: IUserSetting,\n        { setSubmitting }: FormikHelpers<IUserSetting>\n    ) => {\n        //\n        if (!values.phoneNumber) {\n            setError(t(\"validation.isNumber\"));\n            return;\n        }\n\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const dateForm = new Date(date.day + \"/\" + date.month + \"/\" + date.year);\n            const res = await authApi.createPassword({\n                ...values,\n                dateOrBirth: dateForm,\n                surveyQuestions,\n            });\n            if (res) {\n                success(t(\"message.sign_up.success\"));\n                dispatch(setExternalLogin({ type: enumExternalMethod.EMAIL, isSignUp: false }));\n                history.push(PATH_HOME);\n            }\n        } catch (errors: any) {\n            const errorsResponse = errors.response.data.errors;\n            if (Array.isArray(errorsResponse) && errorsResponse.length) {\n                error(errorsResponse[0]);\n            } else {\n                error(t(\"message.sign_up.fail\"));\n            }\n        } finally {\n            setSubmitting(false);\n            dispatch(setLoading(false));\n        }\n        console.log(12321);\n        setTitle(\"\");\n    };\n\n    const handleChangeTitle = (title: useSetting) => {\n        setTitle(title);\n    };\n\n    const {\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        errors,\n        touched,\n        setFieldValue,\n        setFieldTouched,\n    } = useFormik({\n        initialValues: initialValue,\n        validationSchema: registerSchema,\n        onSubmit: handleSaveSetting,\n    });\n\n    const handleChangePhoneNumber = (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        if (!isValid) setError(t(\"validation.isNumber\"));\n        else {\n            setError(\"\");\n        }\n        setFieldValue(\"phoneNumber\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    return (\n        <>\n            {title ? (\n                <ComponentUserSettingSave\n                    values={values}\n                    handleChange={handleChange}\n                    handleBlur={handleBlur}\n                    handleSubmit={handleSubmit}\n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    touched={touched}\n                    title={title}\n                    setFieldTouched={setFieldTouched}\n                    handleChangePhoneNumber={handleChangePhoneNumber}\n                    errorPhone={errorPhone || \"\"}\n                />\n            ) : (\n                <ComponentUserSetting\n                    handleUploadImage={handleUploadImage}\n                    values={values}\n                    handleChangeTitle={handleChangeTitle}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}