{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport * as Yup from \"yup\";\nimport { enumValidation } from \"@configs\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const YubSUserSetting = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  return {\n    email: Yup.string().required(t(\"validation.required\", {\n      name: t(\"page.auth.email\")\n    })).email(t(\"validation.email_invalid\")).max(enumValidation.MAX_LENGTH_INPUT, t(\"validation.max\", {\n      name: t(\"page.auth.email\"),\n      number: enumValidation.MAX_LENGTH_INPUT\n    })),\n    fullName: Yup.string().required(t(\"validation.required\", {\n      returnObjects: true,\n      name: t(\"page.auth.name\")\n    })).max(enumValidation.MAX_LENGTH_INPUT, t(\"validation.max_length_number\", {\n      returnObjects: true,\n      name: t(\"page.auth.name\"),\n      number: enumValidation.MAX_LENGTH_INPUT\n    })),\n    phoneNumber: Yup.string().required(t(\"validation.required\", {\n      name: t(\"page.auth.phone\")\n    })).matches(phoneRegExp, t(\"validation.isNumber\"))\n  };\n};\n\n_s(YubSUserSetting, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = YubSUserSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"YubSUserSetting\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Validations/Yup/UserSetting.ts"],"names":["useTranslation","Yup","enumValidation","phoneRegExp","YubSUserSetting","t","email","string","required","name","max","MAX_LENGTH_INPUT","number","fullName","returnObjects","phoneNumber","matches"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAEA,MAAMC,WAAW,GACb,yGADJ;AAGA,OAAO,MAAMC,eAAe,GAAE,MAAM;AAAA;;AAChC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,EAA5B;AACA,SAAO;AACHM,IAAAA,KAAK,EAAEL,GAAG,CAACM,MAAJ,GACFC,QADE,CAECH,CAAC,CAAC,qBAAD,EAAwB;AACrBI,MAAAA,IAAI,EAAEJ,CAAC,CAAC,iBAAD;AADc,KAAxB,CAFF,EAMFC,KANE,CAMID,CAAC,CAAC,0BAAD,CANL,EAOFK,GAPE,CAQCR,cAAc,CAACS,gBARhB,EASCN,CAAC,CAAC,gBAAD,EAAmB;AAChBI,MAAAA,IAAI,EAAEJ,CAAC,CAAC,iBAAD,CADS;AAEhBO,MAAAA,MAAM,EAAEV,cAAc,CAACS;AAFP,KAAnB,CATF,CADJ;AAeHE,IAAAA,QAAQ,EAAEZ,GAAG,CAACM,MAAJ,GACLC,QADK,CAEFH,CAAC,CAAC,qBAAD,EAAwB;AACrBS,MAAAA,aAAa,EAAE,IADM;AAErBL,MAAAA,IAAI,EAAEJ,CAAC,CAAC,gBAAD;AAFc,KAAxB,CAFC,EAOLK,GAPK,CAQFR,cAAc,CAACS,gBARb,EASFN,CAAC,CAAC,8BAAD,EAAiC;AAC9BS,MAAAA,aAAa,EAAE,IADe;AAE9BL,MAAAA,IAAI,EAAEJ,CAAC,CAAC,gBAAD,CAFuB;AAG9BO,MAAAA,MAAM,EAAEV,cAAc,CAACS;AAHO,KAAjC,CATC,CAfP;AA8BCI,IAAAA,WAAW,EAAEd,GAAG,CAACM,MAAJ,GACZC,QADY,CAETH,CAAC,CAAC,qBAAD,EAAwB;AACrBI,MAAAA,IAAI,EAAEJ,CAAC,CAAC,iBAAD;AADc,KAAxB,CAFQ,EAMZW,OANY,CAMJb,WANI,EAMSE,CAAC,CAAC,qBAAD,CANV;AA9Bd,GAAP;AAsCH,CAzCM;;GAAMD,e;UAEKJ,c;;;KAFLI,e","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport * as Yup from \"yup\";\n\nimport { enumValidation } from \"@configs\";\n\nconst phoneRegExp =\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport const YubSUserSetting= () => {\n    //page hook\n    const { t } = useTranslation();\n    return {\n        email: Yup.string()\n            .required(\n                t(\"validation.required\", {\n                    name: t(\"page.auth.email\"),\n                })\n            )\n            .email(t(\"validation.email_invalid\"))\n            .max(\n                enumValidation.MAX_LENGTH_INPUT,\n                t(\"validation.max\", {\n                    name: t(\"page.auth.email\"),\n                    number: enumValidation.MAX_LENGTH_INPUT,\n                })\n            ),\n        fullName: Yup.string()\n            .required(\n                t(\"validation.required\", {\n                    returnObjects: true,\n                    name: t(\"page.auth.name\"),\n                })\n            )\n            .max(\n                enumValidation.MAX_LENGTH_INPUT,\n                t(\"validation.max_length_number\", {\n                    returnObjects: true,\n                    name: t(\"page.auth.name\"),\n                    number: enumValidation.MAX_LENGTH_INPUT,\n                })\n            ),\n            phoneNumber: Yup.string()\n            .required(\n                t(\"validation.required\", {\n                    name: t(\"page.auth.phone\"),\n                })\n            )\n            .matches(phoneRegExp, t(\"validation.isNumber\")),\n    };\n};\n"]},"metadata":{},"sourceType":"module"}