{"ast":null,"code":"import Promise from './index';\nimport promiseFinally from './finally';\nimport allSettled from './allSettled';\n/** @suppress {undefinedVars} */\n\nvar globalNS = function () {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n}(); // Expose the polyfill if Promise is undefined or set to a\n// non-function value. The latter can be due to a named HTMLElement\n// being exposed by browsers for legacy reasons.\n// https://github.com/taylorhakes/promise-polyfill/issues/114\n\n\nif (typeof globalNS['Promise'] !== 'function') {\n  globalNS['Promise'] = Promise;\n} else {\n  if (!globalNS.Promise.prototype['finally']) {\n    globalNS.Promise.prototype['finally'] = promiseFinally;\n  }\n\n  if (!globalNS.Promise.allSettled) {\n    globalNS.Promise.allSettled = allSettled;\n  }\n}","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/promise-polyfill/src/polyfill.js"],"names":["Promise","promiseFinally","allSettled","globalNS","self","window","global","Error","prototype"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;;AACA,IAAIC,QAAQ,GAAI,YAAW;AACzB;AACA;AACA;AACA,MAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAOA,IAAP;AACD;;AACD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOA,MAAP;AACD;;AACD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOA,MAAP;AACD;;AACD,QAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACD,CAdc,EAAf,C,CAgBA;AACA;AACA;AACA;;;AACA,IAAI,OAAOJ,QAAQ,CAAC,SAAD,CAAf,KAA+B,UAAnC,EAA+C;AAC7CA,EAAAA,QAAQ,CAAC,SAAD,CAAR,GAAsBH,OAAtB;AACD,CAFD,MAEO;AACL,MAAI,CAACG,QAAQ,CAACH,OAAT,CAAiBQ,SAAjB,CAA2B,SAA3B,CAAL,EAA4C;AAC1CL,IAAAA,QAAQ,CAACH,OAAT,CAAiBQ,SAAjB,CAA2B,SAA3B,IAAwCP,cAAxC;AACD;;AACD,MAAI,CAACE,QAAQ,CAACH,OAAT,CAAiBE,UAAtB,EAAkC;AAChCC,IAAAA,QAAQ,CAACH,OAAT,CAAiBE,UAAjB,GAA8BA,UAA9B;AACD;AACF","sourcesContent":["import Promise from './index';\nimport promiseFinally from './finally';\nimport allSettled from './allSettled';\n\n/** @suppress {undefinedVars} */\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\n// Expose the polyfill if Promise is undefined or set to a\n// non-function value. The latter can be due to a named HTMLElement\n// being exposed by browsers for legacy reasons.\n// https://github.com/taylorhakes/promise-polyfill/issues/114\nif (typeof globalNS['Promise'] !== 'function') {\n  globalNS['Promise'] = Promise;\n} else {\n  if (!globalNS.Promise.prototype['finally']) {\n    globalNS.Promise.prototype['finally'] = promiseFinally;\n  } \n  if (!globalNS.Promise.allSettled) {\n    globalNS.Promise.allSettled = allSettled;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}