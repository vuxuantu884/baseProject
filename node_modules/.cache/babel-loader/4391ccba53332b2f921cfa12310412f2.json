{"ast":null,"code":"import queryString from\"querystring\";import{useEffect}from\"react\";import{useDispatch}from\"react-redux\";import{useHistory}from\"react-router\";import{enumExternalMethod,PATH_SIGN_UP}from\"@configs\";import{logout,setExternalLogin}from\"@redux\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export var PageLineLogin=function PageLineLogin(){//page hook\nvar dispatch=useDispatch();var history=useHistory();//page variable\nvar queryParams=queryString.parse(window.location.search.substring(1));useEffect(function(){if(queryParams.code){if(queryParams.state){dispatch(setExternalLogin({type:enumExternalMethod.LINE,isSignUp:false,line:{code:queryParams.code.toString(),state:queryParams.state.toString()}}));history.push(PATH_SIGN_UP);}else{dispatch(logout());}}else{dispatch(logout());}},[queryParams]);return/*#__PURE__*/_jsx(_Fragment,{});};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/LineLogin.tsx"],"names":["queryString","useEffect","useDispatch","useHistory","enumExternalMethod","PATH_SIGN_UP","logout","setExternalLogin","PageLineLogin","dispatch","history","queryParams","parse","window","location","search","substring","code","state","type","LINE","isSignUp","line","toString","push"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,aAAxB,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA,OAASC,kBAAT,CAA6BC,YAA7B,KAAiD,UAAjD,CACA,OAASC,MAAT,CAAiBC,gBAAjB,KAAyC,QAAzC,C,gGAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC/B;AACA,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CACA;AACA,GAAMQ,CAAAA,WAAW,CAAGX,WAAW,CAACY,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,CAAlB,CAApB,CAEAf,SAAS,CAAC,UAAM,CACZ,GAAIU,WAAW,CAACM,IAAhB,CAAsB,CAClB,GAAIN,WAAW,CAACO,KAAhB,CAAuB,CACnBT,QAAQ,CACJF,gBAAgB,CAAC,CACbY,IAAI,CAAEf,kBAAkB,CAACgB,IADZ,CAEbC,QAAQ,CAAE,KAFG,CAGbC,IAAI,CAAE,CACFL,IAAI,CAAEN,WAAW,CAACM,IAAZ,CAAiBM,QAAjB,EADJ,CAEFL,KAAK,CAAEP,WAAW,CAACO,KAAZ,CAAkBK,QAAlB,EAFL,CAHO,CAAD,CADZ,CAAR,CAUAb,OAAO,CAACc,IAAR,CAAanB,YAAb,EACH,CAZD,IAYO,CACHI,QAAQ,CAACH,MAAM,EAAP,CAAR,CACH,CACJ,CAhBD,IAgBO,CACHG,QAAQ,CAACH,MAAM,EAAP,CAAR,CACH,CACJ,CApBQ,CAoBN,CAACK,WAAD,CApBM,CAAT,CAsBA,mBAAO,kBAAP,CACH,CA9BM","sourcesContent":["import queryString from \"querystring\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { enumExternalMethod, PATH_SIGN_UP } from \"@configs\";\nimport { logout, setExternalLogin } from \"@redux\";\n\nexport const PageLineLogin = () => {\n    //page hook\n    const dispatch = useDispatch();\n    const history = useHistory();\n    //page variable\n    const queryParams = queryString.parse(window.location.search.substring(1));\n\n    useEffect(() => {\n        if (queryParams.code) {\n            if (queryParams.state) {\n                dispatch(\n                    setExternalLogin({\n                        type: enumExternalMethod.LINE,\n                        isSignUp: false,\n                        line: {\n                            code: queryParams.code.toString(),\n                            state: queryParams.state.toString(),\n                        },\n                    })\n                );\n                history.push(PATH_SIGN_UP);\n            } else {\n                dispatch(logout());\n            }\n        } else {\n            dispatch(logout());\n        }\n    }, [queryParams]);\n\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}