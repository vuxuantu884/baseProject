{"ast":null,"code":"import { INVALID_CONFIG as i } from \"@liff/consts\";\nimport { logger as r } from \"@liff/logger\";\nimport { hexToBase64 as e, randomAlphaNumericString as o, createLiffError as t, qs as f } from \"@liff/util\";\nimport { getConfig as n, setLoginTmp as l } from \"@liff/store\";\nimport { getEndPoint as p } from \"@liff/server-api\";\nimport { getVersion as c } from \"@liff/get-version\";\nimport { isSubWindow as d } from \"@liff/is-sub-window\";\nimport { isInClient as a } from \"@liff/is-in-client\";\nimport m from \"tiny-sha256\";\n\nvar s = function () {\n  function s(i) {\n    this.driver = i;\n  }\n\n  return Object.defineProperty(s.prototype, \"name\", {\n    get: function () {\n      return \"login\";\n    },\n    enumerable: !1,\n    configurable: !0\n  }), s.prototype.install = function () {\n    return this.login.bind(this);\n  }, s.prototype.login = function (s) {\n    this.driver.runSyncHook(\"beforeLogin\", s);\n    var u = o(43),\n        g = e(m(u)).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\"),\n        h = n();\n    if (!h || !h.liffId) throw t(i, \"You need to define `liffId` for liff.login()\");\n    var _ = {\n      app_id: h.liffId,\n      state: o(12),\n      response_type: \"code\",\n      code_challenge_method: \"S256\",\n      code_challenge: g,\n      liff_sdk_version: c()\n    };\n    s && s.redirectUri && (_.redirect_uri = s.redirectUri), d() && !a() && (_.disable_auto_login = \"true\"), l({\n      codeVerifier: u\n    });\n    var v = p(\"authorize\") + \"?\" + f.stringify(_);\n    r.debug(\"[Redirect] \" + v), window.location.href = v;\n  }, s;\n}();\n\nexport { s as LoginModule };","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/@liff/login/lib/index.es.js"],"names":["INVALID_CONFIG","i","logger","r","hexToBase64","e","randomAlphaNumericString","o","createLiffError","t","qs","f","getConfig","n","setLoginTmp","l","getEndPoint","p","getVersion","c","isSubWindow","d","isInClient","a","m","s","driver","Object","defineProperty","prototype","get","enumerable","configurable","install","login","bind","runSyncHook","u","g","replace","h","liffId","_","app_id","state","response_type","code_challenge_method","code_challenge","liff_sdk_version","redirectUri","redirect_uri","disable_auto_login","codeVerifier","v","stringify","debug","window","location","href","LoginModule"],"mappings":"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","sourcesContent":["import{INVALID_CONFIG as i}from\"@liff/consts\";import{logger as r}from\"@liff/logger\";import{hexToBase64 as e,randomAlphaNumericString as o,createLiffError as t,qs as f}from\"@liff/util\";import{getConfig as n,setLoginTmp as l}from\"@liff/store\";import{getEndPoint as p}from\"@liff/server-api\";import{getVersion as c}from\"@liff/get-version\";import{isSubWindow as d}from\"@liff/is-sub-window\";import{isInClient as a}from\"@liff/is-in-client\";import m from\"tiny-sha256\";var s=function(){function s(i){this.driver=i}return Object.defineProperty(s.prototype,\"name\",{get:function(){return\"login\"},enumerable:!1,configurable:!0}),s.prototype.install=function(){return this.login.bind(this)},s.prototype.login=function(s){this.driver.runSyncHook(\"beforeLogin\",s);var u=o(43),g=e(m(u)).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/=/g,\"\"),h=n();if(!h||!h.liffId)throw t(i,\"You need to define `liffId` for liff.login()\");var _={app_id:h.liffId,state:o(12),response_type:\"code\",code_challenge_method:\"S256\",code_challenge:g,liff_sdk_version:c()};s&&s.redirectUri&&(_.redirect_uri=s.redirectUri),d()&&!a()&&(_.disable_auto_login=\"true\"),l({codeVerifier:u});var v=p(\"authorize\")+\"?\"+f.stringify(_);r.debug(\"[Redirect] \"+v),window.location.href=v},s}();export{s as LoginModule};\n"]},"metadata":{},"sourceType":"module"}