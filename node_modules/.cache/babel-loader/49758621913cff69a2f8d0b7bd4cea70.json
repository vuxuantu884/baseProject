{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Free-point.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { freePointApi, merchantApi } from \"@api\";\nimport { ComponentFreePointDetail, ComponentPopUpConfirm } from \"@components\";\nimport { PATH_404, enumStatus, enumTypes, PATH_HOME, PATH_SIGN_IN_EMAIL } from \"@configs\";\nimport { selectAuth, setExternalTypes, setLoading, setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageFreePoint = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const {\n    error,\n    success\n  } = useNotify(); //page redux\n\n  const {\n    auth,\n    externalType\n  } = useSelector(selectAuth); //page state\n\n  const [freePoint, setFreePoint] = useState();\n  const [showConfirm, setShowConfirm] = useState(false); //page variable\n\n  const token = auth === null || auth === void 0 ? void 0 : auth.accessToken;\n  useEffect(_s(() => {\n    _s();\n\n    useFreePoint();\n  }, \"PoOj47Ga9rxCNfXp+SwoyqaV5ME=\", false, function () {\n    return [useFreePoint];\n  }), []);\n\n  const useFreePoint = async () => {\n    try {\n      dispatch(setLoading(true));\n\n      if (id) {\n        if (token) {\n          const res = await freePointApi.getPreviewFreePoint(id);\n          const data = res.data;\n          setFreePoint(data);\n          dispatch(setExternalTypes({\n            type: (externalType === null || externalType === void 0 ? void 0 : externalType.type) || enumTypes.FREE_POINT,\n            id: \"\"\n          }));\n        } else {\n          const res = await merchantApi.getFreePointId(id);\n          const data = res.data;\n          dispatch(setMerchantID(data.merchantId));\n          const merchantConfig = await merchantApi.getMerchantConfig();\n          const merchant = merchantConfig.data.merchant;\n          dispatch(setMerchant(merchant));\n          dispatch(setMainColor(merchant.themeColor));\n          dispatch(setExternalTypes({\n            type: enumTypes.COUPON,\n            id\n          }));\n          history.push(PATH_SIGN_IN_EMAIL);\n        }\n      } else {\n        history.push(PATH_404);\n      }\n    } catch {\n      history.push(PATH_404);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleRedeemedFreePoint = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await freePointApi.redeemedFreePoint({\n        objectId: (freePoint === null || freePoint === void 0 ? void 0 : freePoint._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.FREE_POINT\n      }, id);\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.received.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n      history.push(PATH_HOME);\n    }\n  };\n\n  const handleToggleConfirm = () => {\n    setShowConfirm(!showConfirm);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [freePoint && /*#__PURE__*/_jsxDEV(ComponentFreePointDetail, {\n      freePoint: freePoint,\n      handleToggleConfirm: handleToggleConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this), showConfirm && freePoint && /*#__PURE__*/_jsxDEV(ComponentPopUpConfirm, {\n      handleCloseDetail: handleToggleConfirm,\n      data: freePoint,\n      handleConfirm: handleRedeemedFreePoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(PageFreePoint, \"D5HpfVeFGVDpMceokcqRmxwXzAs=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useHistory, useNotify, useSelector];\n});\n\n_c = PageFreePoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageFreePoint\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Free-point.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","useParams","useTranslation","freePointApi","merchantApi","ComponentFreePointDetail","ComponentPopUpConfirm","PATH_404","enumStatus","enumTypes","PATH_HOME","PATH_SIGN_IN_EMAIL","selectAuth","setExternalTypes","setLoading","setMainColor","setMerchant","setMerchantID","useNotify","PageFreePoint","t","dispatch","id","history","error","success","auth","externalType","freePoint","setFreePoint","showConfirm","setShowConfirm","token","accessToken","useFreePoint","res","getPreviewFreePoint","data","type","FREE_POINT","getFreePointId","merchantId","merchantConfig","getMerchantConfig","merchant","themeColor","COUPON","push","handleRedeemedFreePoint","redeemedFreePoint","objectId","_id","status","ACTIVE","message","err","response","handleToggleConfirm"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { freePointApi, merchantApi } from \"@api\";\nimport { ComponentFreePointDetail, ComponentPopUpConfirm } from \"@components\";\nimport { PATH_404, enumStatus, enumTypes, PATH_HOME, PATH_SIGN_IN_EMAIL } from \"@configs\";\nimport { IFreePoint, IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport {\n    selectAuth,\n    setExternalTypes,\n    setLoading,\n    setMainColor,\n    setMerchant,\n    setMerchantID,\n} from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageFreePoint = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const { error, success } = useNotify();\n    //page redux\n    const { auth, externalType } = useSelector(selectAuth);\n    //page state\n    const [freePoint, setFreePoint] = useState<IFreePoint>();\n    const [showConfirm, setShowConfirm] = useState<boolean>(false);\n    //page variable\n    const token = auth?.accessToken;\n\n    useEffect(() => {\n        useFreePoint();\n    }, []);\n\n    const useFreePoint = async () => {\n        try {\n            dispatch(setLoading(true));\n            if (id) {\n                if (token) {\n                    const res = await freePointApi.getPreviewFreePoint(id);\n                    const data = res.data as IFreePoint;\n                    setFreePoint(data);\n                    dispatch(\n                        setExternalTypes({\n                            type: externalType?.type || enumTypes.FREE_POINT,\n                            id: \"\",\n                        })\n                    );\n                } else {\n                    const res = await merchantApi.getFreePointId(id);\n                    const data = res.data as IMerchantQRcode;\n                    dispatch(setMerchantID(data.merchantId));\n                    const merchantConfig = await merchantApi.getMerchantConfig();\n                    const merchant = merchantConfig.data.merchant as IMerchant;\n                    dispatch(setMerchant(merchant));\n                    dispatch(setMainColor(merchant.themeColor));\n                    dispatch(setExternalTypes({ type: enumTypes.COUPON, id }));\n                    history.push(PATH_SIGN_IN_EMAIL);\n                }\n            } else {\n                history.push(PATH_404);\n            }\n        } catch {\n            history.push(PATH_404);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleRedeemedFreePoint = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await freePointApi.redeemedFreePoint(\n                {\n                    objectId: freePoint?._id || \"\",\n                    status: enumStatus.ACTIVE,\n                    type: enumTypes.FREE_POINT,\n                },\n                id\n            );\n            if (res.data.message) {\n                success(res.data.message);\n            }\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.received.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n            history.push(PATH_HOME);\n        }\n    };\n\n    const handleToggleConfirm = () => {\n        setShowConfirm(!showConfirm);\n    };\n\n    return (\n        <>\n            {freePoint && (\n                <ComponentFreePointDetail\n                    freePoint={freePoint}\n                    handleToggleConfirm={handleToggleConfirm}\n                />\n            )}\n\n            {showConfirm && freePoint && (\n                <ComponentPopUpConfirm\n                    handleCloseDetail={handleToggleConfirm}\n                    data={freePoint as IFreePoint}\n                    handleConfirm={handleRedeemedFreePoint}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}