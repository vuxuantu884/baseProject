{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/signUp/Otp.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ComponentHeaderAuth, ComponentSignUpOTP } from \"@components\";\nimport { selectAuth, selectMerchant, setAuth, setLoading } from \"@redux\";\nimport { enumExternalMethod, enumValidation, PATH_SIGN_UP_EMAIL } from \"@configs\";\nimport { authApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageSignUpOTP = () => {\n  _s();\n\n  //page hook\n  const history = useHistory();\n  const {\n    error,\n    success\n  } = useNotify();\n  const dispatch = useDispatch(); //page state\n\n  const [otp, setOtp] = useState(\"\");\n  const [timeResend, setTimeResend] = useState(60); //redux state\n\n  const merchant = useSelector(selectMerchant);\n  const {\n    externalLogin\n  } = useSelector(selectAuth); //page variable\n\n  const phoneNumber = window.sessionStorage.getItem(\"phoneNumber\") || \"\";\n  useEffect(() => {\n    if (externalLogin !== enumExternalMethod.TEL) {\n      history.push(PATH_SIGN_UP_EMAIL);\n    }\n  }, []);\n\n  const handleChangeOtp = otp => {\n    setOtp(otp);\n  };\n\n  const handleVerifyOtp = async () => {\n    if (otp.length < enumValidation.LENTH_OTP) return;\n\n    try {\n      dispatch(setLoading(true));\n      const res = await authApi.verifyPhone({\n        phoneNumber,\n        code: otp\n      });\n      const data = res.data;\n\n      if (res.data) {\n        dispatch(setAuth(data));\n      }\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n      error(message);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleResend = () => {\n    const id = setInterval(() => {\n      setTimeResend(timeResend => timeResend - 1);\n\n      if (time === 0) {\n        clearInterval(id);\n      }\n    }, 1000); // try {\n    //     dispatch(setLoading(true));\n    //     const res = await authApi.resendPhone({\n    //         phoneNumber,\n    //     });\n    //     if (res.data.message) {\n    //         success(res.data.message);\n    //     }\n    // } catch (errors: any) {\n    //     const { message } = errors.response.data;\n    //     error(message);\n    // } finally {\n    //     dispatch(setLoading(false));\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    color: merchant.themeColor,\n    children: [/*#__PURE__*/_jsxDEV(ComponentHeaderAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ComponentSignUpOTP, {\n      handleVerifyOtp: handleVerifyOtp,\n      handleChangeOtp: handleChangeOtp,\n      handleResend: handleResend,\n      otp: otp,\n      timeResend: timeResend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageSignUpOTP, \"E4w3UxSoNGqrtTZfJqQyoSEZllI=\", false, function () {\n  return [useHistory, useNotify, useDispatch, useSelector, useSelector];\n});\n\n_c = PageSignUpOTP;\nconst StyledContainer = styled.div``;\n_c2 = StyledContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PageSignUpOTP\");\n$RefreshReg$(_c2, \"StyledContainer\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/signUp/Otp.tsx"],"names":["styled","useDispatch","useSelector","useEffect","useState","useHistory","ComponentHeaderAuth","ComponentSignUpOTP","selectAuth","selectMerchant","setAuth","setLoading","enumExternalMethod","enumValidation","PATH_SIGN_UP_EMAIL","authApi","useNotify","PageSignUpOTP","history","error","success","dispatch","otp","setOtp","timeResend","setTimeResend","merchant","externalLogin","phoneNumber","window","sessionStorage","getItem","TEL","push","handleChangeOtp","handleVerifyOtp","length","LENTH_OTP","res","verifyPhone","code","data","errors","message","response","handleResend","id","setInterval","time","clearInterval","themeColor","StyledContainer","div"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { ComponentHeaderAuth, ComponentSignUpOTP } from \"@components\";\nimport { selectAuth, selectMerchant, setAuth, setLoading } from \"@redux\";\nimport { enumExternalMethod, enumValidation, PATH_SIGN_UP_EMAIL } from \"@configs\";\nimport { authApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { IAuth } from \"@interfaces\";\n\nexport const PageSignUpOTP = () => {\n    //page hook\n    const history = useHistory();\n    const { error, success } = useNotify();\n    const dispatch = useDispatch();\n    //page state\n    const [otp, setOtp] = useState<string>(\"\");\n    const [timeResend, setTimeResend] = useState<number>(60);\n    //redux state\n    const merchant = useSelector(selectMerchant);\n    const { externalLogin } = useSelector(selectAuth);\n    //page variable\n    const phoneNumber = window.sessionStorage.getItem(\"phoneNumber\") || \"\";\n\n    useEffect(() => {\n        if (externalLogin !== enumExternalMethod.TEL) {\n            history.push(PATH_SIGN_UP_EMAIL);\n        }\n    }, []);\n\n    const handleChangeOtp = (otp: string) => {\n        setOtp(otp);\n    };\n\n    const handleVerifyOtp = async () => {\n        if (otp.length < enumValidation.LENTH_OTP) return;\n        try {\n            dispatch(setLoading(true));\n            const res = await authApi.verifyPhone({\n                phoneNumber,\n                code: otp,\n            });\n            const data = res.data as IAuth;\n            if (res.data) {\n                dispatch(setAuth(data));\n            }\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            error(message);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleResend = () => {\n        const id = setInterval(() => {\n            setTimeResend((timeResend) => timeResend - 1);\n            if (time === 0) {\n                clearInterval(id);\n            }\n        }, 1000);\n        // try {\n        //     dispatch(setLoading(true));\n        //     const res = await authApi.resendPhone({\n        //         phoneNumber,\n        //     });\n        //     if (res.data.message) {\n        //         success(res.data.message);\n        //     }\n        // } catch (errors: any) {\n        //     const { message } = errors.response.data;\n        //     error(message);\n        // } finally {\n        //     dispatch(setLoading(false));\n        // }\n    };\n\n    return (\n        <StyledContainer color={merchant.themeColor}>\n            <ComponentHeaderAuth />\n            <ComponentSignUpOTP\n                handleVerifyOtp={handleVerifyOtp}\n                handleChangeOtp={handleChangeOtp}\n                handleResend={handleResend}\n                otp={otp}\n                timeResend={timeResend}\n            />\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div<{ color: string }>``;\n"]},"metadata":{},"sourceType":"module"}