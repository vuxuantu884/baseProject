{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Utils/helpers.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherIcons = [{\n  key: \"01d\",\n  icon: \"/static/weather/day.svg\"\n}, {\n  key: \"02d\",\n  icon: \"/static/weather/cloudy-day-1.svg\"\n}, {\n  key: \"03d\",\n  icon: \"/static/weather/cloudy-day-2.svg\"\n}, {\n  key: \"04d\",\n  icon: \"/static/weather/cloudy-day-3.svg\"\n}, {\n  key: \"09d\",\n  icon: \"/static/weather/rainy-4.svg\"\n}, {\n  key: \"10d\",\n  icon: \"/static/weather/rainy-1.svg\"\n}, {\n  key: \"11d\",\n  icon: \"/static/weather/thunder.svg\"\n}, {\n  key: \"13d\",\n  icon: \"/static/weather/snowy-3.svg\"\n}, {\n  key: \"50d\",\n  icon: \"/static/weather/cloudy-day-3.svg\"\n}, {\n  key: \"01n\",\n  icon: \"/static/weather/night.svg\"\n}, {\n  key: \"02n\",\n  icon: \"/static/weather/cloudy-night-1.svg\"\n}, {\n  key: \"03n\",\n  icon: \"/static/weather/cloudy-night-2.svg\"\n}, {\n  key: \"04n\",\n  icon: \"/static/weather/cloudy-night-3.svg\"\n}, {\n  key: \"09n\",\n  icon: \"/static/weather/rainy-4.svg\"\n}, {\n  key: \"10n\",\n  icon: \"/static/weather/rainy-5.svg\"\n}, {\n  key: \"11n\",\n  icon: \"/static/weather/thunder.svg\"\n}, {\n  key: \"13n\",\n  icon: \"/static/weather/snowy-5.svg\"\n}, {\n  key: \"50n\",\n  icon: \"/static/weather/cloudy-day-3.svg\"\n}]; // Capitalize\n\nexport function capitalize(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\nexport function lowercase(word) {\n  return word.toLowerCase();\n} // Format price\n\nexport function formatPrice(price) {\n  const number = parseFloat(price);\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  }).format(number);\n} // Get wind direction\n\nexport function windDirection(degree) {\n  const sectors = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n  degree += 22.5;\n\n  if (degree < 0) {\n    degree = 360 - Math.abs(degree) % 360;\n  } else {\n    degree = degree % 360;\n  }\n\n  const which = parseInt((degree / 45).toString(), 10);\n  return sectors[which];\n} // Get weather icon class\n\nexport function getWeatherIcon(code, size) {\n  const icon = weatherIcons.find(weatherIcon => weatherIcon.key === code);\n  if (icon) return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      background: `none, url(${icon.icon}) no-repeat`,\n      backgroundSize: \"contain\",\n      width: `${size}px`,\n      height: ` ${size}px`,\n      display: `inline-block`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 13\n  }, this);\n} // Get weather data\n\nexport async function getWeather(city, country, days) {\n  let forecast = undefined;\n\n  try {\n    const forecast_call = await fetch(`//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${process.env.weatherApi}&cnt=${days}&units=metric`).then(res => {\n      if (res.ok) {\n        return res;\n      } else {\n        throw Error(`Request rejected with status ${res.status}`);\n      }\n    }) // eslint-disable-next-line\n    .catch(console.error);\n\n    if (forecast_call !== undefined) {\n      forecast = await forecast_call.json();\n    }\n\n    return forecast;\n  } catch (e) {\n    return \"\";\n  }\n}\n\nfunction toCamelCase(word) {\n  return word.toLowerCase().replace(/[-_]+/g, \" \").replace(/[^\\w\\s]/g, \"\").replace(/ (.)/g, function ($1) {\n    return $1.toUpperCase();\n  }).replace(/ /g, \"\");\n}\n\nexport function objectToCamelCase(origObj) {\n  //WHY: any object to Camel case\n  return Object.keys(origObj).reduce(function (newObj, key) {\n    const val = origObj[key];\n    const newVal = typeof val === \"object\" ? objectToCamelCase(val) : val;\n    newObj[toCamelCase(key)] = newVal;\n    return newObj;\n  }, {});\n}\nexport function getYear() {\n  const currentYear = new Date(Date.now()).getFullYear();\n  const years = [];\n\n  for (let i = 1900; i <= currentYear; i++) {\n    years.push(i);\n  }\n\n  return years;\n}","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Utils/helpers.tsx"],"names":["weatherIcons","key","icon","capitalize","word","charAt","toUpperCase","slice","lowercase","toLowerCase","formatPrice","price","number","parseFloat","Intl","NumberFormat","style","currency","format","windDirection","degree","sectors","Math","abs","which","parseInt","toString","getWeatherIcon","code","size","find","weatherIcon","background","backgroundSize","width","height","display","getWeather","city","country","days","forecast","undefined","forecast_call","fetch","process","env","weatherApi","then","res","ok","Error","status","catch","console","error","json","e","toCamelCase","replace","$1","objectToCamelCase","origObj","Object","keys","reduce","newObj","val","newVal","getYear","currentYear","Date","now","getFullYear","years","i","push"],"mappings":"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","sourcesContent":["const weatherIcons: { key: string; icon: string }[] = [\n    {\n        key: \"01d\",\n        icon: \"/static/weather/day.svg\",\n    },\n    {\n        key: \"02d\",\n        icon: \"/static/weather/cloudy-day-1.svg\",\n    },\n    {\n        key: \"03d\",\n        icon: \"/static/weather/cloudy-day-2.svg\",\n    },\n    {\n        key: \"04d\",\n        icon: \"/static/weather/cloudy-day-3.svg\",\n    },\n    {\n        key: \"09d\",\n        icon: \"/static/weather/rainy-4.svg\",\n    },\n    {\n        key: \"10d\",\n        icon: \"/static/weather/rainy-1.svg\",\n    },\n    {\n        key: \"11d\",\n        icon: \"/static/weather/thunder.svg\",\n    },\n    {\n        key: \"13d\",\n        icon: \"/static/weather/snowy-3.svg\",\n    },\n    {\n        key: \"50d\",\n        icon: \"/static/weather/cloudy-day-3.svg\",\n    },\n    {\n        key: \"01n\",\n        icon: \"/static/weather/night.svg\",\n    },\n    {\n        key: \"02n\",\n        icon: \"/static/weather/cloudy-night-1.svg\",\n    },\n    {\n        key: \"03n\",\n        icon: \"/static/weather/cloudy-night-2.svg\",\n    },\n    {\n        key: \"04n\",\n        icon: \"/static/weather/cloudy-night-3.svg\",\n    },\n    {\n        key: \"09n\",\n        icon: \"/static/weather/rainy-4.svg\",\n    },\n    {\n        key: \"10n\",\n        icon: \"/static/weather/rainy-5.svg\",\n    },\n    {\n        key: \"11n\",\n        icon: \"/static/weather/thunder.svg\",\n    },\n    {\n        key: \"13n\",\n        icon: \"/static/weather/snowy-5.svg\",\n    },\n    {\n        key: \"50n\",\n        icon: \"/static/weather/cloudy-day-3.svg\",\n    },\n];\n\n// Capitalize\nexport function capitalize(word: string) {\n    return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nexport function lowercase(word: string) {\n    return word.toLowerCase();\n}\n\n// Format price\nexport function formatPrice(price: string) {\n    const number = parseFloat(price);\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n    }).format(number);\n}\n\n// Get wind direction\nexport function windDirection(degree: number) {\n    const sectors = [\"n\", \"ne\", \"e\", \"se\", \"s\", \"sw\", \"w\", \"nw\"];\n\n    degree += 22.5;\n\n    if (degree < 0) {\n        degree = 360 - (Math.abs(degree) % 360);\n    } else {\n        degree = degree % 360;\n    }\n\n    const which = parseInt((degree / 45).toString(), 10);\n    return sectors[which];\n}\n\n// Get weather icon class\nexport function getWeatherIcon(code: string, size: number) {\n    const icon = weatherIcons.find((weatherIcon) => weatherIcon.key === code);\n    if (icon)\n        return (\n            <span\n                style={{\n                    background: `none, url(${icon.icon}) no-repeat`,\n                    backgroundSize: \"contain\",\n                    width: `${size}px`,\n                    height: ` ${size}px`,\n                    display: `inline-block`,\n                }}\n            />\n        );\n}\n\n// Get weather data\nexport async function getWeather(city: string, country: string, days: number) {\n    let forecast = undefined;\n    try {\n        const forecast_call = await fetch(\n            `//api.openweathermap.org/data/2.5/forecast?q=${city},${country}&appid=${process.env.weatherApi}&cnt=${days}&units=metric`\n        )\n            .then((res) => {\n                if (res.ok) {\n                    return res;\n                } else {\n                    throw Error(`Request rejected with status ${res.status}`);\n                }\n            })\n            // eslint-disable-next-line\n            .catch(console.error);\n\n        if (forecast_call !== undefined) {\n            forecast = await forecast_call.json();\n        }\n\n        return forecast;\n    } catch (e) {\n        return \"\";\n    }\n}\n\nfunction toCamelCase(word: string) {\n    return word\n        .toLowerCase()\n        .replace(/[-_]+/g, \" \")\n        .replace(/[^\\w\\s]/g, \"\")\n        .replace(/ (.)/g, function ($1) {\n            return $1.toUpperCase();\n        })\n        .replace(/ /g, \"\");\n}\n\nexport function objectToCamelCase(origObj: any) {\n    //WHY: any object to Camel case\n    return Object.keys(origObj).reduce(function (newObj: any, key) {\n        const val = origObj[key];\n        const newVal = typeof val === \"object\" ? objectToCamelCase(val) : val;\n        newObj[toCamelCase(key)] = newVal;\n        return newObj;\n    }, {});\n}\n\nexport function getYear() {\n    const currentYear = new Date(Date.now()).getFullYear();\n    const years = [];\n    for (let i = 1900; i <= currentYear; i++) {\n        years.push(i);\n    }\n    return years;\n}\n"]},"metadata":{},"sourceType":"module"}