{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting, ComponentUserSettingSave } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { useYup } from \"@validations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageUserSetting = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify();\n  const {\n    YubSUserSetting\n  } = useYup(); //redux state\n\n  const {\n    userInfo\n  } = useSelector(selectAuth); //page state\n\n  const [title, setTitle] = useState(\"\");\n  const [errorPhone, setError] = useState(); //page variable\n\n  const initialValue = {\n    avatar: userInfo === null || userInfo === void 0 ? void 0 : userInfo.avatar,\n    fullName: (userInfo === null || userInfo === void 0 ? void 0 : userInfo.fullName) || \"\",\n    dateOfBirth: \"11/11/2021\",\n    phoneNumber: \"0934270080\",\n    email: \"tuvu884884@gmail.com\"\n  };\n  const registerSchema = Yup.object().shape(YubSUserSetting);\n\n  const handleUploadImage = async e => {\n    dispatch(setLoading(true)); //@ts-ignore\n\n    const values = e.file;\n    const formData = new FormData();\n    formData.append(\"file\", values);\n\n    try {\n      const res = await merchantApi.uploadImage(formData);\n      setFieldValue(\"avatar\", res.data);\n    } catch (err) {\n      const data = err.response.data;\n      const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n      error(mess);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleSaveSetting = () => {\n    //\n    setTitle(\"\");\n  };\n\n  const handleChangeTitle = title => {\n    setTitle(title);\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched,\n    setFieldValue,\n    setFieldTouched\n  } = useFormik({\n    initialValues: initialValue,\n    validationSchema: registerSchema,\n    onSubmit: handleSaveSetting\n  });\n\n  const handleChangePhoneNumber = (isValid, value, selectedCountryData, fullNumber) => {\n    if (!isValid) setError(t(\"validation.isNumber\"));else {\n      setError(\"\");\n    }\n    setFieldValue(\"phoneNumber\", fullNumber.replace(/(\\s|-)/g, \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: title ? /*#__PURE__*/_jsxDEV(ComponentUserSettingSave, {\n      values: values,\n      handleChange: handleChange,\n      handleBlur: handleBlur,\n      handleSubmit: handleSubmit,\n      isSubmitting: isSubmitting,\n      errors: errors,\n      touched: touched,\n      title: title,\n      setFieldTouched: setFieldTouched,\n      handleChangePhoneNumber: handleChangePhoneNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ComponentUserSetting, {\n      handleUploadImage: handleUploadImage,\n      values: values,\n      handleChangeTitle: handleChangeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageUserSetting, \"hk9WsA6+YDyAdSls85SXKMqyJaM=\", false, function () {\n  return [useDispatch, useNotify, useYup, useSelector, useFormik];\n});\n\n_c = PageUserSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageUserSetting\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx"],"names":["useDispatch","useSelector","useState","useFormik","Yup","merchantApi","ComponentUserSetting","ComponentUserSettingSave","selectAuth","setLoading","useNotify","useYup","PageUserSetting","dispatch","error","YubSUserSetting","userInfo","title","setTitle","errorPhone","setError","initialValue","avatar","fullName","dateOfBirth","phoneNumber","email","registerSchema","object","shape","handleUploadImage","e","values","file","formData","FormData","append","res","uploadImage","setFieldValue","data","err","response","mess","Array","isArray","errors","message","handleSaveSetting","handleChangeTitle","handleChange","handleBlur","handleSubmit","isSubmitting","touched","setFieldTouched","initialValues","validationSchema","onSubmit","handleChangePhoneNumber","isValid","value","selectedCountryData","fullNumber","t","replace"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { CountryData } from \"react-intl-tel-input\";\n\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting, ComponentUserSettingSave } from \"@components\";\nimport { selectAuth, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { IUserSetting } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { useSetting } from \"@configs\";\n\nexport const PageUserSetting = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    const { YubSUserSetting } = useYup();\n    //redux state\n    const { userInfo } = useSelector(selectAuth);\n    //page state\n    const [title, setTitle] = useState<useSetting | \"\">(\"\");\n    const [errorPhone, setError] = useState<string>();\n\n    //page variable\n    const initialValue: IUserSetting = {\n        avatar: userInfo?.avatar,\n        fullName: userInfo?.fullName || \"\",\n        dateOfBirth: \"11/11/2021\",\n        phoneNumber: \"0934270080\",\n        email: \"tuvu884884@gmail.com\",\n    };\n    const registerSchema = Yup.object().shape(YubSUserSetting);\n\n    const handleUploadImage = async (e: React.ChangeEventHandler<HTMLInputElement> | undefined) => {\n        dispatch(setLoading(true));\n        //@ts-ignore\n        const values = e.file;\n        const formData = new FormData();\n        formData.append(\"file\", values);\n        try {\n            const res = await merchantApi.uploadImage(formData);\n            setFieldValue(\"avatar\", res.data);\n        } catch (err: any) {\n            const data = err.response.data;\n            const mess = Array.isArray(data.errors) ? data.errors[0] : data.message;\n            error(mess);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleSaveSetting = () => {\n        //\n        setTitle(\"\");\n    };\n\n    const handleChangeTitle = (title: useSetting) => {\n        setTitle(title);\n    };\n\n    const {\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        errors,\n        touched,\n        setFieldValue,\n        setFieldTouched,\n    } = useFormik({\n        initialValues: initialValue,\n        validationSchema: registerSchema,\n        onSubmit: handleSaveSetting,\n    });\n\n    const handleChangePhoneNumber = (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        if (!isValid) setError(t(\"validation.isNumber\"));\n        else {\n            setError(\"\");\n        }\n        setFieldValue(\"phoneNumber\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    return (\n        <>\n            {title ? (\n                <ComponentUserSettingSave\n                    values={values}\n                    handleChange={handleChange}\n                    handleBlur={handleBlur}\n                    handleSubmit={handleSubmit}\n                    isSubmitting={isSubmitting}\n                    errors={errors}\n                    touched={touched}\n                    title={title}\n                    setFieldTouched={setFieldTouched}\n                    handleChangePhoneNumber={handleChangePhoneNumber}\n                />\n            ) : (\n                <ComponentUserSetting\n                    handleUploadImage={handleUploadImage}\n                    values={values}\n                    handleChangeTitle={handleChangeTitle}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}