{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/freePoint/Detail.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport styled from \"styled-components\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport { SharedButton, StyledPreview } from \"@components\";\nimport { selectAuth, selectMerchant } from \"@redux\";\nimport { BLANK_IMAGE_URL } from \"@configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSwiperCore.use([Navigation]);\nexport const ComponentFreePointDetail = props => {\n  _s();\n\n  var _freePoint$imageUrl;\n\n  //page props\n  const {\n    freePoint,\n    style,\n    handleToggleConfirm\n  } = props; //page Hooks\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    themeColor,\n    subColor\n  } = useSelector(selectMerchant);\n  const {\n    showConfirm\n  } = useSelector(selectAuth); //page variable\n\n  const dateFormFormat = moment(freePoint === null || freePoint === void 0 ? void 0 : freePoint.startDate).format(\"yyyy/MM/DD HH:mm\");\n  const dateToFormat = moment(freePoint === null || freePoint === void 0 ? void 0 : freePoint.endDate).format(\"yyyy/MM/DD HH:mm\");\n  return /*#__PURE__*/_jsxDEV(StyledPreview, {\n    mainColor: themeColor,\n    subColor: subColor,\n    style: style,\n    showConfirm: showConfirm,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body_freePoint\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text_name\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: (freePoint === null || freePoint === void 0 ? void 0 : freePoint.name) || t(\"page.auth.name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date_text\",\n            children: [dateFormFormat, \" - \", dateToFormat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coupon_code\",\n          children: [t(\"page.free_point.point_given\"), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number\",\n          children: (freePoint === null || freePoint === void 0 ? void 0 : freePoint.point) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Swiper, {\n          slidesPerView: 1,\n          children: (freePoint === null || freePoint === void 0 ? void 0 : (_freePoint$imageUrl = freePoint.imageUrl) === null || _freePoint$imageUrl === void 0 ? void 0 : _freePoint$imageUrl.length) ? freePoint === null || freePoint === void 0 ? void 0 : freePoint.imageUrl.map((item, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image\",\n              src: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"image\",\n              src: BLANK_IMAGE_URL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-main\",\n        children: /*#__PURE__*/_jsxDEV(StyledButton, {\n          size: \"large\",\n          bg_color: themeColor,\n          type: \"submit\",\n          onClick: handleToggleConfirm,\n          children: t(\"page.free_point.use_point\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComponentFreePointDetail, \"V+7O0Fekm3HNcgyOsKUj+QY9Azw=\", false, function () {\n  return [useTranslation, useSelector, useSelector];\n});\n\n_c = ComponentFreePointDetail;\nconst StyledButton = styled(SharedButton)`\n    margin-top: 16px;\n`;\n_c2 = StyledButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentFreePointDetail\");\n$RefreshReg$(_c2, \"StyledButton\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/freePoint/Detail.tsx"],"names":["useTranslation","useSelector","moment","Swiper","SwiperSlide","SwiperCore","Navigation","styled","SharedButton","StyledPreview","selectAuth","selectMerchant","BLANK_IMAGE_URL","use","ComponentFreePointDetail","props","freePoint","style","handleToggleConfirm","t","themeColor","subColor","showConfirm","dateFormFormat","startDate","format","dateToFormat","endDate","name","point","imageUrl","length","map","item","index","StyledButton"],"mappings":"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","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport styled, { CSSProperties } from \"styled-components\";\nimport \"swiper/swiper-bundle.min.css\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport { useEffect } from \"react\";\n\nimport { SharedButton, StyledPreview } from \"@components\";\nimport { resetConfirm, selectAuth, selectMerchant } from \"@redux\";\nimport { IFreePoint } from \"@interfaces\";\nimport { BLANK_IMAGE_URL } from \"@configs\";\n\ninterface IProps {\n    freePoint: IFreePoint;\n    style?: CSSProperties;\n    handleToggleConfirm: () => void;\n}\n\nSwiperCore.use([Navigation]);\n\nexport const ComponentFreePointDetail = (props: IProps) => {\n    //page props\n    const { freePoint, style, handleToggleConfirm } = props;\n    //page Hooks\n    const { t } = useTranslation();\n    const { themeColor, subColor } = useSelector(selectMerchant);\n    const { showConfirm } = useSelector(selectAuth);\n\n    //page variable\n    const dateFormFormat = moment(freePoint?.startDate).format(\"yyyy/MM/DD HH:mm\");\n    const dateToFormat = moment(freePoint?.endDate).format(\"yyyy/MM/DD HH:mm\");\n\n    return (\n        <StyledPreview\n            mainColor={themeColor}\n            subColor={subColor}\n            style={style}\n            showConfirm={showConfirm}\n        >\n            <div className=\"page_body\">\n                <div className=\"body_freePoint\">\n                    <div className=\"text_name\">\n                        <div className=\"name\">{freePoint?.name || t(\"page.auth.name\")}</div>\n                        <div className=\"date_text\">\n                            {dateFormFormat} - {dateToFormat}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"code\">\n                    <div className=\"coupon_code\">{t(\"page.free_point.point_given\")}:</div>\n                    <div className=\"number\">{freePoint?.point || 0}</div>\n                </div>\n                <div className=\"content\">\n                    <Swiper slidesPerView={1}>\n                        {freePoint?.imageUrl?.length ? (\n                            freePoint?.imageUrl.map((item, index) => (\n                                <SwiperSlide key={index}>\n                                    <img className=\"image\" src={item} />\n                                </SwiperSlide>\n                            ))\n                        ) : (\n                            <SwiperSlide>\n                                <img className=\"image\" src={BLANK_IMAGE_URL} />\n                            </SwiperSlide>\n                        )}\n                    </Swiper>\n                </div>\n                <div className=\"btn-main\">\n                    <StyledButton\n                        size=\"large\"\n                        bg_color={themeColor}\n                        type=\"submit\"\n                        onClick={handleToggleConfirm}\n                    >\n                        {t(\"page.free_point.use_point\")}\n                    </StyledButton>\n                </div>\n            </div>\n        </StyledPreview>\n    );\n};\n\nconst StyledButton = styled(SharedButton)`\n    margin-top: 16px;\n`;\n"]},"metadata":{},"sourceType":"module"}