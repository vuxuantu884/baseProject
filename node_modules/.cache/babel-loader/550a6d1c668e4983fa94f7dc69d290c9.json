{"ast":null,"code":"import { createSlice } from \"@Reduxjs/toolkit\";\nconst initialState = {\n  toast: {\n    autoHideDuration: 5000,\n    vertical: \"top\",\n    horizontal: \"right\",\n    open: false,\n    type: \"success\",\n    message: \"\"\n  }\n};\nconst toast = createSlice({\n  name: \"toast\",\n  initialState,\n  reducers: {\n    openToast: (state, action) => {\n      const {\n        vertical,\n        horizontal,\n        open,\n        autoHideDuration,\n        type,\n        message\n      } = action.payload;\n      const newState = {\n        vertical: vertical ? vertical : \"top\",\n        horizontal: horizontal ? horizontal : \"right\",\n        open: open ? open : true,\n        autoHideDuration,\n        type: type ? type : \"success\",\n        message\n      };\n      state.toast = newState;\n    },\n    closeToast: state => {\n      state.toast.open = false;\n    }\n  }\n});\nexport const selectToast = state => state.toast;\nexport const {\n  openToast,\n  closeToast\n} = toast.actions;\nexport default toast.reducer;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Redux/Slices/toast.ts"],"names":["createSlice","initialState","toast","autoHideDuration","vertical","horizontal","open","type","message","name","reducers","openToast","state","action","payload","newState","closeToast","selectToast","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,MAAMC,YAA2B,GAAG;AAChCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,gBAAgB,EAAE,IADf;AAEHC,IAAAA,QAAQ,EAAE,KAFP;AAGHC,IAAAA,UAAU,EAAE,OAHT;AAIHC,IAAAA,IAAI,EAAE,KAJH;AAKHC,IAAAA,IAAI,EAAE,SALH;AAMHC,IAAAA,OAAO,EAAE;AANN;AADyB,CAApC;AAWA,MAAMN,KAAK,GAAGF,WAAW,CAAC;AACtBS,EAAAA,IAAI,EAAE,OADgB;AAEtBR,EAAAA,YAFsB;AAGtBS,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AACjD,YAAM;AAAET,QAAAA,QAAF;AAAYC,QAAAA,UAAZ;AAAwBC,QAAAA,IAAxB;AAA8BH,QAAAA,gBAA9B;AAAgDI,QAAAA,IAAhD;AAAsDC,QAAAA;AAAtD,UAAkEK,MAAM,CAACC,OAA/E;AACA,YAAMC,QAAgB,GAAG;AACrBX,QAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAc,KADX;AAErBC,QAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAH,GAAgB,OAFjB;AAGrBC,QAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IAHC;AAIrBH,QAAAA,gBAJqB;AAKrBI,QAAAA,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,SALC;AAMrBC,QAAAA;AANqB,OAAzB;AAQAI,MAAAA,KAAK,CAACV,KAAN,GAAca,QAAd;AACH,KAZK;AAaNC,IAAAA,UAAU,EAAGJ,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACV,KAAN,CAAYI,IAAZ,GAAmB,KAAnB;AACH;AAfK;AAHY,CAAD,CAAzB;AAsBA,OAAO,MAAMW,WAAW,GAAIL,KAAD,IAAsBA,KAAK,CAACV,KAAhD;AAEP,OAAO,MAAM;AAAES,EAAAA,SAAF;AAAaK,EAAAA;AAAb,IAA4Bd,KAAK,CAACgB,OAAxC;AAEP,eAAehB,KAAK,CAACiB,OAArB","sourcesContent":["import { createSlice, PayloadAction } from \"@Reduxjs/toolkit\";\n\nimport { IToast } from \"@interfaces\";\nimport { RootState } from \".\";\n\ninterface IInitialState {\n    toast: IToast;\n}\n\nconst initialState: IInitialState = {\n    toast: {\n        autoHideDuration: 5000,\n        vertical: \"top\",\n        horizontal: \"right\",\n        open: false,\n        type: \"success\",\n        message: \"\",\n    },\n};\n\nconst toast = createSlice({\n    name: \"toast\",\n    initialState,\n    reducers: {\n        openToast: (state, action: PayloadAction<IToast>) => {\n            const { vertical, horizontal, open, autoHideDuration, type, message } = action.payload;\n            const newState: IToast = {\n                vertical: vertical ? vertical : \"top\",\n                horizontal: horizontal ? horizontal : \"right\",\n                open: open ? open : true,\n                autoHideDuration,\n                type: type ? type : \"success\",\n                message,\n            };\n            state.toast = newState;\n        },\n        closeToast: (state) => {\n            state.toast.open = false;\n        },\n    },\n});\n\nexport const selectToast = (state: RootState) => state.toast;\n\nexport const { openToast, closeToast } = toast.actions;\n\nexport default toast.reducer;\n"]},"metadata":{},"sourceType":"module"}