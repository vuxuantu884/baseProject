{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { openToast } from \"@Redux\";\nexport const useNotify = () => {\n  _s();\n\n  //hook\n  const dispatch = useDispatch();\n  const errorMessage = useCallback((message, duration) => {\n    dispatch(openToast({\n      message: message,\n      type: \"error\",\n      autoHideDuration: duration || 2000\n    }));\n  }, []);\n  const successMessage = useCallback((message, duration) => {\n    dispatch(openToast({\n      message: message,\n      type: \"success\",\n      autoHideDuration: duration || 2000\n    }));\n  }, []);\n  const warningMessage = useCallback((message, duration) => {\n    dispatch(openToast({\n      message: message,\n      type: \"warning\",\n      autoHideDuration: duration || 2000\n    }));\n  }, []);\n  return {\n    error: errorMessage,\n    success: successMessage,\n    warning: warningMessage\n  };\n};\n\n_s(useNotify, \"jCmH2SGfTQedklLI6aQa+cY0bcY=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Utils/notifyHook.ts"],"names":["useCallback","useDispatch","openToast","useNotify","dispatch","errorMessage","message","duration","type","autoHideDuration","successMessage","warningMessage","error","success","warning"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B;AACA,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAMI,YAAY,GAAGL,WAAW,CAAC,CAACM,OAAD,EAAkBC,QAAlB,KAAwC;AACrEH,IAAAA,QAAQ,CACJF,SAAS,CAAC;AACNI,MAAAA,OAAO,EAAEA,OADH;AAENE,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,gBAAgB,EAAEF,QAAQ,IAAI;AAHxB,KAAD,CADL,CAAR;AAOH,GAR+B,EAQ7B,EAR6B,CAAhC;AAUA,QAAMG,cAAc,GAAGV,WAAW,CAAC,CAACM,OAAD,EAAkBC,QAAlB,KAAwC;AACvEH,IAAAA,QAAQ,CACJF,SAAS,CAAC;AACNI,MAAAA,OAAO,EAAEA,OADH;AAENE,MAAAA,IAAI,EAAE,SAFA;AAGNC,MAAAA,gBAAgB,EAAEF,QAAQ,IAAI;AAHxB,KAAD,CADL,CAAR;AAOH,GARiC,EAQ/B,EAR+B,CAAlC;AASA,QAAMI,cAAc,GAAGX,WAAW,CAAC,CAACM,OAAD,EAAkBC,QAAlB,KAAwC;AACvEH,IAAAA,QAAQ,CACJF,SAAS,CAAC;AACNI,MAAAA,OAAO,EAAEA,OADH;AAENE,MAAAA,IAAI,EAAE,SAFA;AAGNC,MAAAA,gBAAgB,EAAEF,QAAQ,IAAI;AAHxB,KAAD,CADL,CAAR;AAOH,GARiC,EAQ/B,EAR+B,CAAlC;AASA,SAAO;AACHK,IAAAA,KAAK,EAAEP,YADJ;AAEHQ,IAAAA,OAAO,EAAEH,cAFN;AAGHI,IAAAA,OAAO,EAAEH;AAHN,GAAP;AAKH,CArCM;;GAAMR,S;UAEQF,W","sourcesContent":["import { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { openToast } from \"@Redux\";\n\nexport const useNotify = () => {\n    //hook\n    const dispatch = useDispatch();\n\n    const errorMessage = useCallback((message: string, duration?: number) => {\n        dispatch(\n            openToast({\n                message: message,\n                type: \"error\",\n                autoHideDuration: duration || 2000,\n            })\n        );\n    }, []);\n\n    const successMessage = useCallback((message: string, duration?: number) => {\n        dispatch(\n            openToast({\n                message: message,\n                type: \"success\",\n                autoHideDuration: duration || 2000,\n            })\n        );\n    }, []);\n    const warningMessage = useCallback((message: string, duration?: number) => {\n        dispatch(\n            openToast({\n                message: message,\n                type: \"warning\",\n                autoHideDuration: duration || 2000,\n            })\n        );\n    }, []);\n    return {\n        error: errorMessage,\n        success: successMessage,\n        warning: warningMessage,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}