{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ComponentAppRoute } from \"@components\";\nimport { routes } from \"@configs\";\nimport { ComponentToast } from \"src/Components/Toast\";\nimport { merchantApi } from \"@api\";\nimport { selectMerchant, setMainColor, setMerchant } from \"@redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleMain = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch(); //redux state\n\n  const {} = useSelector(selectMerchant);\n  useEffect(() => {\n    (async () => {\n      const merchantConfig = await merchantApi.getMerchantConfig();\n      const merchant = merchantConfig.data.merchant;\n\n      if (merchant) {\n        dispatch(setMerchant(merchant));\n        dispatch(setMainColor(merchant.themeColor));\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map((e, key) => /*#__PURE__*/_jsxDEV(ComponentAppRoute, { ...e\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ComponentToast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModuleMain, \"fIZ1+vRBg1ZLqbwSNBHHppFqV6Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ModuleMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleMain\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Main.tsx"],"names":["Switch","BrowserRouter","useEffect","useDispatch","useSelector","ComponentAppRoute","routes","ComponentToast","merchantApi","selectMerchant","setMainColor","setMerchant","ModuleMain","dispatch","merchantConfig","getMerchantConfig","merchant","data","themeColor","map","e","key"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,WAAT,QAA4B,MAA5B;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,WAAvC,QAA0D,QAA1D;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B,CAF4B,CAG5B;;AACA,QAAM,KAAKC,WAAW,CAACK,cAAD,CAAtB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMY,cAAc,GAAG,MAAMN,WAAW,CAACO,iBAAZ,EAA7B;AACA,YAAMC,QAAQ,GAAGF,cAAc,CAACG,IAAf,CAAoBD,QAArC;;AACA,UAAIA,QAAJ,EAAc;AACVH,QAAAA,QAAQ,CAACF,WAAW,CAACK,QAAD,CAAZ,CAAR;AACAH,QAAAA,QAAQ,CAACH,YAAY,CAACM,QAAQ,CAACE,UAAV,CAAb,CAAR;AACH;AACJ,KAPD;AAQH,GATQ,EASN,EATM,CAAT;AAWA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,MAAD;AAAA,gBACKZ,MAAM,CAACa,GAAP,CAAW,CAACC,CAAD,EAAYC,GAAZ,kBACR,QAAC,iBAAD,OAAiCD;AAAjC,SAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3BM;;GAAMT,U;UAEQT,W,EAENC,W;;;KAJFQ,U","sourcesContent":["import { Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ComponentAppRoute } from \"@components\";\nimport { routes } from \"@configs\";\nimport { IMerchant, IRoute } from \"@interfaces\";\nimport { ComponentToast } from \"src/Components/Toast\";\nimport { merchantApi } from \"@api\";\nimport { selectMerchant, setMainColor, setMerchant } from \"@redux\";\n\nexport const ModuleMain = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    //redux state\n    const {} = useSelector(selectMerchant);\n\n    useEffect(() => {\n        (async () => {\n            const merchantConfig = await merchantApi.getMerchantConfig();\n            const merchant = merchantConfig.data.merchant as IMerchant;\n            if (merchant) {\n                dispatch(setMerchant(merchant));\n                dispatch(setMainColor(merchant.themeColor));\n            }\n        })();\n    }, []);\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                {routes.map((e: IRoute, key) => (\n                    <ComponentAppRoute key={key} {...e} />\n                ))}\n            </Switch>\n            <ComponentToast />\n        </BrowserRouter>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}