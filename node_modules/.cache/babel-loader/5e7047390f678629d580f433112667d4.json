{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport * as Yup from \"yup\";\nimport { enumValidation } from \"@configs\";\nexport const YubResetPassword = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  return {\n    password: Yup.string().required(t(\"validation.required\", {\n      returnObjects: true,\n      name: t(\"page.auth._password\")\n    })).min(enumValidation.MIN_PASSWORD, t(\"validation.min\", {\n      returnObjects: true,\n      name: t(\"page.auth._password\"),\n      number: enumValidation.MIN_PASSWORD\n    })).max(enumValidation.MAX_PASSWORD, t(\"validation.max_length_number\", {\n      returnObjects: true,\n      name: t(\"page.auth._password\"),\n      number: enumValidation.MAX_PASSWORD\n    })),\n    conformPassword: Yup.string().required(t(\"validation.required\", {\n      returnObjects: true,\n      name: t(\"page.auth.confirm_password\")\n    })).oneOf([Yup.ref(\"password\"), null], t(\"validation.password_must_match\"))\n  };\n};\n\n_s(YubResetPassword, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = YubResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"YubResetPassword\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Validations/Yup/ResetPassword.tsx"],"names":["useTranslation","Yup","enumValidation","YubResetPassword","t","password","string","required","returnObjects","name","min","MIN_PASSWORD","number","max","MAX_PASSWORD","conformPassword","oneOf","ref"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAClC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQJ,cAAc,EAA5B;AACA,SAAO;AACHK,IAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GACLC,QADK,CAEFH,CAAC,CAAC,qBAAD,EAAwB;AACrBI,MAAAA,aAAa,EAAE,IADM;AAErBC,MAAAA,IAAI,EAAEL,CAAC,CAAC,qBAAD;AAFc,KAAxB,CAFC,EAOLM,GAPK,CAQFR,cAAc,CAACS,YARb,EASFP,CAAC,CAAC,gBAAD,EAAmB;AAChBI,MAAAA,aAAa,EAAE,IADC;AAEhBC,MAAAA,IAAI,EAAEL,CAAC,CAAC,qBAAD,CAFS;AAGhBQ,MAAAA,MAAM,EAAEV,cAAc,CAACS;AAHP,KAAnB,CATC,EAeLE,GAfK,CAgBFX,cAAc,CAACY,YAhBb,EAiBFV,CAAC,CAAC,8BAAD,EAAiC;AAC9BI,MAAAA,aAAa,EAAE,IADe;AAE9BC,MAAAA,IAAI,EAAEL,CAAC,CAAC,qBAAD,CAFuB;AAG9BQ,MAAAA,MAAM,EAAEV,cAAc,CAACY;AAHO,KAAjC,CAjBC,CADP;AAwBHC,IAAAA,eAAe,EAAEd,GAAG,CAACK,MAAJ,GACZC,QADY,CAETH,CAAC,CAAC,qBAAD,EAAwB;AACrBI,MAAAA,aAAa,EAAE,IADM;AAErBC,MAAAA,IAAI,EAAEL,CAAC,CAAC,4BAAD;AAFc,KAAxB,CAFQ,EAOZY,KAPY,CAON,CAACf,GAAG,CAACgB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAPM,EAOuBb,CAAC,CAAC,gCAAD,CAPxB;AAxBd,GAAP;AAiCH,CApCM;;GAAMD,gB;UAEKH,c;;;KAFLG,gB","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport * as Yup from \"yup\";\n\nimport { enumValidation } from \"@configs\";\n\nexport const YubResetPassword = () => {\n    //page hook\n    const { t } = useTranslation();\n    return {\n        password: Yup.string()\n            .required(\n                t(\"validation.required\", {\n                    returnObjects: true,\n                    name: t(\"page.auth._password\"),\n                })\n            )\n            .min(\n                enumValidation.MIN_PASSWORD,\n                t(\"validation.min\", {\n                    returnObjects: true,\n                    name: t(\"page.auth._password\"),\n                    number: enumValidation.MIN_PASSWORD,\n                })\n            )\n            .max(\n                enumValidation.MAX_PASSWORD,\n                t(\"validation.max_length_number\", {\n                    returnObjects: true,\n                    name: t(\"page.auth._password\"),\n                    number: enumValidation.MAX_PASSWORD,\n                })\n            ),\n        conformPassword: Yup.string()\n            .required(\n                t(\"validation.required\", {\n                    returnObjects: true,\n                    name: t(\"page.auth.confirm_password\"),\n                })\n            )\n            .oneOf([Yup.ref(\"password\"), null], t(\"validation.password_must_match\")),\n    };\n};\n"]},"metadata":{},"sourceType":"module"}