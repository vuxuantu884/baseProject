{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Verify.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ComponentUserVerify } from \"@components\";\nimport { enumUseSetting, enumValidation, PATH_HOME, PATH_USER_SETTING, TIME_RESEND } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { verifyApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageVerify = () => {\n  _s();\n\n  //page hooks\n  const {\n    type\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useNotify();\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //page props\n\n  const [otp, setOtp] = useState(\"\");\n  const [timeResend, setTimeResend] = useState(TIME_RESEND); //page variable\n\n  const email = window.sessionStorage.getItem(\"email\") || \"\";\n  const phoneNumber = window.sessionStorage.getItem(\"phoneNumber\") || \"\";\n  useEffect(() => {\n    //WHAT: CHECK EMAIL OR PHONE\n    console.log(!email && !phoneNumber);\n\n    if (!email && !phoneNumber) {\n      history.push(PATH_HOME);\n    }\n  }, []);\n\n  const handleChangeOtp = otp => {\n    setOtp(otp);\n  };\n\n  const handleVerifyEmail = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await verifyApi.verifyEmailCode({\n        code: otp,\n        email\n      });\n      const message = res.data.message;\n\n      if (message) {\n        success(t(\"message.verify_email.success\"));\n      }\n\n      window.sessionStorage.removeItem(\"email\");\n      window.sessionStorage.removeItem(\"phoneNumber\");\n      history.push(PATH_USER_SETTING);\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.verify_email.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleVerifyPhone = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await verifyApi.verifyPhoneCode({\n        code: otp,\n        phoneNumber\n      });\n      const message = res.data.message;\n\n      if (message) {\n        success(t(\"message.verify_phone.success\"));\n      }\n\n      history.push(PATH_USER_SETTING);\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.verify_phone.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleSave = () => {\n    if (otp.length < enumValidation.LENTH_OTP) return;\n\n    if (type === enumUseSetting.EMAIL) {\n      handleVerifyEmail();\n    } else {\n      handleVerifyPhone();\n    }\n  };\n\n  const handleResend = async () => {\n    if (timeResend !== TIME_RESEND) return;\n\n    try {\n      dispatch(setLoading(true));\n      let res;\n\n      if (type === enumUseSetting.EMAIL) {\n        res = await verifyApi.resendEmailCode({\n          email\n        });\n      } else {\n        res = await verifyApi.resendPhoneCode({\n          phoneNumber\n        });\n      }\n\n      if (res.data.message) {\n        success(type === enumUseSetting.EMAIL ? t(\"message.email_send\") : t(\"message.phone_send\"));\n        let currentTime = timeResend;\n        const id = setInterval(() => {\n          currentTime = currentTime - 1;\n          setTimeResend(() => currentTime);\n\n          if (currentTime === 0) {\n            setTimeResend(TIME_RESEND);\n            clearInterval(id);\n          }\n        }, 1000);\n      }\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n      error(message);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComponentUserVerify, {\n    otp: otp,\n    handleChangeOtp: handleChangeOtp,\n    type: type,\n    handleSave: handleSave,\n    timeResend: timeResend,\n    handleResend: handleResend\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageVerify, \"KdFx2kL3ulv+rITe+Z4zFHfL27o=\", false, function () {\n  return [useParams, useDispatch, useNotify, useTranslation, useHistory];\n});\n\n_c = PageVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageVerify\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Verify.tsx"],"names":["useHistory","useParams","useEffect","useState","useDispatch","ComponentUserVerify","enumUseSetting","enumValidation","PATH_HOME","PATH_USER_SETTING","TIME_RESEND","setLoading","verifyApi","useNotify","useTranslation","PageVerify","type","dispatch","error","success","t","history","otp","setOtp","timeResend","setTimeResend","email","window","sessionStorage","getItem","phoneNumber","console","log","push","handleChangeOtp","handleVerifyEmail","res","verifyEmailCode","code","message","data","removeItem","errors","response","handleVerifyPhone","verifyPhoneCode","handleSave","length","LENTH_OTP","EMAIL","handleResend","resendEmailCode","resendPhoneCode","currentTime","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ComponentUserVerify } from \"@components\";\nimport {\n    enumUseSetting,\n    enumValidation,\n    PATH_HOME,\n    PATH_USER_SETTING,\n    TIME_RESEND,\n} from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { verifyApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const PageVerify = () => {\n    //page hooks\n    const { type } = useParams<{ type: enumUseSetting }>();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const { t } = useTranslation();\n    const history = useHistory();\n    //page props\n    const [otp, setOtp] = useState<string>(\"\");\n    const [timeResend, setTimeResend] = useState<number>(TIME_RESEND);\n    //page variable\n    const email = window.sessionStorage.getItem(\"email\") || \"\";\n    const phoneNumber = window.sessionStorage.getItem(\"phoneNumber\") || \"\";\n\n    useEffect(() => {\n        //WHAT: CHECK EMAIL OR PHONE\n        console.log(!email && !phoneNumber);\n        if (!email && !phoneNumber) {\n            history.push(PATH_HOME);\n        }\n    }, []);\n\n    const handleChangeOtp = (otp: string) => {\n        setOtp(otp);\n    };\n\n    const handleVerifyEmail = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await verifyApi.verifyEmailCode({\n                code: otp,\n                email,\n            });\n            const message = res.data.message;\n            if (message) {\n                success(t(\"message.verify_email.success\"));\n            }\n            window.sessionStorage.removeItem(\"email\");\n            window.sessionStorage.removeItem(\"phoneNumber\");\n            history.push(PATH_USER_SETTING);\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.verify_email.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleVerifyPhone = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await verifyApi.verifyPhoneCode({\n                code: otp,\n                phoneNumber,\n            });\n            const message = res.data.message;\n            if (message) {\n                success(t(\"message.verify_phone.success\"));\n            }\n            history.push(PATH_USER_SETTING);\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.verify_phone.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleSave = () => {\n        if (otp.length < enumValidation.LENTH_OTP) return;\n        if (type === enumUseSetting.EMAIL) {\n            handleVerifyEmail();\n        } else {\n            handleVerifyPhone();\n        }\n    };\n\n    const handleResend = async () => {\n        if (timeResend !== TIME_RESEND) return;\n        try {\n            dispatch(setLoading(true));\n            let res;\n            if (type === enumUseSetting.EMAIL) {\n                res = await verifyApi.resendEmailCode({\n                    email,\n                });\n            } else {\n                res = await verifyApi.resendPhoneCode({\n                    phoneNumber,\n                });\n            }\n            if (res.data.message) {\n                success(\n                    type === enumUseSetting.EMAIL\n                        ? t(\"message.email_send\")\n                        : t(\"message.phone_send\")\n                );\n                let currentTime = timeResend;\n                const id = setInterval(() => {\n                    currentTime = currentTime - 1;\n                    setTimeResend(() => currentTime);\n                    if (currentTime === 0) {\n                        setTimeResend(TIME_RESEND);\n                        clearInterval(id);\n                    }\n                }, 1000);\n            }\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            error(message);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    return (\n        <ComponentUserVerify\n            otp={otp}\n            handleChangeOtp={handleChangeOtp}\n            type={type}\n            handleSave={handleSave}\n            timeResend={timeResend}\n            handleResend={handleResend}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}