{"ast":null,"code":"import _regeneratorRuntime from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var queryString=require(\"query-string\");import{logout,store}from\"@redux\";import{enumClientIdEnum,enumHttpHeader}from\"@configs\";var axiosClient=axios.create({baseURL:process.env.REACT_APP_API_URL,headers:{\"Content-Type\":\"application/json\",\"X-Requested-With\":\"XMLHttpRequest\"},paramsSerializer:function paramsSerializer(params){return queryString.stringify(params);}});axiosClient.interceptors.request.use(function(config){var _store$getState$auth$;var token=(_store$getState$auth$=store.getState().auth.auth)===null||_store$getState$auth$===void 0?void 0:_store$getState$auth$.accessToken;config.headers[\"access-token\"]=token;config.headers[enumHttpHeader.ClientId]=enumClientIdEnum.USER;config.headers[enumHttpHeader.MerchantId]=store.getState().auth.merchantId||store.getState().merchant._id;return config;});axiosClient.interceptors.response.use(function(response){if(response&&response.data){return response;}return response;},/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(error){var _store$getState$auth$2,_store$getState$auth$3,refreshTk,refreshTokenBody,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(error.response&&error.response.status===401)){_context.next=17;break;}//refreshToken\nrefreshTk=(_store$getState$auth$2=store.getState().auth.auth)===null||_store$getState$auth$2===void 0?void 0:(_store$getState$auth$3=_store$getState$auth$2.refreshToken)===null||_store$getState$auth$3===void 0?void 0:_store$getState$auth$3._id;if(!refreshTk){_context.next=16;break;}refreshTokenBody={refreshTk:refreshTk};_context.prev=4;_context.next=7;return axios.post(\"/auth/login-refresh-token\",refreshTokenBody);case 7:res=_context.sent;if(res.status===200){//         store.dispatch(refreshToken(res.data as IRefreshTokenRes));\n}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](4);store.dispatch(logout());case 14:_context.next=17;break;case 16:store.dispatch(logout());case 17:throw error;case 18:case\"end\":return _context.stop();}}},_callee,null,[[4,11]]);}));return function(_x){return _ref.apply(this,arguments);};}());export default axiosClient;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/API/axiosClient.ts"],"names":["axios","queryString","require","logout","store","enumClientIdEnum","enumHttpHeader","axiosClient","create","baseURL","process","env","REACT_APP_API_URL","headers","paramsSerializer","params","stringify","interceptors","request","use","config","token","getState","auth","accessToken","ClientId","USER","MerchantId","merchantId","merchant","_id","response","data","error","status","refreshTk","refreshToken","refreshTokenBody","post","res","dispatch"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAAC,cAAD,CAA3B,CAEA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,QAA9B,CACA,OAASC,gBAAT,CAA2BC,cAA3B,KAAiD,UAAjD,CAEA,GAAMC,CAAAA,WAAW,CAAGP,KAAK,CAACQ,MAAN,CAAa,CAC7BC,OAAO,CAAEC,OAAO,CAACC,GAAR,CAAYC,iBADQ,CAG7BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,mBAAoB,gBAFf,CAHoB,CAQ7BC,gBAAgB,CAAE,0BAACC,MAAD,QAAYd,CAAAA,WAAW,CAACe,SAAZ,CAAsBD,MAAtB,CAAZ,EARW,CAAb,CAApB,CAWAR,WAAW,CAACU,YAAZ,CAAyBC,OAAzB,CAAiCC,GAAjC,CAAqC,SAACC,MAAD,CAAY,2BAC7C,GAAMC,CAAAA,KAAK,wBAAGjB,KAAK,CAACkB,QAAN,GAAiBC,IAAjB,CAAsBA,IAAzB,gDAAG,sBAA4BC,WAA1C,CACAJ,MAAM,CAACP,OAAP,CAAe,cAAf,EAAiCQ,KAAjC,CACAD,MAAM,CAACP,OAAP,CAAeP,cAAc,CAACmB,QAA9B,EAA0CpB,gBAAgB,CAACqB,IAA3D,CACAN,MAAM,CAACP,OAAP,CAAeP,cAAc,CAACqB,UAA9B,EACIvB,KAAK,CAACkB,QAAN,GAAiBC,IAAjB,CAAsBK,UAAtB,EAAoCxB,KAAK,CAACkB,QAAN,GAAiBO,QAAjB,CAA0BC,GADlE,CAEA,MAAOV,CAAAA,MAAP,CACH,CAPD,EASAb,WAAW,CAACU,YAAZ,CAAyBc,QAAzB,CAAkCZ,GAAlC,CACI,SAACY,QAAD,CAAc,CACV,GAAIA,QAAQ,EAAIA,QAAQ,CAACC,IAAzB,CAA+B,CAC3B,MAAOD,CAAAA,QAAP,CACH,CACD,MAAOA,CAAAA,QAAP,CACH,CANL,0FAQI,iBAAOE,KAAP,wMAEQA,KAAK,CAACF,QAAN,EAAkBE,KAAK,CAACF,QAAN,CAAeG,MAAf,GAA0B,GAFpD,2BAGQ;AACMC,SAJd,yBAI0B/B,KAAK,CAACkB,QAAN,GAAiBC,IAAjB,CAAsBA,IAJhD,yEAI0B,uBAA4Ba,YAJtD,iDAI0B,uBAA0CN,GAJpE,KAKYK,SALZ,0BAMkBE,gBANlB,CAMqC,CAAEF,SAAS,CAATA,SAAF,CANrC,uCAQkCnC,CAAAA,KAAK,CAACsC,IAAN,CAAW,2BAAX,CAAwCD,gBAAxC,CARlC,QAQsBE,GARtB,eASgB,GAAIA,GAAG,CAACL,MAAJ,GAAe,GAAnB,CAAwB,CACpB;AACH,CAXjB,iFAagB9B,KAAK,CAACoC,QAAN,CAAerC,MAAM,EAArB,EAbhB,uCAgBYC,KAAK,CAACoC,QAAN,CAAerC,MAAM,EAArB,EAhBZ,aAmBU8B,CAAAA,KAnBV,sEARJ,gEA+BA,cAAe1B,CAAAA,WAAf","sourcesContent":["import axios from \"axios\";\nconst queryString = require(\"query-string\");\n\nimport { logout, store } from \"@redux\";\nimport { enumClientIdEnum, enumHttpHeader } from \"@configs\";\n\nconst axiosClient = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n    },\n\n    paramsSerializer: (params) => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use((config) => {\n    const token = store.getState().auth.auth?.accessToken;\n    config.headers[\"access-token\"] = token;\n    config.headers[enumHttpHeader.ClientId] = enumClientIdEnum.USER;\n    config.headers[enumHttpHeader.MerchantId] =\n        store.getState().auth.merchantId || store.getState().merchant._id;\n    return config;\n});\n\naxiosClient.interceptors.response.use(\n    (response) => {\n        if (response && response.data) {\n            return response;\n        }\n        return response;\n    },\n\n    async (error: any) => {\n        // Handle errors\n        if (error.response && error.response.status === 401) {\n            //refreshToken\n            const refreshTk = store.getState().auth.auth?.refreshToken?._id;\n            if (refreshTk) {\n                const refreshTokenBody = { refreshTk };\n                try {\n                    const res = await axios.post(\"/auth/login-refresh-token\", refreshTokenBody);\n                    if (res.status === 200) {\n                        //         store.dispatch(refreshToken(res.data as IRefreshTokenRes));\n                    }\n                } catch {\n                    store.dispatch(logout());\n                }\n            } else {\n                store.dispatch(logout());\n            }\n        }\n        throw error;\n    }\n);\n\nexport default axiosClient;\n"]},"metadata":{},"sourceType":"module"}