{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/SocialMedia.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router\";\nimport { ComponentGmailButton, ComponentPhoneButton, ComponentSocialMedia } from \"@components\";\nimport { logout, selectMerchant } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { enumExternalAuthType, enumExternalMethod, PATH_SIGN_IN_EMAIL, PATH_SIGN_IN_TEL } from \"@configs\";\nimport { ModuleFaceBook, ModuleGoogle, ModuleLine } from \"@modules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleSocialMedia = props => {\n  _s();\n\n  //page props\n  const {\n    state\n  } = props; //page hook\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify();\n  const location = useLocation(); //redux page\n\n  const {\n    signUpSettings\n  } = useSelector(selectMerchant); //page state\n\n  const [data, setDate] = useState([]); //page variable\n\n  const signUpMethods = signUpSettings === null || signUpSettings === void 0 ? void 0 : signUpSettings.signUpMethods;\n  const socials = [];\n  const {\n    pathname\n  } = location;\n  useEffect(() => {\n    //\n    if (state.type === enumExternalAuthType.SIGNUP) {\n      if (signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.LINE)) {\n        socials.push( /*#__PURE__*/_jsxDEV(ModuleLine, {\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 30\n        }, this));\n      }\n\n      if (signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.FACEBOOK)) {\n        socials.push( /*#__PURE__*/_jsxDEV(ModuleFaceBook, {\n          errorHandler: errorHandler,\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 30\n        }, this));\n      }\n\n      if (signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.GOOGLE)) {\n        socials.push( /*#__PURE__*/_jsxDEV(ModuleGoogle, {\n          errorHandler: errorHandler,\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 30\n        }, this));\n      }\n\n      if ((signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.EMAIL)) && pathname.includes(PATH_SIGN_IN_EMAIL)) {\n        socials.push( /*#__PURE__*/_jsxDEV(ComponentGmailButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 30\n        }, this));\n      }\n\n      if ((signUpMethods === null || signUpMethods === void 0 ? void 0 : signUpMethods.includes(enumExternalMethod.TEL)) && pathname.includes(PATH_SIGN_IN_TEL)) {\n        socials.push( /*#__PURE__*/_jsxDEV(ComponentPhoneButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 30\n        }, this));\n      }\n    }\n\n    setDate(socials);\n  }, [signUpMethods, pathname]);\n\n  const errorHandler = errors => {\n    //handle Error\n    if (errors.response) {\n      const {\n        data,\n        status\n      } = errors.response;\n\n      if ((data === null || data === void 0 ? void 0 : data.message) && status !== 500) {\n        error(data === null || data === void 0 ? void 0 : data.message);\n      } else {\n        error(t(\"page.auth.sign_in_failed\"));\n      }\n\n      dispatch(logout());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComponentSocialMedia, {\n    socials: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ModuleSocialMedia, \"kXQpcCa7QMYLfdIUI4vG/JCZbAg=\", false, function () {\n  return [useTranslation, useDispatch, useNotify, useLocation, useSelector];\n});\n\n_c = ModuleSocialMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleSocialMedia\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/SocialMedia.tsx"],"names":["useDispatch","useSelector","useEffect","useState","useTranslation","useLocation","ComponentGmailButton","ComponentPhoneButton","ComponentSocialMedia","logout","selectMerchant","useNotify","enumExternalAuthType","enumExternalMethod","PATH_SIGN_IN_EMAIL","PATH_SIGN_IN_TEL","ModuleFaceBook","ModuleGoogle","ModuleLine","ModuleSocialMedia","props","state","t","dispatch","error","location","signUpSettings","data","setDate","signUpMethods","socials","pathname","type","SIGNUP","includes","LINE","push","FACEBOOK","errorHandler","GOOGLE","EMAIL","TEL","errors","response","status","message"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,oBAArD,QAAiF,aAAjF;AAEA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,QAAvC;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SACIC,oBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,gBAJJ,QAKO,UALP;AAMA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,UAAvC,QAAyD,UAAzD;;AAMA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAmB;AAAA;;AAChD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB,CAFgD,CAGhD;;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQlB,cAAc,EAA5B;AACA,QAAMmB,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAM;AAAEwB,IAAAA;AAAF,MAAYb,SAAS,EAA3B;AACA,QAAMc,QAAQ,GAAGpB,WAAW,EAA5B,CAPgD,CAQhD;;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAqBzB,WAAW,CAACS,cAAD,CAAtC,CATgD,CAUhD;;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAgB,EAAhB,CAAhC,CAXgD,CAYhD;;AACA,QAAM0B,aAAa,GAAGH,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEG,aAAtC;AACA,QAAMC,OAAsB,GAAG,EAA/B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeN,QAArB;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAImB,KAAK,CAACW,IAAN,KAAepB,oBAAoB,CAACqB,MAAxC,EAAgD;AAC5C,UAAIJ,aAAJ,aAAIA,aAAJ,uBAAIA,aAAa,CAAEK,QAAf,CAAwBrB,kBAAkB,CAACsB,IAA3C,CAAJ,EAAsD;AAClDL,QAAAA,OAAO,CAACM,IAAR,eAAa,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEf;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAb;AACH;;AACD,UAAIQ,aAAJ,aAAIA,aAAJ,uBAAIA,aAAa,CAAEK,QAAf,CAAwBrB,kBAAkB,CAACwB,QAA3C,CAAJ,EAA0D;AACtDP,QAAAA,OAAO,CAACM,IAAR,eAAa,QAAC,cAAD;AAAgB,UAAA,YAAY,EAAEE,YAA9B;AAA4C,UAAA,KAAK,EAAEjB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAAb;AACH;;AACD,UAAIQ,aAAJ,aAAIA,aAAJ,uBAAIA,aAAa,CAAEK,QAAf,CAAwBrB,kBAAkB,CAAC0B,MAA3C,CAAJ,EAAwD;AACpDT,QAAAA,OAAO,CAACM,IAAR,eAAa,QAAC,YAAD;AAAc,UAAA,YAAY,EAAEE,YAA5B;AAA0C,UAAA,KAAK,EAAEjB;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAAb;AACH;;AACD,UACI,CAAAQ,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEK,QAAf,CAAwBrB,kBAAkB,CAAC2B,KAA3C,MACAT,QAAQ,CAACG,QAAT,CAAkBpB,kBAAlB,CAFJ,EAGE;AACEgB,QAAAA,OAAO,CAACM,IAAR,eAAa,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,gBAAb;AACH;;AACD,UACI,CAAAP,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEK,QAAf,CAAwBrB,kBAAkB,CAAC4B,GAA3C,MACAV,QAAQ,CAACG,QAAT,CAAkBnB,gBAAlB,CAFJ,EAGE;AACEe,QAAAA,OAAO,CAACM,IAAR,eAAa,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,gBAAb;AACH;AACJ;;AACDR,IAAAA,OAAO,CAACE,OAAD,CAAP;AACH,GA1BQ,EA0BN,CAACD,aAAD,EAAgBE,QAAhB,CA1BM,CAAT;;AA4BA,QAAMO,YAAY,GAAII,MAAD,IAAiB;AAClC;AACA,QAAIA,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAM;AAAEhB,QAAAA,IAAF;AAAQiB,QAAAA;AAAR,UAAmBF,MAAM,CAACC,QAAhC;;AACA,UAAI,CAAAhB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEkB,OAAN,KAAiBD,MAAM,KAAK,GAAhC,EAAqC;AACjCpB,QAAAA,KAAK,CAACG,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEkB,OAAP,CAAL;AACH,OAFD,MAEO;AACHrB,QAAAA,KAAK,CAACF,CAAC,CAAC,0BAAD,CAAF,CAAL;AACH;;AACDC,MAAAA,QAAQ,CAACd,MAAM,EAAP,CAAR;AACH;AACJ,GAXD;;AAaA,sBAAO,QAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEkB;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA3DM;;GAAMR,iB;UAIKf,c,EACGJ,W,EACCW,S,EACDN,W,EAEUJ,W;;;KATlBkB,iB","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router\";\n\nimport { ComponentGmailButton, ComponentPhoneButton, ComponentSocialMedia } from \"@components\";\nimport { IExternalAuthState } from \"@interfaces\";\nimport { logout, selectMerchant } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport {\n    enumExternalAuthType,\n    enumExternalMethod,\n    PATH_SIGN_IN_EMAIL,\n    PATH_SIGN_IN_TEL,\n} from \"@configs\";\nimport { ModuleFaceBook, ModuleGoogle, ModuleLine } from \"@modules\";\n\ninterface IProps {\n    state: IExternalAuthState;\n}\n\nexport const ModuleSocialMedia = (props: IProps) => {\n    //page props\n    const { state } = props;\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    const location = useLocation();\n    //redux page\n    const { signUpSettings } = useSelector(selectMerchant);\n    //page state\n    const [data, setDate] = useState<JSX.Element[]>([]);\n    //page variable\n    const signUpMethods = signUpSettings?.signUpMethods;\n    const socials: JSX.Element[] = [];\n    const { pathname } = location;\n\n    useEffect(() => {\n        //\n        if (state.type === enumExternalAuthType.SIGNUP) {\n            if (signUpMethods?.includes(enumExternalMethod.LINE)) {\n                socials.push(<ModuleLine state={state} />);\n            }\n            if (signUpMethods?.includes(enumExternalMethod.FACEBOOK)) {\n                socials.push(<ModuleFaceBook errorHandler={errorHandler} state={state} />);\n            }\n            if (signUpMethods?.includes(enumExternalMethod.GOOGLE)) {\n                socials.push(<ModuleGoogle errorHandler={errorHandler} state={state} />);\n            }\n            if (\n                signUpMethods?.includes(enumExternalMethod.EMAIL) &&\n                pathname.includes(PATH_SIGN_IN_EMAIL)\n            ) {\n                socials.push(<ComponentGmailButton />);\n            }\n            if (\n                signUpMethods?.includes(enumExternalMethod.TEL) &&\n                pathname.includes(PATH_SIGN_IN_TEL)\n            ) {\n                socials.push(<ComponentPhoneButton />);\n            }\n        }\n        setDate(socials);\n    }, [signUpMethods, pathname]);\n\n    const errorHandler = (errors: any) => {\n        //handle Error\n        if (errors.response) {\n            const { data, status } = errors.response;\n            if (data?.message && status !== 500) {\n                error(data?.message);\n            } else {\n                error(t(\"page.auth.sign_in_failed\"));\n            }\n            dispatch(logout());\n        }\n    };\n\n    return <ComponentSocialMedia socials={data} />;\n};\n"]},"metadata":{},"sourceType":"module"}