{"ast":null,"code":"import querystring from\"querystring\";import{memo,useCallback}from\"react\";import{ComponentLineButton}from\"@components\";import{LINE_ACCESS_URL,LINE_SCOPE,PATH_LINE_LOGIN}from\"@configs\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ModuleLine=/*#__PURE__*/memo(function(props){//props\nvar state=props.state;var handleLineLogin=useCallback(function(){// Build query string.\nvar query=querystring.stringify({response_type:\"code\",client_id:process.env.REACT_APP_LINE_ID,state:JSON.stringify(state),redirect_uri:\"\".concat(process.env.REACT_APP_WEB_URL).concat(PATH_LINE_LOGIN)});// Build the Line authorize URL.\nvar lineUrl=\"\".concat(LINE_ACCESS_URL,\"/authorize?scope=\").concat(LINE_SCOPE,\"&\").concat(query);// Redirect to external URL.\nwindow.location.href=lineUrl;},[]);return/*#__PURE__*/_jsx(ComponentLineButton,{onClick:handleLineLogin});});","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/Line.tsx"],"names":["querystring","memo","useCallback","ComponentLineButton","LINE_ACCESS_URL","LINE_SCOPE","PATH_LINE_LOGIN","ModuleLine","props","state","handleLineLogin","query","stringify","response_type","client_id","process","env","REACT_APP_LINE_ID","JSON","redirect_uri","REACT_APP_WEB_URL","lineUrl","window","location","href"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,aAAxB,CACA,OAASC,IAAT,CAAeC,WAAf,KAAkC,OAAlC,CAEA,OAASC,mBAAT,KAAoC,aAApC,CACA,OAASC,eAAT,CAA0BC,UAA1B,CAAsCC,eAAtC,KAA6D,UAA7D,C,2CAOA,MAAO,IAAMC,CAAAA,UAAU,cAAGN,IAAI,CAAC,SAACO,KAAD,CAAmB,CAC9C;AACA,GAAQC,CAAAA,KAAR,CAAkBD,KAAlB,CAAQC,KAAR,CAEA,GAAMC,CAAAA,eAAe,CAAGR,WAAW,CAAC,UAAM,CACtC;AACA,GAAMS,CAAAA,KAAK,CAAGX,WAAW,CAACY,SAAZ,CAAsB,CAChCC,aAAa,CAAE,MADiB,CAEhCC,SAAS,CAAEC,OAAO,CAACC,GAAR,CAAYC,iBAFS,CAGhCR,KAAK,CAAES,IAAI,CAACN,SAAL,CAAeH,KAAf,CAHyB,CAIhCU,YAAY,WAAKJ,OAAO,CAACC,GAAR,CAAYI,iBAAjB,SAAqCd,eAArC,CAJoB,CAAtB,CAAd,CAOA;AACA,GAAMe,CAAAA,OAAO,WAAMjB,eAAN,6BAAyCC,UAAzC,aAAuDM,KAAvD,CAAb,CAEA;AACAW,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuBH,OAAvB,CACH,CAdkC,CAchC,EAdgC,CAAnC,CAgBA,mBAAO,KAAC,mBAAD,EAAqB,OAAO,CAAEX,eAA9B,EAAP,CACH,CArB6B,CAAvB","sourcesContent":["import querystring from \"querystring\";\nimport { memo, useCallback } from \"react\";\n\nimport { ComponentLineButton } from \"@components\";\nimport { LINE_ACCESS_URL, LINE_SCOPE, PATH_LINE_LOGIN } from \"@configs\";\nimport { IExternalAuthState } from \"@interfaces\";\n\ninterface IProps {\n    state: IExternalAuthState;\n}\n\nexport const ModuleLine = memo((props: IProps) => {\n    //props\n    const { state } = props;\n\n    const handleLineLogin = useCallback(() => {\n        // Build query string.\n        const query = querystring.stringify({\n            response_type: \"code\",\n            client_id: process.env.REACT_APP_LINE_ID,\n            state: JSON.stringify(state),\n            redirect_uri: `${process.env.REACT_APP_WEB_URL}${PATH_LINE_LOGIN}`,\n        });\n\n        // Build the Line authorize URL.\n        const lineUrl = `${LINE_ACCESS_URL}/authorize?scope=${LINE_SCOPE}&${query}`;\n\n        // Redirect to external URL.\n        window.location.href = lineUrl;\n    }, []);\n\n    return <ComponentLineButton onClick={handleLineLogin} />;\n});\n"]},"metadata":{},"sourceType":"module"}