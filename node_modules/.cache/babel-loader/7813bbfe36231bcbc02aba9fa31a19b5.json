{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; // import { useHistory } from \"react-router\";\n\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitList } from \"@components\"; // import { IReward } from \"@interfaces\";\n\nimport { setLoading } from \"@redux\"; // import { REWARD } from \"@configs\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModulesBenefit = () => {\n  _s();\n\n  const dispatch = useDispatch(); // const history = useHistory();\n  //page state\n\n  const [benefit, setBenefit] = useState([]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getListBenefit();\n      const data = res.data.docs;\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = id => {\n    var _value$levelIds;\n\n    if ((_value$levelIds = value.levelIds) === null || _value$levelIds === void 0 ? void 0 : _value$levelIds.length) return;\n    history.push(REWARD + \"/\" + value._id); //\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", benefit && /*#__PURE__*/_jsxDEV(ComponentBenefitList, {\n      data: benefit,\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModulesBenefit, \"g5Uhp55YH7drTN3L6ovTLjsAS/o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModulesBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModulesBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Benefit.tsx"],"names":["useEffect","useState","useDispatch","benefitApi","ComponentBenefitList","setLoading","ModulesBenefit","dispatch","benefit","setBenefit","res","getListBenefit","data","docs","handleClick","id","value","levelIds","length","history","push","REWARD","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AAEA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,oBAAT,QAAqC,aAArC,C,CACA;;AACA,SAASC,UAAT,QAA2B,QAA3B,C,CACA;;;;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADgC,CAEhC;AACA;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAa,EAAb,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTO,MAAAA,QAAQ,CAACF,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMK,GAAG,GAAG,MAAMP,UAAU,CAACQ,cAAX,EAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,IAAtB;AACAJ,MAAAA,UAAU,CAACG,IAAD,CAAV;AACAL,MAAAA,QAAQ,CAACF,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAND;AAOH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMS,WAAW,GAAIC,EAAD,IAAgB;AAAA;;AAChC,2BAAIC,KAAK,CAACC,QAAV,oDAAI,gBAAgBC,MAApB,EAA4B;AAC5BC,IAAAA,OAAO,CAACC,IAAR,CAAaC,MAAM,GAAG,GAAT,GAAeL,KAAK,CAACM,GAAlC,EAFgC,CAGhC;AACH,GAJD;;AAMA,sBAAO;AAAA,oBAAId,OAAO,iBAAI,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEA,OAA5B;AAAqC,MAAA,WAAW,EAAEM;AAAlD;AAAA;AAAA;AAAA;AAAA,YAAf;AAAA,kBAAP;AACH,CAvBM;;GAAMR,c;UACQJ,W;;;KADRI,c","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { useHistory } from \"react-router\";\n\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitList } from \"@components\";\n// import { IReward } from \"@interfaces\";\nimport { setLoading } from \"@redux\";\n// import { REWARD } from \"@configs\";\nimport { IBenefit } from \"@interfaces\";\n\nexport const ModulesBenefit = () => {\n    const dispatch = useDispatch();\n    // const history = useHistory();\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getListBenefit();\n            const data = res.data.docs as IBenefit[];\n            setBenefit(data);\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = (id: string) => {\n        if (value.levelIds?.length) return;\n        history.push(REWARD + \"/\" + value._id);\n        //\n    };\n\n    return <> {benefit && <ComponentBenefitList data={benefit} handleClick={handleClick} />}</>;\n};\n"]},"metadata":{},"sourceType":"module"}