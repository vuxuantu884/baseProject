{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Reward.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { rewardApi } from \"@api\";\nimport { selectAuth, setLoading, setToggleConfirm } from \"@redux\";\nimport { ComponentPopUpConfirm, ComponentRewardDetail, ComponentSelectType } from \"@components\";\nimport { enumStatus, enumTypes, enumValidation, PATH_HOME } from \"@configs\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageReward = () => {\n  _s();\n\n  //page hooks\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useNotify();\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //redux state\n\n  const {\n    showConfirm\n  } = useSelector(selectAuth); //page state\n\n  const [reward, setReward] = useState();\n  const [count, setCount] = useState(1);\n  const [currentImage, setCurrentImage] = useState(enumValidation.NUMBER_ONE);\n  const [showSelectType, setShowSelectType] = useState(false);\n  const [variant, setVariant] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      if (id) {\n        dispatch(setLoading(true));\n        const res = await rewardApi.getDetailById(id);\n        const data = res.data;\n        setReward(data);\n        dispatch(setLoading(false));\n      }\n    })();\n  }, []);\n\n  const handleAddCount = () => {\n    if (reward) {\n      if (count < (reward.limit || 1)) {\n        setCount(count + 1);\n      }\n    }\n  };\n\n  const handleMinusCount = () => {\n    if (count > 1) {\n      setCount(count - 1);\n    }\n  };\n\n  const handleCalculatePoint = () => {\n    if (reward && reward.point) {\n      return reward.point * count;\n    } else {\n      return 0;\n    }\n  };\n\n  const handleUseReward = async () => {\n    //\n    if (reward) {\n      try {\n        const res = await rewardApi.redeemed({\n          objectId: reward._id || \"\",\n          quantity: count,\n          status: enumStatus.ACTIVE,\n          type: enumTypes.REWARD,\n          variants: [variant]\n        });\n\n        if (res.data.message) {\n          success(res.data.message);\n        }\n\n        history.push(PATH_HOME);\n      } catch (err) {\n        const {\n          message\n        } = err.response.data;\n\n        if (message) {\n          error(message);\n        } else {\n          error(t(\"message.use_coupon.fail\"));\n        }\n\n        history.push(PATH_HOME);\n      }\n    }\n  };\n\n  const handleChangeImage = swiper => {\n    setCurrentImage(swiper.realIndex + 1);\n  };\n\n  const handleChangeVariant = value => {\n    //\n    setVariant(value);\n  };\n\n  const handleToggleConfirm = () => {\n    dispatch(setToggleConfirm());\n  };\n\n  const handleToggleShowSelectType = () => {\n    setShowSelectType(!showSelectType);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [reward && !showSelectType && /*#__PURE__*/_jsxDEV(ComponentRewardDetail, {\n      handleAddCount: handleAddCount,\n      handleMinusCount: handleMinusCount,\n      handleCalculatePoint: handleCalculatePoint,\n      count: count,\n      data: reward,\n      handleToggleConfirm: handleToggleConfirm,\n      currentImage: currentImage,\n      handleChangeImage: handleChangeImage,\n      handleToggleShowSelectType: handleToggleShowSelectType,\n      variant: variant,\n      variants: (reward === null || reward === void 0 ? void 0 : reward.variants) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), showConfirm && reward && /*#__PURE__*/_jsxDEV(ComponentPopUpConfirm, {\n      handleCloseDetail: handleToggleConfirm,\n      data: reward,\n      handleConfirm: handleUseReward,\n      handleCalculatePoint: handleCalculatePoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), showSelectType && reward && /*#__PURE__*/_jsxDEV(ComponentSelectType, {\n      variant: variant,\n      variants: (reward === null || reward === void 0 ? void 0 : reward.variants) || [],\n      handleChangeVariant: handleChangeVariant,\n      handleToggleShowSelectType: handleToggleShowSelectType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PageReward, \"y1Ng3cRVtwpt24RUJWMlTo8yOL8=\", false, function () {\n  return [useParams, useDispatch, useNotify, useTranslation, useHistory, useSelector];\n});\n\n_c = PageReward;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageReward\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Reward.tsx"],"names":["useEffect","useState","useHistory","useParams","useDispatch","useSelector","useTranslation","rewardApi","selectAuth","setLoading","setToggleConfirm","ComponentPopUpConfirm","ComponentRewardDetail","ComponentSelectType","enumStatus","enumTypes","enumValidation","PATH_HOME","useNotify","PageReward","id","dispatch","error","success","t","history","showConfirm","reward","setReward","count","setCount","currentImage","setCurrentImage","NUMBER_ONE","showSelectType","setShowSelectType","variant","setVariant","res","getDetailById","data","handleAddCount","limit","handleMinusCount","handleCalculatePoint","point","handleUseReward","redeemed","objectId","_id","quantity","status","ACTIVE","type","REWARD","variants","message","push","err","response","handleChangeImage","swiper","realIndex","handleChangeVariant","value","handleToggleConfirm","handleToggleShowSelectType"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport SwiperCore from \"swiper\";\n\nimport { IReward } from \"@interfaces\";\nimport { rewardApi } from \"@api\";\nimport { resetConfirm, selectAuth, setLoading, setToggleConfirm } from \"@redux\";\nimport { ComponentPopUpConfirm, ComponentRewardDetail, ComponentSelectType } from \"@components\";\nimport { enumStatus, enumTypes, enumValidation, PATH_HOME } from \"@configs\";\nimport { useNotify } from \"@utils\";\n\nexport const PageReward = () => {\n    //page hooks\n    const { id } = useParams<{ id: string }>();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const { t } = useTranslation();\n    const history = useHistory();\n    //redux state\n    const { showConfirm } = useSelector(selectAuth);\n    //page state\n    const [reward, setReward] = useState<IReward>();\n    const [count, setCount] = useState<number>(1);\n    const [currentImage, setCurrentImage] = useState<number>(enumValidation.NUMBER_ONE);\n    const [showSelectType, setShowSelectType] = useState<boolean>(false);\n    const [variant, setVariant] = useState<string>(\"\");\n\n    useEffect(() => {\n        (async () => {\n            if (id) {\n                dispatch(setLoading(true));\n                const res = await rewardApi.getDetailById(id);\n                const data = res.data as IReward;\n                setReward(data);\n                dispatch(setLoading(false));\n            }\n        })();\n    }, []);\n    const handleAddCount = () => {\n        if (reward) {\n            if (count < (reward.limit || 1)) {\n                setCount(count + 1);\n            }\n        }\n    };\n    const handleMinusCount = () => {\n        if (count > 1) {\n            setCount(count - 1);\n        }\n    };\n\n    const handleCalculatePoint = () => {\n        if (reward && reward.point) {\n            return reward.point * count;\n        } else {\n            return 0;\n        }\n    };\n\n    const handleUseReward = async () => {\n        //\n        if (reward) {\n            try {\n                const res = await rewardApi.redeemed({\n                    objectId: reward._id || \"\",\n                    quantity: count,\n                    status: enumStatus.ACTIVE,\n                    type: enumTypes.REWARD,\n                    variants: [variant],\n                });\n                if (res.data.message) {\n                    success(res.data.message);\n                }\n                history.push(PATH_HOME);\n            } catch (err: any) {\n                const { message } = err.response.data;\n                if (message) {\n                    error(message);\n                } else {\n                    error(t(\"message.use_coupon.fail\"));\n                }\n                history.push(PATH_HOME);\n            }\n        }\n    };\n\n    const handleChangeImage = (swiper: SwiperCore) => {\n        setCurrentImage(swiper.realIndex + 1);\n    };\n\n    const handleChangeVariant = (value: string) => {\n        //\n        setVariant(value);\n    };\n\n    const handleToggleConfirm = () => {\n        dispatch(setToggleConfirm());\n    };\n\n    const handleToggleShowSelectType = () => {\n        setShowSelectType(!showSelectType);\n    };\n\n    return (\n        <>\n            {reward && !showSelectType && (\n                <ComponentRewardDetail\n                    handleAddCount={handleAddCount}\n                    handleMinusCount={handleMinusCount}\n                    handleCalculatePoint={handleCalculatePoint}\n                    count={count}\n                    data={reward}\n                    handleToggleConfirm={handleToggleConfirm}\n                    currentImage={currentImage}\n                    handleChangeImage={handleChangeImage}\n                    handleToggleShowSelectType={handleToggleShowSelectType}\n                    variant={variant}\n                    variants={reward?.variants || []}\n                />\n            )}\n            {showConfirm && reward && (\n                <ComponentPopUpConfirm\n                    handleCloseDetail={handleToggleConfirm}\n                    data={reward as IReward}\n                    handleConfirm={handleUseReward}\n                    handleCalculatePoint={handleCalculatePoint}\n                />\n            )}\n\n            {showSelectType && reward && (\n                <ComponentSelectType\n                    variant={variant}\n                    variants={reward?.variants || []}\n                    handleChangeVariant={handleChangeVariant}\n                    handleToggleShowSelectType={handleToggleShowSelectType}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}