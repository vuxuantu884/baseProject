{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { ReactElement } from \"react\";\n\nexport interface IHandleChange {\n    (e: React.ChangeEvent<any>): void;\n    <T = string | React.ChangeEvent<any>>(field: T): T extends React.ChangeEvent<any>\n        ? void\n        : (e: string | React.ChangeEvent<any>) => void;\n}\n\nexport interface IHandleBlur {\n    (e: React.FocusEvent<any>): void;\n    <T = any>(fieldOrEvent: T): T extends string ? (e: any) => void : void;\n}\n\nexport type IHandleSubmit = (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\n\nexport interface ILimitDate {\n    maxDate?: string | Date;\n    minDate?: string | Date;\n}\n\nexport interface ISelect {\n    id: string | number;\n    label: string | number;\n}\n\nexport interface ISelectBirthMonth {\n    name: string;\n    value: string;\n}\n\nexport interface IHandleChangeSelect {\n    (\n        value: string,\n        option?:\n            | ReactElement<any, string | React.JSXElementConstructor<any>>\n            | ReactElement<any, string | React.JSXElementConstructor<any>>[]\n    ): void;\n}\n"]},"metadata":{},"sourceType":"module"}