{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/user/Save.tsx\";\nimport { SharedInput } from \"@components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ComponentUserSettingSave = props => {\n  const {\n    values,\n    handleBlur,\n    handleChange,\n    errors,\n    touched\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(SharedInput, {\n      placeholder: t(\"page.auth.name\"),\n      name: \"fullName\",\n      value: values.fullName,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      errors: errors.fullName,\n      touched: touched.fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = ComponentUserSettingSave;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentUserSettingSave\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/user/Save.tsx"],"names":["SharedInput","ComponentUserSettingSave","props","values","handleBlur","handleChange","errors","touched","t","fullName"],"mappings":";AAGA,SAASA,WAAT,QAA4B,aAA5B;;;AAaA,OAAO,MAAMC,wBAAwB,GAAIC,KAAD,IAAmB;AACvD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA,MAApC;AAA4CC,IAAAA;AAA5C,MAAwDL,KAA9D;AACA,sBACI;AAAA,eACK,GADL,eAEI,QAAC,WAAD;AACI,MAAA,WAAW,EAAEM,CAAC,CAAC,gBAAD,CADlB;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAEL,MAAM,CAACM,QAHlB;AAII,MAAA,MAAM,EAAEL,UAJZ;AAKI,MAAA,QAAQ,EAAEC,YALd;AAMI,MAAA,MAAM,EAAEC,MAAM,CAACG,QANnB;AAOI,MAAA,OAAO,EAAEF,OAAO,CAACE;AAPrB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAcH,CAhBM;KAAMR,wB","sourcesContent":["import { FormikErrors, FormikTouched } from \"formik\";\n\nimport { IHandleBlur, IUserSetting, IHandleChange } from \"@interfaces\";\nimport { SharedInput } from \"@components\";\n\ninterface IProps {\n    values: IUserSetting;\n    handleBlur: IHandleBlur;\n    handleChange: IHandleChange;\n    errors: FormikErrors<IUserSetting>;\n    touched: FormikTouched<IUserSetting>;\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\n    isSubmitting: boolean;\n    title: string;\n}\n\nexport const ComponentUserSettingSave = (props: IProps) => {\n    const { values, handleBlur, handleChange, errors, touched } = props;\n    return (\n        <>\n            {\" \"}\n            <SharedInput\n                placeholder={t(\"page.auth.name\")}\n                name=\"fullName\"\n                value={values.fullName}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                errors={errors.fullName}\n                touched={touched.fullName}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}