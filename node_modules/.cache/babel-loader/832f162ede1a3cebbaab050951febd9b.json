{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/signUp/TelForm.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ComponentHeaderAuth } from \"@components\";\nimport { selectAuth, selectMerchant } from \"@redux\";\nimport { ModuleEmail } from \"@modules\";\nimport { enumExternalMethod, LINE_AUTH_URL, PATH_SIGN_UP_EMAIL } from \"@configs\";\nimport { LineApi } from \"@api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageSignUpTelFrom = () => {\n  _s();\n\n  //page variable\n  const merchant = useSelector(selectMerchant);\n  const history = useHistory(); //page variable\n\n  const {\n    line,\n    externalLogin\n  } = useSelector(selectAuth);\n  useEffect(() => {\n    if (externalLogin === enumExternalMethod.LINE) {\n      externalLine();\n    }\n  }, []);\n\n  const externalLine = async () => {\n    const lineLoginApi = LineApi(LINE_AUTH_URL);\n    console.log(line);\n\n    try {\n      if (line === null || line === void 0 ? void 0 : line.code) {\n        const lineState = JSON.parse(line === null || line === void 0 ? void 0 : line.state);\n\n        if (lineState.type === enumExternalAuthType.LOGIN) {\n          const lineAccessToken = await lineLoginApi.login(line === null || line === void 0 ? void 0 : line.code);\n\n          if (!lineAccessToken.data) {\n            dispatch(logout());\n          }\n\n          const lineLoginData = {\n            token: lineAccessToken.data.access_token,\n            refreshToken: lineAccessToken.data.refresh_token,\n            tokenId: lineAccessToken.data.id_token\n          };\n          const res = await dispatch(lineLogin(lineLoginData)); //WHAT: wrap function in create async thunk\n          //@ts-ignore\n\n          unwrapResult(res); //@ts-ignore\n\n          if (!res.payload.accessToken) {\n            error(t(\"page.auth.email_password_correct\"));\n          } else {\n            success(t(\"page.auth.login_successfully\"));\n          }\n        } else if (lineState.type === enumExternalAuthType.SIGNUP) {\n          const lineAccessToken = await lineLoginApi.login(line === null || line === void 0 ? void 0 : line.code);\n\n          if (!lineAccessToken.data) {\n            dispatch(logout());\n          }\n\n          const lineSignupData = {\n            token: lineAccessToken.data.access_token,\n            refreshToken: lineAccessToken.data.refresh_token,\n            tokenId: lineAccessToken.data.id_token,\n            inviteId: lineState === null || lineState === void 0 ? void 0 : lineState.inviteId\n          };\n          const res = await dispatch(lineSignup(lineSignupData)); //WHAT: wrap function in create async thunk\n          //@ts-ignore\n\n          unwrapResult(res); //@ts-ignore\n\n          if (!res.payload.accessToken) {\n            error(t(\"page.auth.email_password_correct\"));\n            history.push(PATH_SIGN_UP_EMAIL);\n          } else {\n            success(t(\"page.auth.login_successfully\"));\n          }\n        } else {\n          dispatch(logout());\n        }\n      } else {\n        dispatch(logout());\n      }\n    } catch (error) {\n      errorHandler(error);\n    }\n  };\n\n  const errorHandler = errors => {\n    //handle Error\n    if (errors.response) {\n      const {\n        status,\n        data\n      } = errors.response;\n\n      if ((data === null || data === void 0 ? void 0 : data.message) && status !== 500) {\n        error(data === null || data === void 0 ? void 0 : data.message);\n      } else {\n        error(t(\"page.auth.login_failed\"));\n      }\n    } else {\n      success(t(\"page.auth.login_failed\"));\n    }\n\n    dispatch(logout());\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    color: merchant.themeColor,\n    children: [/*#__PURE__*/_jsxDEV(ComponentHeaderAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModuleEmail, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageSignUpTelFrom, \"mZtujp2TUAgG6yhEgSKEmD8n6RE=\", false, function () {\n  return [useSelector, useHistory, useSelector];\n});\n\n_c = PageSignUpTelFrom;\nconst StyledContainer = styled.div``;\n_c2 = StyledContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PageSignUpTelFrom\");\n$RefreshReg$(_c2, \"StyledContainer\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/signUp/TelForm.tsx"],"names":["styled","useSelector","useEffect","useHistory","ComponentHeaderAuth","selectAuth","selectMerchant","ModuleEmail","enumExternalMethod","LINE_AUTH_URL","PATH_SIGN_UP_EMAIL","LineApi","PageSignUpTelFrom","merchant","history","line","externalLogin","LINE","externalLine","lineLoginApi","console","log","code","lineState","JSON","parse","state","type","enumExternalAuthType","LOGIN","lineAccessToken","login","data","dispatch","logout","lineLoginData","token","access_token","refreshToken","refresh_token","tokenId","id_token","res","lineLogin","unwrapResult","payload","accessToken","error","t","success","SIGNUP","lineSignupData","inviteId","lineSignup","push","errorHandler","errors","response","status","message","themeColor","StyledContainer","div"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,QAA3C;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,kBAAT,EAA6BC,aAA7B,EAA4CC,kBAA5C,QAAsE,UAAtE;AACA,SAASC,OAAT,QAAwB,MAAxB;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACnC;AACA,QAAMC,QAAQ,GAAGZ,WAAW,CAACK,cAAD,CAA5B;AACA,QAAMQ,OAAO,GAAGX,UAAU,EAA1B,CAHmC,CAInC;;AACA,QAAM;AAAEY,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAA0Bf,WAAW,CAACI,UAAD,CAA3C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,aAAa,KAAKR,kBAAkB,CAACS,IAAzC,EAA+C;AAC3CC,MAAAA,YAAY;AACf;AACJ,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMA,YAAY,GAAG,YAAY;AAC7B,UAAMC,YAAY,GAAGR,OAAO,CAACF,aAAD,CAA5B;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,QAAI;AACA,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEO,IAAV,EAAgB;AACZ,cAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWV,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAEW,KAAjB,CAAlB;;AAEA,YAAIH,SAAS,CAACI,IAAV,KAAmBC,oBAAoB,CAACC,KAA5C,EAAmD;AAC/C,gBAAMC,eAAe,GAAG,MAAMX,YAAY,CAACY,KAAb,CAAmBhB,IAAnB,aAAmBA,IAAnB,uBAAmBA,IAAI,CAAEO,IAAzB,CAA9B;;AACA,cAAI,CAACQ,eAAe,CAACE,IAArB,EAA2B;AACvBC,YAAAA,QAAQ,CAACC,MAAM,EAAP,CAAR;AACH;;AACD,gBAAMC,aAAyB,GAAG;AAC9BC,YAAAA,KAAK,EAAEN,eAAe,CAACE,IAAhB,CAAqBK,YADE;AAE9BC,YAAAA,YAAY,EAAER,eAAe,CAACE,IAAhB,CAAqBO,aAFL;AAG9BC,YAAAA,OAAO,EAAEV,eAAe,CAACE,IAAhB,CAAqBS;AAHA,WAAlC;AAKA,gBAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,SAAS,CAACR,aAAD,CAAV,CAA1B,CAV+C,CAW/C;AACA;;AACAS,UAAAA,YAAY,CAACF,GAAD,CAAZ,CAb+C,CAe/C;;AACA,cAAI,CAACA,GAAG,CAACG,OAAJ,CAAYC,WAAjB,EAA8B;AAC1BC,YAAAA,KAAK,CAACC,CAAC,CAAC,kCAAD,CAAF,CAAL;AACH,WAFD,MAEO;AACHC,YAAAA,OAAO,CAACD,CAAC,CAAC,8BAAD,CAAF,CAAP;AACH;AACJ,SArBD,MAqBO,IAAIzB,SAAS,CAACI,IAAV,KAAmBC,oBAAoB,CAACsB,MAA5C,EAAoD;AACvD,gBAAMpB,eAAe,GAAG,MAAMX,YAAY,CAACY,KAAb,CAAmBhB,IAAnB,aAAmBA,IAAnB,uBAAmBA,IAAI,CAAEO,IAAzB,CAA9B;;AACA,cAAI,CAACQ,eAAe,CAACE,IAArB,EAA2B;AACvBC,YAAAA,QAAQ,CAACC,MAAM,EAAP,CAAR;AACH;;AAED,gBAAMiB,cAA2B,GAAG;AAChCf,YAAAA,KAAK,EAAEN,eAAe,CAACE,IAAhB,CAAqBK,YADI;AAEhCC,YAAAA,YAAY,EAAER,eAAe,CAACE,IAAhB,CAAqBO,aAFH;AAGhCC,YAAAA,OAAO,EAAEV,eAAe,CAACE,IAAhB,CAAqBS,QAHE;AAIhCW,YAAAA,QAAQ,EAAE7B,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE6B;AAJW,WAApC;AAOA,gBAAMV,GAAG,GAAG,MAAMT,QAAQ,CAACoB,UAAU,CAACF,cAAD,CAAX,CAA1B,CAbuD,CAcvD;AACA;;AACAP,UAAAA,YAAY,CAACF,GAAD,CAAZ,CAhBuD,CAkBvD;;AACA,cAAI,CAACA,GAAG,CAACG,OAAJ,CAAYC,WAAjB,EAA8B;AAC1BC,YAAAA,KAAK,CAACC,CAAC,CAAC,kCAAD,CAAF,CAAL;AACAlC,YAAAA,OAAO,CAACwC,IAAR,CAAa5C,kBAAb;AACH,WAHD,MAGO;AACHuC,YAAAA,OAAO,CAACD,CAAC,CAAC,8BAAD,CAAF,CAAP;AACH;AACJ,SAzBM,MAyBA;AACHf,UAAAA,QAAQ,CAACC,MAAM,EAAP,CAAR;AACH;AACJ,OApDD,MAoDO;AACHD,QAAAA,QAAQ,CAACC,MAAM,EAAP,CAAR;AACH;AACJ,KAxDD,CAwDE,OAAOa,KAAP,EAAc;AACZQ,MAAAA,YAAY,CAACR,KAAD,CAAZ;AACH;AACJ,GA9DD;;AAgEA,QAAMQ,YAAY,GAAIC,MAAD,IAAiB;AAClC;AACA,QAAIA,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAM;AAAEC,QAAAA,MAAF;AAAU1B,QAAAA;AAAV,UAAmBwB,MAAM,CAACC,QAAhC;;AACA,UAAI,CAAAzB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE2B,OAAN,KAAiBD,MAAM,KAAK,GAAhC,EAAqC;AACjCX,QAAAA,KAAK,CAACf,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE2B,OAAP,CAAL;AACH,OAFD,MAEO;AACHZ,QAAAA,KAAK,CAACC,CAAC,CAAC,wBAAD,CAAF,CAAL;AACH;AACJ,KAPD,MAOO;AACHC,MAAAA,OAAO,CAACD,CAAC,CAAC,wBAAD,CAAF,CAAP;AACH;;AACDf,IAAAA,QAAQ,CAACC,MAAM,EAAP,CAAR;AACH,GAbD;;AAeA,sBACI,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAErB,QAAQ,CAAC+C,UAAjC;AAAA,4BACI,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlGM;;GAAMhD,iB;UAEQX,W,EACDE,U,EAEgBF,W;;;KALvBW,iB;AAoGb,MAAMiD,eAAe,GAAG7D,MAAM,CAAC8D,GAAuB,EAAtD;MAAMD,e","sourcesContent":["import styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { ComponentHeaderAuth } from \"@components\";\nimport { selectAuth, selectMerchant } from \"@redux\";\nimport { ModuleEmail } from \"@modules\";\nimport { enumExternalMethod, LINE_AUTH_URL, PATH_SIGN_UP_EMAIL } from \"@configs\";\nimport { LineApi } from \"@api\";\n\nexport const PageSignUpTelFrom = () => {\n    //page variable\n    const merchant = useSelector(selectMerchant);\n    const history = useHistory();\n    //page variable\n    const { line, externalLogin } = useSelector(selectAuth);\n\n    useEffect(() => {\n        if (externalLogin === enumExternalMethod.LINE) {\n            externalLine();\n        }\n    }, []);\n\n    const externalLine = async () => {\n        const lineLoginApi = LineApi(LINE_AUTH_URL);\n        console.log(line);\n        try {\n            if (line?.code) {\n                const lineState = JSON.parse(line?.state) as ILineState;\n\n                if (lineState.type === enumExternalAuthType.LOGIN) {\n                    const lineAccessToken = await lineLoginApi.login(line?.code);\n                    if (!lineAccessToken.data) {\n                        dispatch(logout());\n                    }\n                    const lineLoginData: ILineLogin = {\n                        token: lineAccessToken.data.access_token,\n                        refreshToken: lineAccessToken.data.refresh_token,\n                        tokenId: lineAccessToken.data.id_token,\n                    };\n                    const res = await dispatch(lineLogin(lineLoginData));\n                    //WHAT: wrap function in create async thunk\n                    //@ts-ignore\n                    unwrapResult(res);\n\n                    //@ts-ignore\n                    if (!res.payload.accessToken) {\n                        error(t(\"page.auth.email_password_correct\"));\n                    } else {\n                        success(t(\"page.auth.login_successfully\"));\n                    }\n                } else if (lineState.type === enumExternalAuthType.SIGNUP) {\n                    const lineAccessToken = await lineLoginApi.login(line?.code);\n                    if (!lineAccessToken.data) {\n                        dispatch(logout());\n                    }\n\n                    const lineSignupData: ILineSignup = {\n                        token: lineAccessToken.data.access_token,\n                        refreshToken: lineAccessToken.data.refresh_token,\n                        tokenId: lineAccessToken.data.id_token,\n                        inviteId: lineState?.inviteId,\n                    };\n\n                    const res = await dispatch(lineSignup(lineSignupData));\n                    //WHAT: wrap function in create async thunk\n                    //@ts-ignore\n                    unwrapResult(res);\n\n                    //@ts-ignore\n                    if (!res.payload.accessToken) {\n                        error(t(\"page.auth.email_password_correct\"));\n                        history.push(PATH_SIGN_UP_EMAIL);\n                    } else {\n                        success(t(\"page.auth.login_successfully\"));\n                    }\n                } else {\n                    dispatch(logout());\n                }\n            } else {\n                dispatch(logout());\n            }\n        } catch (error) {\n            errorHandler(error);\n        }\n    };\n\n    const errorHandler = (errors: any) => {\n        //handle Error\n        if (errors.response) {\n            const { status, data } = errors.response;\n            if (data?.message && status !== 500) {\n                error(data?.message);\n            } else {\n                error(t(\"page.auth.login_failed\"));\n            }\n        } else {\n            success(t(\"page.auth.login_failed\"));\n        }\n        dispatch(logout());\n    };\n\n    return (\n        <StyledContainer color={merchant.themeColor}>\n            <ComponentHeaderAuth />\n            <ModuleEmail />\n        </StyledContainer>\n    );\n};\n\nconst StyledContainer = styled.div<{ color: string }>``;\n"]},"metadata":{},"sourceType":"module"}