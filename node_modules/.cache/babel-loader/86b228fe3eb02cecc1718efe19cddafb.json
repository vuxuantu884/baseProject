{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/InputTel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport parsePhoneNumber from \"libphonenumber-js\";\nimport { SharedIntlTelInput } from \"@components\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModulesTelInput = props => {\n  _s();\n\n  //page hooks\n  const {\n    t\n  } = useTranslation(); //page state\n\n  const [country, setCountry] = useState(); //page props\n\n  const {\n    setFieldTouched,\n    value,\n    errorPhone,\n    setFieldValue,\n    setError,\n    disabled\n  } = props;\n  useEffect(() => {\n    const phoneNumber = parsePhoneNumber(value);\n    setCountry(phoneNumber === null || phoneNumber === void 0 ? void 0 : phoneNumber.country);\n  }, []);\n\n  const handleSelectFlag = (currentNumber, selectedCountryData, fullNumber) => {\n    setFieldValue(\"phoneNumber\", currentNumber.replace(/(\\s|-)/g, \"\"));\n    setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n  };\n\n  const handleChangePhoneNumber = (isValid, value, selectedCountryData, fullNumber) => {\n    if (!isValid) setError(t(\"validation.isNumber\"));else {\n      setError(\"\");\n    }\n    setFieldValue(\"phoneNumber\", value);\n    setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(SharedIntlTelInput, {\n    setFieldTouched: setFieldTouched,\n    value: value,\n    errorPhone: errorPhone,\n    disabled: disabled,\n    country: country,\n    handleSelectFlag: handleSelectFlag,\n    handleChangePhoneNumber: handleChangePhoneNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModulesTelInput, \"WvmHbtuvPijkbnXIwlJcEAaJNU0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ModulesTelInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModulesTelInput\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/InputTel.tsx"],"names":["useEffect","useState","parsePhoneNumber","SharedIntlTelInput","useTranslation","ModulesTelInput","props","t","country","setCountry","setFieldTouched","value","errorPhone","setFieldValue","setError","disabled","phoneNumber","handleSelectFlag","currentNumber","selectedCountryData","fullNumber","replace","handleChangePhoneNumber","isValid"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AAIA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,cAAT,QAA+B,eAA/B;;AAeA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAmB;AAAA;;AAC9C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQH,cAAc,EAA5B,CAF8C,CAG9C;;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC,CAJ8C,CAK9C;;AACA,QAAM;AAAES,IAAAA,eAAF;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA,aAAtC;AAAqDC,IAAAA,QAArD;AAA+DC,IAAAA;AAA/D,MAA4ET,KAAlF;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,WAAW,GAAGd,gBAAgB,CAACS,KAAD,CAApC;AACAF,IAAAA,UAAU,CAACO,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAER,OAAd,CAAV;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMS,gBAAgB,GAAG,CACrBC,aADqB,EAErBC,mBAFqB,EAGrBC,UAHqB,KAIpB;AACDP,IAAAA,aAAa,CAAC,aAAD,EAAgBK,aAAa,CAACG,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAAhB,CAAb;AACAR,IAAAA,aAAa,CAAC,OAAD,EAAUO,UAAU,CAACC,OAAX,CAAmB,SAAnB,EAA8B,EAA9B,CAAV,CAAb;AACH,GAPD;;AASA,QAAMC,uBAAuB,GAAG,CAC5BC,OAD4B,EAE5BZ,KAF4B,EAG5BQ,mBAH4B,EAI5BC,UAJ4B,KAK3B;AACD,QAAI,CAACG,OAAL,EAAcT,QAAQ,CAACP,CAAC,CAAC,qBAAD,CAAF,CAAR,CAAd,KACK;AACDO,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AAEDD,IAAAA,aAAa,CAAC,aAAD,EAAgBF,KAAhB,CAAb;AACAE,IAAAA,aAAa,CAAC,OAAD,EAAUO,UAAU,CAACC,OAAX,CAAmB,SAAnB,EAA8B,EAA9B,CAAV,CAAb;AACH,GAbD;;AAcA,sBACI,QAAC,kBAAD;AACI,IAAA,eAAe,EAAEX,eADrB;AAEI,IAAA,KAAK,EAAEC,KAFX;AAGI,IAAA,UAAU,EAAEC,UAHhB;AAII,IAAA,QAAQ,EAAEG,QAJd;AAKI,IAAA,OAAO,EAAEP,OALb;AAMI,IAAA,gBAAgB,EAAES,gBANtB;AAOI,IAAA,uBAAuB,EAAEK;AAP7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA/CM;;GAAMjB,e;UAEKD,c;;;KAFLC,e","sourcesContent":["import { FormikErrors } from \"formik\";\nimport { useEffect, useState } from \"react\";\nimport parsePhoneNumber from \"libphonenumber-js\";\n\nimport { IEmailForm, IPhone, IUserSetting } from \"@interfaces\";\nimport { CountryData } from \"react-intl-tel-input\";\nimport { SharedIntlTelInput } from \"@components\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface IProps {\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IUserSetting | IEmailForm | IPhone>>;\n    setFieldValue: any;\n    value: string;\n    errorPhone: string;\n    setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n    disabled?: boolean | undefined;\n}\n\nexport const ModulesTelInput = (props: IProps) => {\n    //page hooks\n    const { t } = useTranslation();\n    //page state\n    const [country, setCountry] = useState<string>();\n    //page props\n    const { setFieldTouched, value, errorPhone, setFieldValue, setError, disabled } = props;\n\n    useEffect(() => {\n        const phoneNumber = parsePhoneNumber(value);\n        setCountry(phoneNumber?.country);\n    }, []);\n\n    const handleSelectFlag = (\n        currentNumber: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        setFieldValue(\"phoneNumber\", currentNumber.replace(/(\\s|-)/g, \"\"));\n        setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    const handleChangePhoneNumber = (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        if (!isValid) setError(t(\"validation.isNumber\"));\n        else {\n            setError(\"\");\n        }\n\n        setFieldValue(\"phoneNumber\", value);\n        setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n    return (\n        <SharedIntlTelInput\n            setFieldTouched={setFieldTouched}\n            value={value}\n            errorPhone={errorPhone}\n            disabled={disabled}\n            country={country}\n            handleSelectFlag={handleSelectFlag}\n            handleChangePhoneNumber={handleChangePhoneNumber}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}