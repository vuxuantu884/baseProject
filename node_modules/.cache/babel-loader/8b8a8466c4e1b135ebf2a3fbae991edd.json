{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Verify.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ComponentUserVerify } from \"@components\";\nimport { enumUseSetting, enumValidation, PATH_USER_SETTING, TIME_RESEND } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { verifyApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageVerify = () => {\n  _s();\n\n  //page hooks\n  const {\n    type\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useNotify();\n  const {\n    t\n  } = useTranslation();\n  const history = useHistory(); //page props\n\n  const [otp, setOtp] = useState(\"\");\n  const [timeResend, setTimeResend] = useState(TIME_RESEND); //page variable\n\n  const email = window.sessionStorage.getItem(\"email\") || \"\";\n  const phoneNumber = window.sessionStorage.getItem(\"phoneNumber\") || \"\";\n\n  const handleChangeOtp = otp => {\n    setOtp(otp);\n  };\n\n  const handleVerifyEmail = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await verifyApi.verifyEmailCode({\n        code: otp,\n        email\n      });\n      const message = res.data.message;\n\n      if (message) {\n        success(t(\"message.verify_email.success\"));\n      }\n\n      history.push(PATH_USER_SETTING);\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.verify_email.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleVerifyPhone = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await verifyApi.verifyPhoneCode({\n        code: otp,\n        phoneNumber\n      });\n      const message = res.data.message;\n\n      if (message) {\n        success(t(\"message.verify_phone.success\"));\n      }\n\n      history.push(PATH_USER_SETTING);\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.verify_phone.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleSave = () => {\n    if (otp.length < enumValidation.LENTH_OTP) return;\n\n    if (type === enumUseSetting.EMAIL) {\n      handleVerifyEmail();\n    } else {\n      handleVerifyPhone();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComponentUserVerify, {\n    otp: otp,\n    handleChangeOtp: handleChangeOtp,\n    type: type,\n    handleSave: handleSave,\n    timeResend: timeResend\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageVerify, \"X6v6ewEmAszxZGq/nbdUrUszFcE=\", false, function () {\n  return [useParams, useDispatch, useNotify, useTranslation, useHistory];\n});\n\n_c = PageVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageVerify\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Verify.tsx"],"names":["useHistory","useParams","useState","useDispatch","ComponentUserVerify","enumUseSetting","enumValidation","PATH_USER_SETTING","TIME_RESEND","setLoading","verifyApi","useNotify","useTranslation","PageVerify","type","dispatch","error","success","t","history","otp","setOtp","timeResend","setTimeResend","email","window","sessionStorage","getItem","phoneNumber","handleChangeOtp","handleVerifyEmail","res","verifyEmailCode","code","message","data","push","errors","response","handleVerifyPhone","verifyPhoneCode","handleSave","length","LENTH_OTP","EMAIL"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ComponentUserVerify } from \"@components\";\nimport { enumUseSetting, enumValidation, PATH_USER_SETTING, TIME_RESEND } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { verifyApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const PageVerify = () => {\n    //page hooks\n    const { type } = useParams<{ type: enumUseSetting }>();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const { t } = useTranslation();\n    const history = useHistory();\n    //page props\n    const [otp, setOtp] = useState<string>(\"\");\n    const [timeResend, setTimeResend] = useState<number>(TIME_RESEND);\n    //page variable\n    const email = window.sessionStorage.getItem(\"email\") || \"\";\n    const phoneNumber = window.sessionStorage.getItem(\"phoneNumber\") || \"\";\n\n    const handleChangeOtp = (otp: string) => {\n        setOtp(otp);\n    };\n\n    const handleVerifyEmail = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await verifyApi.verifyEmailCode({\n                code: otp,\n                email,\n            });\n            const message = res.data.message;\n            if (message) {\n                success(t(\"message.verify_email.success\"));\n            }\n            history.push(PATH_USER_SETTING);\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.verify_email.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleVerifyPhone = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await verifyApi.verifyPhoneCode({\n                code: otp,\n                phoneNumber,\n            });\n            const message = res.data.message;\n            if (message) {\n                success(t(\"message.verify_phone.success\"));\n            }\n            history.push(PATH_USER_SETTING);\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.verify_phone.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleSave = () => {\n        if (otp.length < enumValidation.LENTH_OTP) return;\n        if (type === enumUseSetting.EMAIL) {\n            handleVerifyEmail();\n        } else {\n            handleVerifyPhone();\n        }\n    };\n\n    return (\n        <ComponentUserVerify\n            otp={otp}\n            handleChangeOtp={handleChangeOtp}\n            type={type}\n            handleSave={handleSave}\n            timeResend={timeResend}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}