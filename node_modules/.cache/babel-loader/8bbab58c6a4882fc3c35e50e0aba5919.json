{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/AppRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, useHistory, useLocation } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LayoutApp } from \"@layouts\";\nimport { authRoutes, COUPON, enumExternalMethod, enumTypes, normalRoutes, PATH_404, PATH_HOME, PATH_SIGN_IN_EMAIL, PATH_SIGN_UP_EMAIL_FROM, PATH_SIGN_UP_SOCIAL_FROM } from \"@configs\";\nimport { selectAuth, selectMerchant, setInfo } from \"@redux\";\nimport { authApi } from \"@api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ComponentAppRoute = props => {\n  _s();\n\n  //page props\n  const {\n    path,\n    exact\n  } = props; //page hook\n\n  const {\n    pathname\n  } = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch(); //redux state\n\n  const {\n    auth,\n    externalLogin,\n    isSignUp,\n    externalType\n  } = useSelector(selectAuth);\n  const {\n    _id\n  } = useSelector(selectMerchant); //page variable\n  //WHAT: check user login\n\n  const token = auth === null || auth === void 0 ? void 0 : auth.accessToken;\n  const Component = props.component;\n  const Layout = LayoutApp; //WHAT: check valid route\n\n  useEffect(() => {\n    //What: check merchantID\n    if (!_id) {\n      history.push(PATH_404);\n    } //WHAT: check normal path\n\n\n    const isNormalRoute = pathname === PATH_HOME ? true : normalRoutes.some(item => {\n      if (item === PATH_HOME) {\n        return false;\n      }\n\n      return pathname.includes(item);\n    }); //WHAT: check a uth path\n\n    const isAuthRoute = authRoutes.some(item => pathname.includes(item));\n\n    if (token) {\n      // const userPermissions = auth.userPermissions;\n      // || (props.permission && !userPermissions?.includes(props.permission))\n      if ((externalType === null || externalType === void 0 ? void 0 : externalType.type) === enumTypes.COUPON && isSignUp) {\n        history.push(COUPON + \"/\" + externalType.id);\n      } else if (externalLogin === enumExternalMethod.EMAIL_NOT_SOCIAL && isSignUp) {\n        history.push(PATH_SIGN_UP_EMAIL_FROM);\n      } else if ((externalLogin === enumExternalMethod.EMAIL || externalLogin === enumExternalMethod.FACEBOOK || externalLogin === enumExternalMethod.GOOGLE) && isSignUp) {\n        history.push(PATH_SIGN_UP_SOCIAL_FROM);\n      } else if (isAuthRoute) {\n        history.push(PATH_HOME);\n      }\n    } else if (isNormalRoute) {\n      history.push(PATH_SIGN_IN_EMAIL);\n    }\n  }, [pathname, auth]);\n  useEffect(() => {\n    (async () => {\n      const res = await authApi.getInfo();\n      dispatch(setInfo(res.data));\n    })();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    exact: exact,\n    render: () => /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComponentAppRoute, \"V1Jo0KH6EE3XUeoNPpuh2ZDj8Go=\", false, function () {\n  return [useLocation, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = ComponentAppRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentAppRoute\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/AppRoute.tsx"],"names":["Route","useHistory","useLocation","useEffect","useDispatch","useSelector","LayoutApp","authRoutes","COUPON","enumExternalMethod","enumTypes","normalRoutes","PATH_404","PATH_HOME","PATH_SIGN_IN_EMAIL","PATH_SIGN_UP_EMAIL_FROM","PATH_SIGN_UP_SOCIAL_FROM","selectAuth","selectMerchant","setInfo","authApi","ComponentAppRoute","props","path","exact","pathname","history","dispatch","auth","externalLogin","isSignUp","externalType","_id","token","accessToken","Component","component","Layout","push","isNormalRoute","some","item","includes","isAuthRoute","type","id","EMAIL_NOT_SOCIAL","EMAIL","FACEBOOK","GOOGLE","res","getInfo","data"],"mappings":"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","sourcesContent":["import { Route, useHistory, useLocation } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { IRoute } from \"@interfaces\";\nimport { LayoutApp } from \"@layouts\";\nimport {\n    authRoutes,\n    COUPON,\n    enumExternalMethod,\n    enumTypes,\n    normalRoutes,\n    PATH_404,\n    PATH_HOME,\n    PATH_SIGN_IN_EMAIL,\n    PATH_SIGN_UP_EMAIL_FROM,\n    PATH_SIGN_UP_SOCIAL_FROM,\n} from \"@configs\";\nimport { selectAuth, selectMerchant, setInfo } from \"@redux\";\nimport { authApi } from \"@api\";\n\nexport const ComponentAppRoute = (props: IRoute) => {\n    //page props\n    const { path, exact } = props;\n    //page hook\n    const { pathname } = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    //redux state\n    const { auth, externalLogin, isSignUp, externalType } = useSelector(selectAuth);\n    const { _id } = useSelector(selectMerchant);\n\n    //page variable\n    //WHAT: check user login\n    const token = auth?.accessToken;\n    const Component = props.component;\n    const Layout = LayoutApp;\n\n    //WHAT: check valid route\n    useEffect(() => {\n        //What: check merchantID\n        if (!_id) {\n            history.push(PATH_404);\n        }\n\n        //WHAT: check normal path\n        const isNormalRoute =\n            pathname === PATH_HOME\n                ? true\n                : normalRoutes.some((item: string) => {\n                      if (item === PATH_HOME) {\n                          return false;\n                      }\n                      return pathname.includes(item);\n                  });\n\n        //WHAT: check a uth path\n        const isAuthRoute = authRoutes.some((item: string) => pathname.includes(item));\n        if (token) {\n            // const userPermissions = auth.userPermissions;\n            // || (props.permission && !userPermissions?.includes(props.permission))\n            if (externalType?.type === enumTypes.COUPON && isSignUp) {\n                history.push(COUPON + \"/\" + externalType.id);\n            } else if (externalLogin === enumExternalMethod.EMAIL_NOT_SOCIAL && isSignUp) {\n                history.push(PATH_SIGN_UP_EMAIL_FROM);\n            } else if (\n                (externalLogin === enumExternalMethod.EMAIL ||\n                    externalLogin === enumExternalMethod.FACEBOOK ||\n                    externalLogin === enumExternalMethod.GOOGLE) &&\n                isSignUp\n            ) {\n                history.push(PATH_SIGN_UP_SOCIAL_FROM);\n            } else if (isAuthRoute) {\n                history.push(PATH_HOME);\n            }\n        } else if (isNormalRoute) {\n            history.push(PATH_SIGN_IN_EMAIL);\n        }\n    }, [pathname, auth]);\n\n    useEffect(() => {\n        (async () => {\n            const res = await authApi.getInfo();\n            dispatch(setInfo(res.data));\n        })();\n    }, [token]);\n\n    return (\n        <Route\n            path={path}\n            exact={exact}\n            render={() => (\n                <Layout>\n                    <Component />\n                </Layout>\n            )}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}