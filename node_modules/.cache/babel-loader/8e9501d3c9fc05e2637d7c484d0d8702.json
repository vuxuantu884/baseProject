{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/AppRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Route, useLocation } from \"react-router\";\nimport { LayoutApp } from \"@layouts\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ComponentAppRoute = props => {\n  _s();\n\n  //page props\n  const {\n    path,\n    exact\n  } = props; //page hook\n\n  const {\n    pathname\n  } = useLocation(); //page variable\n\n  const Component = props.component;\n  const Layout = LayoutApp; //WHAT: check valid route\n\n  useEffect(() => {\n    //WHAT: check normal path\n    const isNormalRoute = pathname === PATH_HOME ? true : normalRoutes.some(item => {\n      if (item === PATH_HOME) {\n        return false;\n      }\n\n      return pathname.includes(item);\n    }); //WHAT: check a uth path\n\n    const isAuthRoute = authRoutes.some(item => pathname.includes(item));\n\n    if (token) {\n      // const userPermissions = auth.userPermissions;\n      // || (props.permission && !userPermissions?.includes(props.permission))\n      if (isAuthRoute) {\n        history.push(PATH_HOME);\n      }\n    } else if (isNormalRoute && !pathname.includes(PATH_CREATE_PASSWORD)) {\n      history.push(PATH_LOGIN);\n    }\n  }, [pathname, auth]);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    exact: exact,\n    render: () => /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComponentAppRoute, \"+8VPq4+XDMjo/kjL3WLkbwU2Amg=\", false, function () {\n  return [useLocation];\n});\n\n_c = ComponentAppRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComponentAppRoute\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/AppRoute.tsx"],"names":["Route","useLocation","LayoutApp","useEffect","ComponentAppRoute","props","path","exact","pathname","Component","component","Layout","isNormalRoute","PATH_HOME","normalRoutes","some","item","includes","isAuthRoute","authRoutes","token","history","push","PATH_CREATE_PASSWORD","PATH_LOGIN","auth"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,WAAhB,QAAmC,cAAnC;AAGA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAmB;AAAA;;AAChD;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB,CAFgD,CAGhD;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAeP,WAAW,EAAhC,CAJgD,CAKhD;;AACA,QAAMQ,SAAS,GAAGJ,KAAK,CAACK,SAAxB;AACA,QAAMC,MAAM,GAAGT,SAAf,CAPgD,CAShD;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMS,aAAa,GACfJ,QAAQ,KAAKK,SAAb,GACM,IADN,GAEMC,YAAY,CAACC,IAAb,CAAmBC,IAAD,IAAkB;AAChC,UAAIA,IAAI,KAAKH,SAAb,EAAwB;AACpB,eAAO,KAAP;AACH;;AACD,aAAOL,QAAQ,CAACS,QAAT,CAAkBD,IAAlB,CAAP;AACH,KALD,CAHV,CAFY,CAYZ;;AACA,UAAME,WAAW,GAAGC,UAAU,CAACJ,IAAX,CAAiBC,IAAD,IAAkBR,QAAQ,CAACS,QAAT,CAAkBD,IAAlB,CAAlC,CAApB;;AACA,QAAII,KAAJ,EAAW;AACP;AACA;AACA,UAAIF,WAAJ,EAAiB;AACbG,QAAAA,OAAO,CAACC,IAAR,CAAaT,SAAb;AACH;AACJ,KAND,MAMO,IAAID,aAAa,IAAI,CAACJ,QAAQ,CAACS,QAAT,CAAkBM,oBAAlB,CAAtB,EAA+D;AAClEF,MAAAA,OAAO,CAACC,IAAR,CAAaE,UAAb;AACH;AACJ,GAvBQ,EAuBN,CAAChB,QAAD,EAAWiB,IAAX,CAvBM,CAAT;AAwBA,sBACI,QAAC,KAAD;AACI,IAAA,IAAI,EAAEnB,IADV;AAEI,IAAA,KAAK,EAAEC,KAFX;AAGI,IAAA,MAAM,EAAE,mBACJ,QAAC,MAAD;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA7CM;;GAAMH,iB;UAIYH,W;;;KAJZG,iB","sourcesContent":["import { Route, useLocation } from \"react-router\";\n\nimport { IRoute } from \"@interfaces\";\nimport { LayoutApp } from \"@layouts\";\nimport { useEffect } from \"react\";\n\nexport const ComponentAppRoute = (props: IRoute) => {\n    //page props\n    const { path, exact } = props;\n    //page hook\n    const { pathname } = useLocation();\n    //page variable\n    const Component = props.component;\n    const Layout = LayoutApp;\n\n    //WHAT: check valid route\n    useEffect(() => {\n        //WHAT: check normal path\n        const isNormalRoute =\n            pathname === PATH_HOME\n                ? true\n                : normalRoutes.some((item: string) => {\n                      if (item === PATH_HOME) {\n                          return false;\n                      }\n                      return pathname.includes(item);\n                  });\n\n        //WHAT: check a uth path\n        const isAuthRoute = authRoutes.some((item: string) => pathname.includes(item));\n        if (token) {\n            // const userPermissions = auth.userPermissions;\n            // || (props.permission && !userPermissions?.includes(props.permission))\n            if (isAuthRoute) {\n                history.push(PATH_HOME);\n            }\n        } else if (isNormalRoute && !pathname.includes(PATH_CREATE_PASSWORD)) {\n            history.push(PATH_LOGIN);\n        }\n    }, [pathname, auth]);\n    return (\n        <Route\n            path={path}\n            exact={exact}\n            render={() => (\n                <Layout>\n                    <Component />\n                </Layout>\n            )}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}