{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Reward.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { rewardApi } from \"@api\";\nimport { ComponentRewardList } from \"@components\";\nimport { setLoading } from \"@redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModulesReward = () => {\n  _s();\n\n  const dispatch = useDispatch(); //page state\n\n  const [reward, setReward] = useState([]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await rewardApi.getListReward();\n      const data = res.data.docs;\n      console.log(data);\n      setReward(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleAddCount = () => {\n    if (count < (data.limit || 1)) {\n      setCount(count + 1);\n    }\n  };\n\n  const handleMinusCount = () => {\n    if (count > 1) {\n      setCount(count - 1);\n    }\n  };\n\n  const handleCalculatePoint = () => {\n    if (data.point) return data.point * count;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reward && /*#__PURE__*/_jsxDEV(ComponentRewardList, {\n      handleAddCount: handleAddCount,\n      handleMinusCount: handleMinusCount,\n      handleCalculatePoint: handleCalculatePoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModulesReward, \"MwY14du8YzzO2/+G+EExnYgvQCU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModulesReward;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModulesReward\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Reward.tsx"],"names":["useEffect","useState","useDispatch","rewardApi","ComponentRewardList","setLoading","ModulesReward","dispatch","reward","setReward","res","getListReward","data","docs","console","log","handleAddCount","count","limit","setCount","handleMinusCount","handleCalculatePoint","point"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,mBAAT,QAAoC,aAApC;AAEA,SAASC,UAAT,QAA2B,QAA3B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAD+B,CAE/B;;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAgB,EAAhB,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTO,MAAAA,QAAQ,CAACF,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMK,GAAG,GAAG,MAAMP,SAAS,CAACQ,aAAV,EAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAH,MAAAA,SAAS,CAACG,IAAD,CAAT;AACAL,MAAAA,QAAQ,CAACF,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAUA,QAAMW,cAAc,GAAG,MAAM;AACzB,QAAIC,KAAK,IAAIL,IAAI,CAACM,KAAL,IAAc,CAAlB,CAAT,EAA+B;AAC3BC,MAAAA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAR;AACH;AACJ,GAJD;;AAKA,QAAMG,gBAAgB,GAAG,MAAM;AAC3B,QAAIH,KAAK,GAAG,CAAZ,EAAe;AACXE,MAAAA,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMI,oBAAoB,GAAG,MAAM;AAC/B,QAAIT,IAAI,CAACU,KAAT,EAAgB,OAAOV,IAAI,CAACU,KAAL,GAAaL,KAApB;AACnB,GAFD;;AAGA,sBACI;AAAA,cACKT,MAAM,iBACH,QAAC,mBAAD;AACI,MAAA,cAAc,EAAEQ,cADpB;AAEI,MAAA,gBAAgB,EAAEI,gBAFtB;AAGI,MAAA,oBAAoB,EAAEC;AAH1B;AAAA;AAAA;AAAA;AAAA;AAFR,mBADJ;AAWH,CAxCM;;GAAMf,a;UACQJ,W;;;KADRI,a","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { rewardApi } from \"@api\";\nimport { ComponentRewardList } from \"@components\";\nimport { ICouponList } from \"@interfaces\";\nimport { setLoading } from \"@redux\";\n\nexport const ModulesReward = () => {\n    const dispatch = useDispatch();\n    //page state\n    const [reward, setReward] = useState<ICouponList[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await rewardApi.getListReward();\n            const data = res.data.docs;\n            console.log(data);\n            setReward(data);\n            dispatch(setLoading(false));\n        })();\n    }, []);\n    const handleAddCount = () => {\n        if (count < (data.limit || 1)) {\n            setCount(count + 1);\n        }\n    };\n    const handleMinusCount = () => {\n        if (count > 1) {\n            setCount(count - 1);\n        }\n    };\n\n    const handleCalculatePoint = () => {\n        if (data.point) return data.point * count;\n    };\n    return (\n        <>\n            {reward && (\n                <ComponentRewardList\n                    handleAddCount={handleAddCount}\n                    handleMinusCount={handleMinusCount}\n                    handleCalculatePoint={handleCalculatePoint}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}