{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Main.tsx\",\n    _s = $RefreshSig$();\n\nimport { Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ComponentAppRoute } from \"@components\";\nimport { enumMedia, routes } from \"@configs\";\nimport { setMainColor, setMerchant } from \"@redux\";\nimport { ComponentToast } from \"src/Components/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleMain = () => {\n  _s();\n\n  // page hooks\n  const dispatch = useDispatch();\n  const merchant = {\n    name: \"Gozzy Fruits\",\n    themeColor: \"#862929\",\n    subColor: \"#933131\",\n    logoUrl: \"/logo192.png\",\n    signUpMethod: [enumMedia.FACEBOOK, enumMedia.GOOGLE]\n  };\n  useEffect(() => {\n    dispatch(setMerchant(merchant));\n    dispatch(setMainColor(merchant.themeColor));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map((e, key) => /*#__PURE__*/_jsxDEV(ComponentAppRoute, { ...e\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ComponentToast, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModuleMain, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModuleMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleMain\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Main.tsx"],"names":["Switch","BrowserRouter","useEffect","useDispatch","ComponentAppRoute","enumMedia","routes","setMainColor","setMerchant","ComponentToast","ModuleMain","dispatch","merchant","name","themeColor","subColor","logoUrl","signUpMethod","FACEBOOK","GOOGLE","map","e","key"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,UAAlC;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;AACA,SAASC,cAAT,QAA+B,sBAA/B;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,QAAmB,GAAG;AACxBC,IAAAA,IAAI,EAAE,cADkB;AAExBC,IAAAA,UAAU,EAAE,SAFY;AAGxBC,IAAAA,QAAQ,EAAE,SAHc;AAIxBC,IAAAA,OAAO,EAAE,cAJe;AAKxBC,IAAAA,YAAY,EAAE,CAACZ,SAAS,CAACa,QAAX,EAAqBb,SAAS,CAACc,MAA/B;AALU,GAA5B;AAOAjB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACH,WAAW,CAACI,QAAD,CAAZ,CAAR;AACAD,IAAAA,QAAQ,CAACJ,YAAY,CAACK,QAAQ,CAACE,UAAV,CAAb,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI,QAAC,aAAD;AAAA,4BACI,QAAC,MAAD;AAAA,gBACKR,MAAM,CAACc,GAAP,CAAW,CAACC,CAAD,EAAYC,GAAZ,kBACR,QAAC,iBAAD,OAAiCD;AAAjC,SAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1BM;;GAAMZ,U;UAEQP,W;;;KAFRO,U","sourcesContent":["import { Switch } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ComponentAppRoute } from \"@components\";\nimport { enumMedia, routes } from \"@configs\";\nimport { IMerchant, IRoute } from \"@interfaces\";\nimport { setMainColor, setMerchant } from \"@redux\";\nimport { ComponentToast } from \"src/Components/Toast\";\n\nexport const ModuleMain = () => {\n    // page hooks\n    const dispatch = useDispatch();\n\n    const merchant: IMerchant = {\n        name: \"Gozzy Fruits\",\n        themeColor: \"#862929\",\n        subColor: \"#933131\",\n        logoUrl: \"/logo192.png\",\n        signUpMethod: [enumMedia.FACEBOOK, enumMedia.GOOGLE],\n    };\n    useEffect(() => {\n        dispatch(setMerchant(merchant));\n        dispatch(setMainColor(merchant.themeColor));\n    }, []);\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                {routes.map((e: IRoute, key) => (\n                    <ComponentAppRoute key={key} {...e} />\n                ))}\n            </Switch>\n            <ComponentToast />\n        </BrowserRouter>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}