{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/History.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"@redux\";\nimport { useEffect, useState } from \"react\";\nimport { historyApi } from \"@api\";\nimport { enumTypes } from \"@configs\";\nimport { ComponentHistoryList } from \"@components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModuleHistory = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch(); //page state\n\n  const [histories, setHistories] = useState();\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await historyApi.getListHistory();\n      const data = res.data.docs.map(item => {\n        if (item.type === enumTypes.REWARD || item.type === enumTypes.BENEFIT) {\n          return {\n            idCart: item._id,\n            ...item.rewrad\n          };\n        } else if (item.type === enumTypes.COUPON) {\n          return {\n            idCart: item._id,\n            ...item.qrtable\n          };\n        }\n      });\n      console.log(res);\n      setHistories(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: histories && /*#__PURE__*/_jsxDEV(ComponentHistoryList, {\n      data: histories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 28\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModuleHistory, \"5ulXNZ5uitaeIIvncVTOuAAXnao=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModuleHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleHistory\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/History.tsx"],"names":["useDispatch","setLoading","useEffect","useState","historyApi","enumTypes","ComponentHistoryList","ModuleHistory","dispatch","histories","setHistories","res","getListHistory","data","docs","map","item","type","REWARD","BENEFIT","idCart","_id","rewrad","COUPON","qrtable","console","log"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,oBAAT,QAAqC,aAArC;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAF+B,CAG/B;;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTM,MAAAA,QAAQ,CAACP,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMU,GAAG,GAAG,MAAMP,UAAU,CAACQ,cAAX,EAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAe;AAC1C,YAAIA,IAAI,CAACC,IAAL,KAAcZ,SAAS,CAACa,MAAxB,IAAkCF,IAAI,CAACC,IAAL,KAAcZ,SAAS,CAACc,OAA9D,EAAuE;AACnE,iBAAO;AACHC,YAAAA,MAAM,EAAEJ,IAAI,CAACK,GADV;AAEH,eAAGL,IAAI,CAACM;AAFL,WAAP;AAIH,SALD,MAKO,IAAIN,IAAI,CAACC,IAAL,KAAcZ,SAAS,CAACkB,MAA5B,EAAoC;AACvC,iBAAO;AAAEH,YAAAA,MAAM,EAAEJ,IAAI,CAACK,GAAf;AAAoB,eAAGL,IAAI,CAACQ;AAA5B,WAAP;AACH;AACJ,OATY,CAAb;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAD,MAAAA,YAAY,CAACG,IAAD,CAAZ;AACAL,MAAAA,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAhBD;AAiBH,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,sBAAO;AAAA,cAAGQ,SAAS,iBAAI,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAhB,mBAAP;AACH,CAzBM;;GAAMF,a;UAEQP,W;;;KAFRO,a","sourcesContent":["import { useDispatch } from \"react-redux\";\n\nimport { setLoading } from \"@redux\";\nimport { useEffect, useState } from \"react\";\nimport { historyApi } from \"@api\";\nimport { IBenefit, ICoupon, IReward } from \"@interfaces\";\nimport { enumTypes } from \"@configs\";\nimport { ComponentHistoryList } from \"@components\";\n\nexport const ModuleHistory = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    //page state\n    const [histories, setHistories] = useState<(IBenefit | IReward | ICoupon)[]>();\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await historyApi.getListHistory();\n            const data = res.data.docs.map((item: any) => {\n                if (item.type === enumTypes.REWARD || item.type === enumTypes.BENEFIT) {\n                    return {\n                        idCart: item._id,\n                        ...item.rewrad,\n                    };\n                } else if (item.type === enumTypes.COUPON) {\n                    return { idCart: item._id, ...item.qrtable };\n                }\n            }) as (IBenefit | IReward | ICoupon)[];\n            console.log(res);\n            setHistories(data);\n            dispatch(setLoading(false));\n        })();\n    }, []);\n    return <>{histories && <ComponentHistoryList data={histories} />}</>;\n};\n"]},"metadata":{},"sourceType":"module"}