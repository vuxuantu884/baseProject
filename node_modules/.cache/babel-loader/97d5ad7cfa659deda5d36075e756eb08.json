{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mobile: false,\n  boxed: false,\n  darkSidebar: false,\n  sidebarPopup: false,\n  sidebarIcons: false,\n  collapsed: false,\n  weakColor: false,\n  optionDrawer: false,\n  mobileDrawer: false,\n  fullscreen: false,\n  loading: true\n};\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState: initialState,\n  reducers: {\n    resetApp: () => {\n      return initialState;\n    },\n    setMobile: (state, action) => {\n      state.mobile = action.payload;\n    },\n    setBoxed: (state, action) => {\n      state.boxed = action.payload;\n    },\n    setDarkSidebar: (state, action) => {\n      state.darkSidebar = action.payload;\n    },\n    setSidebarPopup: (state, action) => {\n      state.sidebarPopup = action.payload;\n    },\n    setSidebarIcons: (state, action) => {\n      state.sidebarIcons = action.payload;\n    },\n    setCollapsed: (state, action) => {\n      state.collapsed = action.payload;\n    },\n    setWeakColor: (state, action) => {\n      state.weakColor = action.payload;\n    },\n    setOptionDrawer: (state, action) => {\n      state.optionDrawer = action.payload;\n    },\n    setMobileDrawer: (state, action) => {\n      state.mobileDrawer = action.payload;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setFullscreen: state => {\n      const element = document.querySelector(\"#root\"); //@ts-ignore\n\n      const isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false; //@ts-ignore\n\n      element.requestFullScreen = //@ts-ignore\n      element.requestFullScreen || //@ts-ignore\n      element.webkitRequestFullScreen || //@ts-ignore\n      element.mozRequestFullScreen || function () {\n        return false;\n      }; //@ts-ignore\n\n\n      document.cancelFullScreen = //@ts-ignore\n      document.cancelFullScreen || //@ts-ignore\n      document.webkitCancelFullScreen || //@ts-ignore\n      document.mozCancelFullScreen || function () {\n        return false;\n      }; //@ts-ignore\n\n\n      isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n      state.fullscreen = !isFullscreen;\n    }\n  }\n});\nexport const {\n  resetApp,\n  setMobile,\n  setBoxed,\n  setDarkSidebar,\n  setCollapsed,\n  setFullscreen,\n  setMobileDrawer,\n  setOptionDrawer,\n  setSidebarIcons,\n  setSidebarPopup,\n  setWeakColor,\n  setLoading\n} = appSlice.actions;\nexport const selectApp = state => state.app;\nexport default appSlice.reducer;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Redux/Slices/app.ts"],"names":["createSlice","initialState","mobile","boxed","darkSidebar","sidebarPopup","sidebarIcons","collapsed","weakColor","optionDrawer","mobileDrawer","fullscreen","loading","appSlice","name","reducers","resetApp","setMobile","state","action","payload","setBoxed","setDarkSidebar","setSidebarPopup","setSidebarIcons","setCollapsed","setWeakColor","setOptionDrawer","setMobileDrawer","setLoading","setFullscreen","element","document","querySelector","isFullscreen","webkitIsFullScreen","mozFullScreen","requestFullScreen","webkitRequestFullScreen","mozRequestFullScreen","cancelFullScreen","webkitCancelFullScreen","mozCancelFullScreen","actions","selectApp","app","reducer"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \".\";\n\ninterface IState {\n    mobile: boolean;\n    boxed: boolean;\n    darkSidebar: boolean;\n    sidebarPopup: boolean;\n    sidebarIcons: boolean;\n    collapsed: boolean;\n    weakColor: boolean;\n    optionDrawer: boolean;\n    mobileDrawer: boolean;\n    fullscreen: boolean;\n    loading:boolean;\n}\n\nconst initialState: IState = {\n    mobile: false,\n    boxed: false,\n    darkSidebar: false,\n    sidebarPopup: false,\n    sidebarIcons: false,\n    collapsed: false,\n    weakColor: false,\n    optionDrawer: false,\n    mobileDrawer: false,\n    fullscreen: false,\n    loading:true,\n};\n\nconst appSlice = createSlice({\n    name: \"app\",\n    initialState: initialState,\n    reducers: {\n        resetApp: () => {\n            return initialState;\n        },\n        setMobile: (state, action: PayloadAction<boolean>) => {\n            state.mobile = action.payload;\n        },\n        setBoxed: (state, action: PayloadAction<boolean>) => {\n            state.boxed = action.payload;\n        },\n        setDarkSidebar: (state, action: PayloadAction<boolean>) => {\n            state.darkSidebar = action.payload;\n        },\n        setSidebarPopup: (state, action: PayloadAction<boolean>) => {\n            state.sidebarPopup = action.payload;\n        },\n        setSidebarIcons: (state, action: PayloadAction<boolean>) => {\n            state.sidebarIcons = action.payload;\n        },\n        setCollapsed: (state, action: PayloadAction<boolean>) => {\n            state.collapsed = action.payload;\n        },\n        setWeakColor: (state, action: PayloadAction<boolean>) => {\n            state.weakColor = action.payload;\n        },\n        setOptionDrawer: (state, action: PayloadAction<boolean>) => {\n            state.optionDrawer = action.payload;\n        },\n        setMobileDrawer: (state, action: PayloadAction<boolean>) => {\n            state.mobileDrawer = action.payload;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.loading = action.payload;\n        },\n        setFullscreen: (state) => {\n            const element = document.querySelector(\"#root\");\n            //@ts-ignore\n            const isFullscreen = document.webkitIsFullScreen || document.mozFullScreen || false;\n            //@ts-ignore\n            element.requestFullScreen =\n                //@ts-ignore\n                element.requestFullScreen ||\n                //@ts-ignore\n                element.webkitRequestFullScreen ||\n                //@ts-ignore\n                element.mozRequestFullScreen ||\n                function () {\n                    return false;\n                };\n            //@ts-ignore\n            document.cancelFullScreen =\n                //@ts-ignore\n                document.cancelFullScreen ||\n                //@ts-ignore\n                document.webkitCancelFullScreen ||\n                //@ts-ignore\n                document.mozCancelFullScreen ||\n                function () {\n                    return false;\n                };\n            //@ts-ignore\n            isFullscreen ? document.cancelFullScreen() : element.requestFullScreen();\n\n            state.fullscreen = !isFullscreen;\n        },\n    },\n});\n\nexport const {\n    resetApp,\n    setMobile,\n    setBoxed,\n    setDarkSidebar,\n    setCollapsed,\n    setFullscreen,\n    setMobileDrawer,\n    setOptionDrawer,\n    setSidebarIcons,\n    setSidebarPopup,\n    setWeakColor,\n    setLoading\n} = appSlice.actions;\n\nexport const selectApp = (state: RootState) => state.app;\n\nexport default appSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}