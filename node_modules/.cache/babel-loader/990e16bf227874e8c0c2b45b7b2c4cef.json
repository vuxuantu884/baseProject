{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Verify.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { ComponentUserVerify } from \"@components\";\nimport { enumValidation } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { verifyApi } from \"@api\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageVerify = () => {\n  _s();\n\n  //page hooks\n  const {\n    type\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify(); //page props\n\n  const [otp, setOtp] = useState(\"\");\n\n  const handleChangeOtp = otp => {\n    setOtp(otp);\n  };\n\n  const handleSave = async () => {\n    if (otp.length < enumValidation.LENTH_OTP) return;\n\n    try {\n      dispatch(setLoading(true));\n      const res = await verifyApi.verifyEmailCode(otp);\n      console.log(res);\n    } catch (errors) {\n      const {\n        message\n      } = errors.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.update.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComponentUserVerify, {\n    otp: otp,\n    handleChangeOtp: handleChangeOtp,\n    type: type,\n    handleSave: handleSave\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageVerify, \"k+YOupTR/kQgXs5uBsFCbPplUZ4=\", false, function () {\n  return [useParams, useDispatch, useNotify];\n});\n\n_c = PageVerify;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageVerify\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Verify.tsx"],"names":["useParams","useState","useDispatch","ComponentUserVerify","enumValidation","setLoading","verifyApi","useNotify","PageVerify","type","dispatch","error","otp","setOtp","handleChangeOtp","handleSave","length","LENTH_OTP","res","verifyEmailCode","console","log","errors","message","response","data","t"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,mBAAT,QAAoC,aAApC;AACA,SAAyBC,cAAzB,QAA+C,UAA/C;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,SAAT,QAA0B,MAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWT,SAAS,EAA1B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAYJ,SAAS,EAA3B,CAJ4B,CAM5B;;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAS,EAAT,CAA9B;;AAEA,QAAMa,eAAe,GAAIF,GAAD,IAAiB;AACrCC,IAAAA,MAAM,CAACD,GAAD,CAAN;AACH,GAFD;;AAIA,QAAMG,UAAU,GAAG,YAAY;AAC3B,QAAIH,GAAG,CAACI,MAAJ,GAAaZ,cAAc,CAACa,SAAhC,EAA2C;;AAE3C,QAAI;AACAP,MAAAA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMa,GAAG,GAAG,MAAMZ,SAAS,CAACa,eAAV,CAA0BP,GAA1B,CAAlB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KAJD,CAIE,OAAOI,MAAP,EAAoB;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAAM,CAACE,QAAP,CAAgBC,IAApC;;AACA,UAAIF,OAAJ,EAAa;AACTZ,QAAAA,KAAK,CAACY,OAAD,CAAL;AACH,OAFD,MAEO;AACHZ,QAAAA,KAAK,CAACe,CAAC,CAAC,qBAAD,CAAF,CAAL;AACH;AACJ,KAXD,SAWU;AACNhB,MAAAA,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAjBD;;AAmBA,sBACI,QAAC,mBAAD;AACI,IAAA,GAAG,EAAEO,GADT;AAEI,IAAA,eAAe,EAAEE,eAFrB;AAGI,IAAA,IAAI,EAAEL,IAHV;AAII,IAAA,UAAU,EAAEM;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxCM;;GAAMP,U;UAEQR,S,EACAE,W,EACCK,S;;;KAJTC,U","sourcesContent":["import { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ComponentUserVerify } from \"@components\";\nimport { enumUseSetting, enumValidation } from \"@configs\";\nimport { setLoading } from \"@redux\";\nimport { verifyApi } from \"@api\";\nimport { useNotify } from \"@utils\";\n\nexport const PageVerify = () => {\n    //page hooks\n    const { type } = useParams<{ type: enumUseSetting }>();\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n\n    //page props\n    const [otp, setOtp] = useState<string>(\"\");\n\n    const handleChangeOtp = (otp: string) => {\n        setOtp(otp);\n    };\n\n    const handleSave = async () => {\n        if (otp.length < enumValidation.LENTH_OTP) return;\n\n        try {\n            dispatch(setLoading(true));\n            const res = await verifyApi.verifyEmailCode(otp);\n            console.log(res);\n        } catch (errors: any) {\n            const { message } = errors.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.update.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    return (\n        <ComponentUserVerify\n            otp={otp}\n            handleChangeOtp={handleChangeOtp}\n            type={type}\n            handleSave={handleSave}\n        />\n    );\n};\n"]},"metadata":{},"sourceType":"module"}