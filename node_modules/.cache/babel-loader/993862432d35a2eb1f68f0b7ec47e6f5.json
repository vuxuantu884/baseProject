{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail, ComponentPopUpConfirm } from \"@components\";\nimport { enumStatus, enumTypes, enumValidation, PATH_HOME } from \"@configs\";\nimport { resetConfirm, selectAuth, selectMerchant, setLoading, setToggleConfirm } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageBenefit = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    error,\n    success\n  } = useNotify();\n  const history = useHistory(); //redux state\n\n  const {\n    membershipTiers\n  } = useSelector(selectMerchant);\n  const {\n    showConfirm\n  } = useSelector(selectAuth); //page state\n\n  const [benefit, setBenefit] = useState();\n  const [dataRanks, setDataRanks] = useState([]);\n  const [currentImage, setCurrentImage] = useState(enumValidation.NUMBER_ONE); //page variable\n\n  const levelIds = benefit === null || benefit === void 0 ? void 0 : benefit.levelIds;\n  useEffect(() => {\n    if ((levelIds === null || levelIds === void 0 ? void 0 : levelIds.length) === 0) {\n      setDataRanks(membershipTiers || []);\n    } else {\n      levelIds === null || levelIds === void 0 ? void 0 : levelIds.forEach(item => {\n        //\n        const check = (membershipTiers === null || membershipTiers === void 0 ? void 0 : membershipTiers.findIndex(value => value._id === item)) || 0;\n\n        if (check >= 0 && membershipTiers) {\n          dataRanks.push(membershipTiers[check]);\n        }\n      });\n      setDataRanks([...dataRanks]);\n    }\n  }, [benefit]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getDetailBenefitById(id);\n      const data = res.data;\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n\n    dispatch(resetConfirm());\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await benefitApi.redeemed({\n        objectId: (benefit === null || benefit === void 0 ? void 0 : benefit._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.BENEFIT\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n\n      history.push(PATH_HOME);\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.use_coupon.fail\"));\n      }\n\n      history.push(PATH_HOME);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleChangeImage = swiper => {\n    setCurrentImage(swiper.realIndex + 1);\n  };\n\n  const handleToggleConfirm = () => {\n    dispatch(setToggleConfirm());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [benefit && /*#__PURE__*/_jsxDEV(ComponentBenefitDetail, {\n      data: benefit,\n      handleToggleConfirm: handleToggleConfirm,\n      dataRanks: dataRanks,\n      handleChangeImage: handleChangeImage,\n      currentImage: currentImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), showConfirm && benefit && /*#__PURE__*/_jsxDEV(ComponentPopUpConfirm, {\n      handleCloseDetail: handleToggleConfirm,\n      data: benefit,\n      handleConfirm: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PageBenefit, \"FXBfPk+yxRipyEjEjjm1GKyEcTM=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useNotify, useHistory, useSelector, useSelector];\n});\n\n_c = PageBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","useParams","useTranslation","benefitApi","ComponentBenefitDetail","ComponentPopUpConfirm","enumStatus","enumTypes","enumValidation","PATH_HOME","resetConfirm","selectAuth","selectMerchant","setLoading","setToggleConfirm","useNotify","PageBenefit","t","dispatch","id","error","success","history","membershipTiers","showConfirm","benefit","setBenefit","dataRanks","setDataRanks","currentImage","setCurrentImage","NUMBER_ONE","levelIds","length","forEach","item","check","findIndex","value","_id","push","res","getDetailBenefitById","data","handleClick","redeemed","objectId","status","ACTIVE","type","BENEFIT","message","err","response","handleChangeImage","swiper","realIndex","handleToggleConfirm"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAGA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,aAA9D;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,cAAhC,EAAgDC,SAAhD,QAAiE,UAAjE;AAEA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,cAAnC,EAAmDC,UAAnD,EAA+DC,gBAA/D,QAAuF,QAAvF;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AACA,QAAMgB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAASlB,SAAS,EAAxB;AACA,QAAM;AAAEmB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBN,SAAS,EAApC;AACA,QAAMO,OAAO,GAAGtB,UAAU,EAA1B,CAN6B,CAO7B;;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAAsBxB,WAAW,CAACa,cAAD,CAAvC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAkBzB,WAAW,CAACY,UAAD,CAAnC,CAT6B,CAU7B;;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,EAAtC;AACA,QAAM,CAAC8B,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAAoB,EAApB,CAA1C;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjC,QAAQ,CAASW,cAAc,CAACuB,UAAxB,CAAhD,CAb6B,CAc7B;;AACA,QAAMC,QAAQ,GAAGP,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEO,QAA1B;AAEApC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAAAoC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqB,CAAzB,EAA4B;AACxBL,MAAAA,YAAY,CAACL,eAAe,IAAI,EAApB,CAAZ;AACH,KAFD,MAEO;AACHS,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,OAAV,CAAmBC,IAAD,IAAU;AACxB;AACA,cAAMC,KAAK,GAAG,CAAAb,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEc,SAAjB,CAA4BC,KAAD,IAAWA,KAAK,CAACC,GAAN,KAAcJ,IAApD,MAA6D,CAA3E;;AACA,YAAIC,KAAK,IAAI,CAAT,IAAcb,eAAlB,EAAmC;AAC/BI,UAAAA,SAAS,CAACa,IAAV,CAAejB,eAAe,CAACa,KAAD,CAA9B;AACH;AACJ,OAND;AAOAR,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,CAAD,CAAZ;AACH;AACJ,GAbQ,EAaN,CAACF,OAAD,CAbM,CAAT;AAeA7B,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTsB,MAAAA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAM4B,GAAG,GAAG,MAAMtC,UAAU,CAACuC,oBAAX,CAAgCvB,EAAhC,CAAlB;AACA,YAAMwB,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAjB,MAAAA,UAAU,CAACiB,IAAD,CAAV;AAEAzB,MAAAA,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAPD;;AAQAK,IAAAA,QAAQ,CAACR,YAAY,EAAb,CAAR;AACH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMkC,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA1B,MAAAA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAM4B,GAAG,GAAG,MAAMtC,UAAU,CAAC0C,QAAX,CAAoB;AAClCC,QAAAA,QAAQ,EAAE,CAAArB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEc,GAAT,KAAgB,EADQ;AAElCQ,QAAAA,MAAM,EAAEzC,UAAU,CAAC0C,MAFe;AAGlCC,QAAAA,IAAI,EAAE1C,SAAS,CAAC2C;AAHkB,OAApB,CAAlB;;AAKA,UAAIT,GAAG,CAACE,IAAJ,CAASQ,OAAb,EAAsB;AAClB9B,QAAAA,OAAO,CAACoB,GAAG,CAACE,IAAJ,CAASQ,OAAV,CAAP;AACH;;AACD7B,MAAAA,OAAO,CAACkB,IAAR,CAAa/B,SAAb;AACH,KAXD,CAWE,OAAO2C,GAAP,EAAiB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAcC,GAAG,CAACC,QAAJ,CAAaV,IAAjC;;AACA,UAAIQ,OAAJ,EAAa;AACT/B,QAAAA,KAAK,CAAC+B,OAAD,CAAL;AACH,OAFD,MAEO;AACH/B,QAAAA,KAAK,CAACH,CAAC,CAAC,yBAAD,CAAF,CAAL;AACH;;AACDK,MAAAA,OAAO,CAACkB,IAAR,CAAa/B,SAAb;AACH,KAnBD,SAmBU;AACNS,MAAAA,QAAQ,CAACL,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAvBD;;AAyBA,QAAMyC,iBAAiB,GAAIC,MAAD,IAAwB;AAC9CzB,IAAAA,eAAe,CAACyB,MAAM,CAACC,SAAP,GAAmB,CAApB,CAAf;AACH,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAC9BvC,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,eACKW,OAAO,iBACJ,QAAC,sBAAD;AACI,MAAA,IAAI,EAAEA,OADV;AAEI,MAAA,mBAAmB,EAAEgC,mBAFzB;AAGI,MAAA,SAAS,EAAE9B,SAHf;AAII,MAAA,iBAAiB,EAAE2B,iBAJvB;AAKI,MAAA,YAAY,EAAEzB;AALlB;AAAA;AAAA;AAAA;AAAA,YAFR,EAUKL,WAAW,IAAIC,OAAf,iBACG,QAAC,qBAAD;AACI,MAAA,iBAAiB,EAAEgC,mBADvB;AAEI,MAAA,IAAI,EAAEhC,OAFV;AAGI,MAAA,aAAa,EAAEmB;AAHnB;AAAA;AAAA;AAAA;AAAA,YAXR;AAAA,kBADJ;AAoBH,CAjGM;;GAAM5B,W;UAEKd,c,EACGJ,W,EACFG,S,EACYc,S,EACXf,U,EAEYD,W,EACJA,W;;;KATfiB,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport SwiperCore from \"swiper\";\n\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail, ComponentPopUpConfirm } from \"@components\";\nimport { enumStatus, enumTypes, enumValidation, PATH_HOME } from \"@configs\";\nimport { IBenefit, IMembershipTier } from \"@interfaces\";\nimport { resetConfirm, selectAuth, selectMerchant, setLoading, setToggleConfirm } from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageBenefit = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const { error, success } = useNotify();\n    const history = useHistory();\n    //redux state\n    const { membershipTiers } = useSelector(selectMerchant);\n    const { showConfirm } = useSelector(selectAuth);\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit>();\n    const [dataRanks, setDataRanks] = useState<IMembershipTier[]>([]);\n    const [currentImage, setCurrentImage] = useState<number>(enumValidation.NUMBER_ONE);\n    //page variable\n    const levelIds = benefit?.levelIds;\n\n    useEffect(() => {\n        if (levelIds?.length === 0) {\n            setDataRanks(membershipTiers || []);\n        } else {\n            levelIds?.forEach((item) => {\n                //\n                const check = membershipTiers?.findIndex((value) => value._id === item) || 0;\n                if (check >= 0 && membershipTiers) {\n                    dataRanks.push(membershipTiers[check]);\n                }\n            });\n            setDataRanks([...dataRanks]);\n        }\n    }, [benefit]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getDetailBenefitById(id);\n            const data = res.data as IBenefit;\n            setBenefit(data);\n\n            dispatch(setLoading(false));\n        })();\n        dispatch(resetConfirm());\n    }, []);\n\n    const handleClick = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await benefitApi.redeemed({\n                objectId: benefit?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.BENEFIT,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n            }\n            history.push(PATH_HOME);\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.use_coupon.fail\"));\n            }\n            history.push(PATH_HOME);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleChangeImage = (swiper: SwiperCore) => {\n        setCurrentImage(swiper.realIndex + 1);\n    };\n\n    const handleToggleConfirm = () => {\n        dispatch(setToggleConfirm());\n    };\n\n    return (\n        <>\n            {benefit && (\n                <ComponentBenefitDetail\n                    data={benefit}\n                    handleToggleConfirm={handleToggleConfirm}\n                    dataRanks={dataRanks}\n                    handleChangeImage={handleChangeImage}\n                    currentImage={currentImage}\n                />\n            )}\n            {showConfirm && benefit && (\n                <ComponentPopUpConfirm\n                    handleCloseDetail={handleToggleConfirm}\n                    data={benefit as IBenefit}\n                    handleConfirm={handleClick}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}