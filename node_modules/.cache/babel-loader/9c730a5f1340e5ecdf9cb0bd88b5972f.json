{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Reward.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { rewardApi } from \"@api\";\nimport { setLoading } from \"@redux\";\nimport { ComponentRewardDetail } from \"@components\";\nimport { enumStatus, enumTypes } from \"@configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageReward = () => {\n  _s();\n\n  //page hooks\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); //page state\n\n  const [reward, setReward] = useState();\n  const [count, setCount] = useState(1);\n  useEffect(() => {\n    (async () => {\n      if (id) {\n        dispatch(setLoading(true));\n        const res = await rewardApi.getDetailById(id);\n        const data = res.data;\n        setReward(data);\n        dispatch(setLoading(false));\n      }\n    })();\n  }, []);\n\n  const handleAddCount = () => {\n    if (reward) {\n      if (count < (reward.limit || 1)) {\n        setCount(count + 1);\n      }\n    }\n  };\n\n  const handleMinusCount = () => {\n    if (count > 1) {\n      setCount(count - 1);\n    }\n  };\n\n  const handleCalculatePoint = () => {\n    if (reward) {\n      if (reward.point) return reward.point * count;\n    }\n  };\n\n  const handleUseCoupon = async () => {\n    //\n    try {\n      const res = await rewardApi.redeemed({\n        objectId: (reward === null || reward === void 0 ? void 0 : reward._id) || \"\",\n        quantity: reward === null || reward === void 0 ? void 0 : reward.quantity,\n        points: (reward === null || reward === void 0 ? void 0 : reward.point) || 1,\n        status: enumStatus.ACTIVE,\n        type: enumTypes.REWARD,\n        variants: [\"RED\", \"BLUE\"]\n      });\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reward && /*#__PURE__*/_jsxDEV(ComponentRewardDetail, {\n      handleAddCount: handleAddCount,\n      handleMinusCount: handleMinusCount,\n      handleCalculatePoint: handleCalculatePoint,\n      count: count,\n      data: reward,\n      handleUseCoupon: handleUseCoupon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageReward, \"vOq0/EldiMMbNq0i/9/3LdqY4Vo=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = PageReward;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageReward\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Reward.tsx"],"names":["useEffect","useState","useParams","useDispatch","rewardApi","setLoading","ComponentRewardDetail","enumStatus","enumTypes","PageReward","id","dispatch","reward","setReward","count","setCount","res","getDetailById","data","handleAddCount","limit","handleMinusCount","handleCalculatePoint","point","handleUseCoupon","redeemed","objectId","_id","quantity","points","status","ACTIVE","type","REWARD","variants","err"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\n\nimport { IReward } from \"@interfaces\";\nimport { rewardApi } from \"@api\";\nimport { setLoading } from \"@redux\";\nimport { ComponentRewardDetail } from \"@components\";\nimport { enumStatus, enumTypes } from \"@configs\";\n\nexport const PageReward = () => {\n    //page hooks\n    const { id } = useParams<{ id: string }>();\n    const dispatch = useDispatch();\n\n    //page state\n    const [reward, setReward] = useState<IReward>();\n    const [count, setCount] = useState<number>(1);\n\n    useEffect(() => {\n        (async () => {\n            if (id) {\n                dispatch(setLoading(true));\n                const res = await rewardApi.getDetailById(id);\n                const data = res.data as IReward;\n                setReward(data);\n                dispatch(setLoading(false));\n            }\n        })();\n    }, []);\n    const handleAddCount = () => {\n        if (reward) {\n            if (count < (reward.limit || 1)) {\n                setCount(count + 1);\n            }\n        }\n    };\n    const handleMinusCount = () => {\n        if (count > 1) {\n            setCount(count - 1);\n        }\n    };\n\n    const handleCalculatePoint = () => {\n        if (reward) {\n            if (reward.point) return reward.point * count;\n        }\n    };\n\n    const handleUseCoupon = async () => {\n        //\n        try {\n            const res = await rewardApi.redeemed({\n                objectId: reward?._id || \"\",\n                quantity: reward?.quantity,\n                points: reward?.point || 1,\n                status: enumStatus.ACTIVE,\n                type: enumTypes.REWARD,\n                variants: [\"RED\", \"BLUE\"],\n            });\n        } catch (err: any) {}\n    };\n\n    return (\n        <>\n            {reward && (\n                <ComponentRewardDetail\n                    handleAddCount={handleAddCount}\n                    handleMinusCount={handleMinusCount}\n                    handleCalculatePoint={handleCalculatePoint}\n                    count={count}\n                    data={reward}\n                    handleUseCoupon={handleUseCoupon}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}