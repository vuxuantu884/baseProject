{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/signUp/Email.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { ComponentHeaderAuth, StyledContainerSignIn } from \"@components\";\nimport { lineLogin, lineSignup, logout, selectAuth, selectMerchant } from \"@redux\";\nimport { enumExternalAuthType, enumExternalMethod, LINE_AUTH_URL, PATH_SIGN_IN_EMAIL } from \"@configs\";\nimport { ModuleEmailSignUp } from \"@modules\";\nimport { useNotify } from \"@utils\";\nimport { LineApi } from \"@api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageSignUpEmail = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useNotify();\n  const history = useHistory();\n  const {\n    line,\n    externalLogin\n  } = useSelector(selectAuth); //page variable\n\n  const merchant = useSelector(selectMerchant);\n  useEffect(() => {\n    if (externalLogin === enumExternalMethod.LINE) {\n      externalLine();\n    }\n  }, []);\n\n  const externalLine = async () => {\n    const lineLoginApi = LineApi(LINE_AUTH_URL);\n\n    try {\n      if (line === null || line === void 0 ? void 0 : line.code) {\n        const lineState = JSON.parse(line === null || line === void 0 ? void 0 : line.state);\n\n        if (lineState.type === enumExternalAuthType.LOGIN) {\n          const lineAccessToken = await lineLoginApi.login(line === null || line === void 0 ? void 0 : line.code);\n\n          if (!lineAccessToken.data) {\n            dispatch(logout());\n          }\n\n          const lineLoginData = {\n            token: lineAccessToken.data.access_token,\n            refreshToken: lineAccessToken.data.refresh_token,\n            tokenId: lineAccessToken.data.id_token\n          };\n          const res = await dispatch(lineLogin(lineLoginData)); //WHAT: wrap function in create async thunk\n          //@ts-ignore\n\n          unwrapResult(res); //@ts-ignore\n\n          if (!res.payload.accessToken) {\n            error(t(\"page.auth.email_password_correct\"));\n          } else {\n            success(t(\"page.auth.login_successfully\"));\n          }\n        } else if (lineState.type === enumExternalAuthType.SIGNUP) {\n          const lineAccessToken = await lineLoginApi.login(line === null || line === void 0 ? void 0 : line.code);\n\n          if (!lineAccessToken.data) {\n            dispatch(logout());\n          }\n\n          const lineSignupData = {\n            token: lineAccessToken.data.access_token,\n            refreshToken: lineAccessToken.data.refresh_token,\n            tokenId: lineAccessToken.data.id_token,\n            inviteId: lineState === null || lineState === void 0 ? void 0 : lineState.inviteId\n          };\n          const res = await dispatch(lineSignup(lineSignupData)); //WHAT: wrap function in create async thunk\n          //@ts-ignore\n\n          unwrapResult(res); //@ts-ignore\n\n          if (!res.payload.accessToken) {\n            error(t(\"page.auth.email_password_correct\"));\n          } else {\n            success(t(\"page.auth.login_successfully\"));\n          }\n        } else {\n          dispatch(logout());\n        }\n      } else {\n        dispatch(logout());\n      }\n    } catch (error) {\n      errorHandler(error);\n    }\n  };\n\n  const errorHandler = errors => {\n    //handle Error\n    if (errors.response) {\n      const {\n        status,\n        data\n      } = errors.response;\n\n      if ((data === null || data === void 0 ? void 0 : data.message) && status !== 500) {\n        error(data === null || data === void 0 ? void 0 : data.message);\n      } else {\n        error(t(\"page.auth.sign_up_failed\"));\n      }\n    } else {\n      error(t(\"page.auth.sign_up_failed\"));\n    }\n\n    dispatch(logout());\n  };\n\n  const handleSignIn = () => {\n    history.push(PATH_SIGN_IN_EMAIL);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledContainerSignIn, {\n    color: merchant.themeColor,\n    children: [/*#__PURE__*/_jsxDEV(ComponentHeaderAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModuleEmailSignUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign_in\",\n      children: [t(\"page.auth.already_have_an_account\"), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleSignIn,\n        children: t(\"page.auth.sign_in\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageSignUpEmail, \"7lhFYraH49m6ga20CP2l0xRBJ1I=\", false, function () {\n  return [useTranslation, useDispatch, useNotify, useHistory, useSelector, useSelector];\n});\n\n_c = PageSignUpEmail;\nconst StyledContainerSignUp = styled.div`\n    .sign_in {\n        position: relative;\n        top: -85px;\n        text-align: end;\n        margin: 36px 36px 0 0;\n        font-style: normal;\n        font-weight: bold;\n        font-size: 16px;\n        line-height: 21px;\n        span {\n            color: ${p => p.color};\n            cursor: pointer;\n        }\n    }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageSignUpEmail\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/signUp/Email.tsx"],"names":["useTranslation","styled","useDispatch","useSelector","useHistory","useEffect","ComponentHeaderAuth","StyledContainerSignIn","lineLogin","lineSignup","logout","selectAuth","selectMerchant","enumExternalAuthType","enumExternalMethod","LINE_AUTH_URL","PATH_SIGN_IN_EMAIL","ModuleEmailSignUp","useNotify","LineApi","PageSignUpEmail","t","dispatch","error","success","history","line","externalLogin","merchant","LINE","externalLine","lineLoginApi","code","lineState","JSON","parse","state","type","LOGIN","lineAccessToken","login","data","lineLoginData","token","access_token","refreshToken","refresh_token","tokenId","id_token","res","unwrapResult","payload","accessToken","SIGNUP","lineSignupData","inviteId","errorHandler","errors","response","status","message","handleSignIn","push","themeColor","StyledContainerSignUp","div","p","color"],"mappings":"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","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { useEffect } from \"react\";\n\nimport { ComponentHeaderAuth, StyledContainerSignIn } from \"@components\";\nimport { lineLogin, lineSignup, logout, selectAuth, selectMerchant } from \"@redux\";\nimport {\n    enumExternalAuthType,\n    enumExternalMethod,\n    LINE_AUTH_URL,\n    PATH_SIGN_IN_EMAIL,\n} from \"@configs\";\nimport { ILineLogin, ILineSignup, ILineState } from \"@interfaces\";\nimport { ModuleEmailSignUp } from \"@modules\";\nimport { useNotify } from \"@utils\";\nimport { LineApi } from \"@api\";\n\nexport const PageSignUpEmail = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const history = useHistory();\n    const { line, externalLogin } = useSelector(selectAuth);\n\n    //page variable\n    const merchant = useSelector(selectMerchant);\n\n    useEffect(() => {\n        if (externalLogin === enumExternalMethod.LINE) {\n            externalLine();\n        }\n    }, []);\n\n    const externalLine = async () => {\n        const lineLoginApi = LineApi(LINE_AUTH_URL);\n        try {\n            if (line?.code) {\n                const lineState = JSON.parse(line?.state) as ILineState;\n\n                if (lineState.type === enumExternalAuthType.LOGIN) {\n                    const lineAccessToken = await lineLoginApi.login(line?.code);\n                    if (!lineAccessToken.data) {\n                        dispatch(logout());\n                    }\n                    const lineLoginData: ILineLogin = {\n                        token: lineAccessToken.data.access_token,\n                        refreshToken: lineAccessToken.data.refresh_token,\n                        tokenId: lineAccessToken.data.id_token,\n                    };\n                    const res = await dispatch(lineLogin(lineLoginData));\n                    //WHAT: wrap function in create async thunk\n                    //@ts-ignore\n                    unwrapResult(res);\n\n                    //@ts-ignore\n                    if (!res.payload.accessToken) {\n                        error(t(\"page.auth.email_password_correct\"));\n                    } else {\n                        success(t(\"page.auth.login_successfully\"));\n                    }\n                } else if (lineState.type === enumExternalAuthType.SIGNUP) {\n                    const lineAccessToken = await lineLoginApi.login(line?.code);\n                    if (!lineAccessToken.data) {\n                        dispatch(logout());\n                    }\n\n                    const lineSignupData: ILineSignup = {\n                        token: lineAccessToken.data.access_token,\n                        refreshToken: lineAccessToken.data.refresh_token,\n                        tokenId: lineAccessToken.data.id_token,\n                        inviteId: lineState?.inviteId,\n                    };\n                    const res = await dispatch(lineSignup(lineSignupData));\n                    //WHAT: wrap function in create async thunk\n                    //@ts-ignore\n                    unwrapResult(res);\n\n                    //@ts-ignore\n                    if (!res.payload.accessToken) {\n                        error(t(\"page.auth.email_password_correct\"));\n                    } else {\n                        success(t(\"page.auth.login_successfully\"));\n                    }\n                } else {\n                    dispatch(logout());\n                }\n            } else {\n                dispatch(logout());\n            }\n        } catch (error) {\n            errorHandler(error);\n        }\n    };\n\n    const errorHandler = (errors: any) => {\n        //handle Error\n        if (errors.response) {\n            const { status, data } = errors.response;\n            if (data?.message && status !== 500) {\n                error(data?.message);\n            } else {\n                error(t(\"page.auth.sign_up_failed\"));\n            }\n        } else {\n            error(t(\"page.auth.sign_up_failed\"));\n        }\n        dispatch(logout());\n    };\n\n    const handleSignIn = () => {\n        history.push(PATH_SIGN_IN_EMAIL);\n    };\n\n    return (\n        <StyledContainerSignIn color={merchant.themeColor}>\n            <ComponentHeaderAuth />\n            <ModuleEmailSignUp />\n            <div className=\"sign_in\">\n                {t(\"page.auth.already_have_an_account\")}{\" \"}\n                <span onClick={handleSignIn}>{t(\"page.auth.sign_in\")}</span>\n            </div>\n        </StyledContainerSignIn>\n    );\n};\n\nconst StyledContainerSignUp = styled.div<{ color: string }>`\n    .sign_in {\n        position: relative;\n        top: -85px;\n        text-align: end;\n        margin: 36px 36px 0 0;\n        font-style: normal;\n        font-weight: bold;\n        font-size: 16px;\n        line-height: 21px;\n        span {\n            color: ${(p) => p.color};\n            cursor: pointer;\n        }\n    }\n`;\n"]},"metadata":{},"sourceType":"module"}