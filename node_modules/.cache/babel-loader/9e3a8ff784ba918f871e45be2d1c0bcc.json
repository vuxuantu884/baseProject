{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/FaceBook.tsx\",\n    _s = $RefreshSig$();\n\nimport { memo, useCallback } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { enumExternalAuthType, enumExternalMethod, FACEBOOK_GRAPH_URL } from \"@configs\";\nimport { fbLogin, fbSignup, logout, openToast, setExternalLogin } from \"@redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleFaceBook = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  //hooks\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation(); //page variable\n\n  const scope = \"name,email,picture\";\n  const handleFBLogin = useCallback(() => {\n    dispatch(setExternalLogin({\n      type: enumExternalMethod.FACEBOOK,\n      isSignUp: props.state.type === enumExternalAuthType.SIGNUP ? true : false\n    }));\n  }, []);\n\n  const responseFacebook = async response => {\n    if (response === null || response === void 0 ? void 0 : response.accessToken) {\n      const longLiveTokenUrl = `${FACEBOOK_GRAPH_URL}/access_token?grant_type=fb_exchange_token&client_id=${process.env.REACT_APP_FACEBOOK_ID}&client_secret=${process.env.REACT_APP_FACEBOOK_SECRET}&fb_exchange_token=${response === null || response === void 0 ? void 0 : response.accessToken}`;\n      const userId = response.userID;\n\n      try {\n        var _res$data;\n\n        const res = await axios.get(longLiveTokenUrl);\n\n        if (res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.access_token) {\n          var _response;\n\n          let response;\n\n          if (props.state.type === enumExternalAuthType.LOGIN) {\n            var _res$data2;\n\n            const fbLoginData = {\n              userId,\n              token: res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.access_token\n            };\n            response = await dispatch(fbLogin(fbLoginData));\n            dispatch(openToast({\n              message: t(\"page.auth.login_successfully\"),\n              type: \"success\",\n              autoHideDuration: 2000\n            })); //WHAT: wrap function in create async thunk\n            //@ts-ignore\n\n            unwrapResult(response);\n          } else if (props.state.type === enumExternalAuthType.SIGNUP) {\n            var _res$data3;\n\n            const fbSignupData = {\n              userId,\n              token: res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.access_token\n            };\n            response = await dispatch(fbSignup(fbSignupData)); //WHAT: wrap function in create async thunk\n            //@ts-ignore\n\n            unwrapResult(response);\n          } //@ts-ignore\n\n\n          if (!((_response = response) === null || _response === void 0 ? void 0 : _response.payload.accessToken)) {\n            dispatch(openToast({\n              message: t(\"page.auth.email_password_correct\"),\n              type: \"error\",\n              autoHideDuration: 2000\n            }));\n          }\n        } else {\n          dispatch(logout());\n        }\n      } catch (error) {\n        props.errorHandler(error);\n      }\n    } else {\n      dispatch(logout());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FacebookLogin, {\n    appId: process.env.REACT_APP_FACEBOOK_ID || \"\",\n    autoLoad: false,\n    cssClass: \"fb-button\",\n    fields: scope,\n    textButton: \"\",\n    onClick: handleFBLogin,\n    callback: responseFacebook,\n    icon: \"fa-facebook\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}, \"zxxyyHBHrrekHVlnqaz3XRcpvxI=\", false, function () {\n  return [useDispatch, useTranslation];\n}));\n_c2 = ModuleFaceBook;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModuleFaceBook$memo\");\n$RefreshReg$(_c2, \"ModuleFaceBook\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/FaceBook.tsx"],"names":["memo","useCallback","FacebookLogin","axios","useDispatch","useTranslation","unwrapResult","enumExternalAuthType","enumExternalMethod","FACEBOOK_GRAPH_URL","fbLogin","fbSignup","logout","openToast","setExternalLogin","ModuleFaceBook","props","dispatch","t","scope","handleFBLogin","type","FACEBOOK","isSignUp","state","SIGNUP","responseFacebook","response","accessToken","longLiveTokenUrl","process","env","REACT_APP_FACEBOOK_ID","REACT_APP_FACEBOOK_SECRET","userId","userID","res","get","data","access_token","LOGIN","fbLoginData","token","message","autoHideDuration","fbSignupData","payload","error","errorHandler"],"mappings":"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","sourcesContent":["import { memo, useCallback } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\n\nimport { enumExternalAuthType, enumExternalMethod, FACEBOOK_GRAPH_URL } from \"@configs\";\nimport { IFBLogin, IExternalAuthState, IFBSignup } from \"@interfaces\";\nimport { fbLogin, fbSignup, logout, openToast, setExternalLogin } from \"@redux\";\n\ninterface IProps {\n    errorHandler: (error: any) => void;\n    state: IExternalAuthState;\n}\n\nexport const ModuleFaceBook = memo((props: IProps) => {\n    //hooks\n    const dispatch = useDispatch();\n    const { t } = useTranslation();\n    //page variable\n    const scope = \"name,email,picture\";\n\n    const handleFBLogin = useCallback(() => {\n        dispatch(\n            setExternalLogin({\n                type: enumExternalMethod.FACEBOOK,\n                isSignUp: props.state.type === enumExternalAuthType.SIGNUP ? true : false,\n            })\n        );\n    }, []);\n\n    const responseFacebook = async (response: any) => {\n        if (response?.accessToken) {\n            const longLiveTokenUrl = `${FACEBOOK_GRAPH_URL}/access_token?grant_type=fb_exchange_token&client_id=${process.env.REACT_APP_FACEBOOK_ID}&client_secret=${process.env.REACT_APP_FACEBOOK_SECRET}&fb_exchange_token=${response?.accessToken}`;\n            const userId = response.userID;\n            try {\n                const res = await axios.get(longLiveTokenUrl);\n                if (res?.data?.access_token) {\n                    let response;\n                    if (props.state.type === enumExternalAuthType.LOGIN) {\n                        const fbLoginData: IFBLogin = {\n                            userId,\n                            token: res?.data?.access_token,\n                        };\n\n                        response = await dispatch(fbLogin(fbLoginData));\n\n                        dispatch(\n                            openToast({\n                                message: t(\"page.auth.login_successfully\"),\n                                type: \"success\",\n                                autoHideDuration: 2000,\n                            })\n                        );\n                        //WHAT: wrap function in create async thunk\n                        //@ts-ignore\n                        unwrapResult(response);\n                    } else if (props.state.type === enumExternalAuthType.SIGNUP) {\n                        const fbSignupData: IFBSignup = {\n                            userId,\n                            token: res?.data?.access_token,\n                        };\n                        response = await dispatch(fbSignup(fbSignupData));\n                        //WHAT: wrap function in create async thunk\n                        //@ts-ignore\n                        unwrapResult(response);\n                    }\n\n                    //@ts-ignore\n                    if (!response?.payload.accessToken) {\n                        dispatch(\n                            openToast({\n                                message: t(\"page.auth.email_password_correct\"),\n                                type: \"error\",\n                                autoHideDuration: 2000,\n                            })\n                        );\n                    }\n                } else {\n                    dispatch(logout());\n                }\n            } catch (error) {\n                props.errorHandler(error);\n            }\n        } else {\n            dispatch(logout());\n        }\n    };\n\n    return (\n        <FacebookLogin\n            appId={process.env.REACT_APP_FACEBOOK_ID || \"\"}\n            autoLoad={false}\n            cssClass=\"fb-button\"\n            fields={scope}\n            textButton={\"\"}\n            onClick={handleFBLogin}\n            callback={responseFacebook}\n            icon=\"fa-facebook\"\n        />\n    );\n});\n"]},"metadata":{},"sourceType":"module"}