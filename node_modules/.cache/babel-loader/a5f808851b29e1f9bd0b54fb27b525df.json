{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport thunk from \"redux-thunk\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport reducer from \"./Slices\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"theme\", \"auth\", \"merchant\"],\n  blackList: [\"app\"]\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk]\n});\nexport const persistor = persistStore(store);\nexport default store; // Use throughout your app instead of plain `useDispatch` and `useSelector`\n\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/redux/store.ts"],"names":["thunk","configureStore","persistStore","persistReducer","storage","useDispatch","useSelector","reducer","persistConfig","key","whitelist","blackList","persistedReducer","store","middleware","persistor","useAppDispatch","useAppSelector"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAEA,OAAOC,OAAP,MAAmC,UAAnC;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBL,EAAAA,OAFkB;AAGlBM,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAS,MAAT,EAAiB,UAAjB,CAHO;AAIlBC,EAAAA,SAAS,EAAE,CAAC,KAAD;AAJO,CAAtB;AAOA,MAAMC,gBAAgB,GAAGT,cAAc,CAACK,aAAD,EAAgBD,OAAhB,CAAvC;AAEA,MAAMM,KAAK,GAAGZ,cAAc,CAAC;AACzBM,EAAAA,OAAO,EAAEK,gBADgB;AAEzBE,EAAAA,UAAU,EAAE,CAACd,KAAD;AAFa,CAAD,CAA5B;AAKA,OAAO,MAAMe,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAIP,eAAeA,KAAf,C,CAEA;;AACA,OAAO,MAAMG,cAAc,GAAG;AAAA;;AAAA,SAAMX,WAAW,EAAjB;AAAA,CAAvB;;GAAMW,c;UAAuBX,W;;;AACpC,OAAO,MAAMY,cAA+C,GAAGX,WAAxD","sourcesContent":["import thunk from \"redux-thunk\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\n\nimport reducer, { RootState } from \"./Slices\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"theme\",\"auth\", \"merchant\"],\n    blackList: [\"app\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n    reducer: persistedReducer,\n    middleware: [thunk],\n});\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n"]},"metadata":{},"sourceType":"module"}