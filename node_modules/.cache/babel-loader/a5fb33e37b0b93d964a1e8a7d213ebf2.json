{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"@redux\";\nimport { useEffect, useState } from \"react\";\nimport { historyApi } from \"@api\";\nimport { enumTypes } from \"@configs\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleHistory = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch(); //page state\n\n  const [histories, setHistories] = useState();\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await historyApi.getListHistory();\n      const data = res.data.docs.map(item => {\n        if (item.type === enumTypes.REWARD || item.type === enumTypes.BENEFIT) {\n          return item.reward;\n        } else if (item.type === enumTypes.COUPON) {\n          return item.qrtable;\n        }\n      });\n      setHistories(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(ModuleHistory, \"5ulXNZ5uitaeIIvncVTOuAAXnao=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModuleHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleHistory\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/History.tsx"],"names":["useDispatch","setLoading","useEffect","useState","historyApi","enumTypes","ModuleHistory","dispatch","histories","setHistories","res","getListHistory","data","docs","map","item","type","REWARD","BENEFIT","reward","COUPON","qrtable"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAF+B,CAG/B;;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTK,MAAAA,QAAQ,CAACN,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMS,GAAG,GAAG,MAAMN,UAAU,CAACO,cAAX,EAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAe;AAC1C,YAAIA,IAAI,CAACC,IAAL,KAAcX,SAAS,CAACY,MAAxB,IAAkCF,IAAI,CAACC,IAAL,KAAcX,SAAS,CAACa,OAA9D,EAAuE;AACnE,iBAAOH,IAAI,CAACI,MAAZ;AACH,SAFD,MAEO,IAAIJ,IAAI,CAACC,IAAL,KAAcX,SAAS,CAACe,MAA5B,EAAoC;AACvC,iBAAOL,IAAI,CAACM,OAAZ;AACH;AACJ,OANY,CAAb;AAOAZ,MAAAA,YAAY,CAACG,IAAD,CAAZ;AACAL,MAAAA,QAAQ,CAACN,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAZD;AAaH,GAdQ,EAcN,EAdM,CAAT;AAeA,sBAAO,qCAAP;AACH,CArBM;;GAAMK,a;UAEQN,W;;;KAFRM,a","sourcesContent":["import { useDispatch } from \"react-redux\";\n\nimport { setLoading } from \"@redux\";\nimport { useEffect, useState } from \"react\";\nimport { historyApi } from \"@api\";\nimport { IBenefit, ICoupon, IReward } from \"@interfaces\";\nimport { enumTypes } from \"@configs\";\n\nexport const ModuleHistory = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    //page state\n    const [histories, setHistories] = useState<(IBenefit | IReward | ICoupon)[]>();\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await historyApi.getListHistory();\n            const data = res.data.docs.map((item: any) => {\n                if (item.type === enumTypes.REWARD || item.type === enumTypes.BENEFIT) {\n                    return item.reward;\n                } else if (item.type === enumTypes.COUPON) {\n                    return item.qrtable;\n                }\n            }) as (IBenefit | IReward | ICoupon)[];\n            setHistories(data);\n            dispatch(setLoading(false));\n        })();\n    }, []);\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}