{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail } from \"@components\";\nimport { enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { selectMerchant, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageBenefit = () => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const {\n    error,\n    success\n  } = useNotify();\n  const history = useHistory(); //redux state\n\n  const {\n    membershipTiers\n  } = useSelector(selectMerchant); //page state\n\n  const [benefit, setBenefit] = useState();\n  const [dataRanks, setDataRanks] = useState([]); //page variable\n\n  const levelIds = benefit === null || benefit === void 0 ? void 0 : benefit.levelIds;\n  useEffect(() => {\n    if ((levelIds === null || levelIds === void 0 ? void 0 : levelIds.length) === 0) {\n      setDataRanks(membershipTiers || []);\n    } else {\n      levelIds === null || levelIds === void 0 ? void 0 : levelIds.forEach(item => {\n        //\n        const check = (membershipTiers === null || membershipTiers === void 0 ? void 0 : membershipTiers.findIndex(value => value._id === item)) || 0;\n\n        if (check >= 0 && membershipTiers) {\n          dataRanks.push(membershipTiers[check]);\n        }\n      });\n      setDataRanks([...dataRanks]);\n    }\n  }, [benefit]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getDetailBenefitById(id);\n      const data = res.data;\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await benefitApi.redeemed({\n        objectId: (benefit === null || benefit === void 0 ? void 0 : benefit._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.BENEFIT\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n      }\n\n      history.push(PATH_HOME);\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.use_coupon.fail\"));\n      }\n\n      history.push(PATH_HOME);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleChangeImage = swiper => {\n    console.log(swiper);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: benefit && /*#__PURE__*/_jsxDEV(ComponentBenefitDetail, {\n      data: benefit,\n      handleClick: handleClick,\n      dataRanks: dataRanks,\n      handleChangeImage: handleChangeImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageBenefit, \"pLQTeFll/5sfj+JwbAtwWggcW4Y=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useNotify, useHistory, useSelector];\n});\n\n_c = PageBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","useParams","useTranslation","benefitApi","ComponentBenefitDetail","enumStatus","enumTypes","PATH_HOME","selectMerchant","setLoading","useNotify","PageBenefit","t","dispatch","id","error","success","history","membershipTiers","benefit","setBenefit","dataRanks","setDataRanks","levelIds","length","forEach","item","check","findIndex","value","_id","push","res","getDetailBenefitById","data","handleClick","redeemed","objectId","status","ACTIVE","type","BENEFIT","message","err","response","handleChangeImage","swiper","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport SwiperCore from \"swiper\";\n\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitDetail } from \"@components\";\nimport { enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { IBenefit, IMembershipTier } from \"@interfaces\";\nimport { selectMerchant, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageBenefit = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const { error, success } = useNotify();\n    const history = useHistory();\n    //redux state\n    const { membershipTiers } = useSelector(selectMerchant);\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit>();\n    const [dataRanks, setDataRanks] = useState<IMembershipTier[]>([]);\n    //page variable\n    const levelIds = benefit?.levelIds;\n\n    useEffect(() => {\n        if (levelIds?.length === 0) {\n            setDataRanks(membershipTiers || []);\n        } else {\n            levelIds?.forEach((item) => {\n                //\n                const check = membershipTiers?.findIndex((value) => value._id === item) || 0;\n                if (check >= 0 && membershipTiers) {\n                    dataRanks.push(membershipTiers[check]);\n                }\n            });\n            setDataRanks([...dataRanks]);\n        }\n    }, [benefit]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getDetailBenefitById(id);\n            const data = res.data as IBenefit;\n            setBenefit(data);\n\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await benefitApi.redeemed({\n                objectId: benefit?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.BENEFIT,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n            }\n            history.push(PATH_HOME);\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.use_coupon.fail\"));\n            }\n            history.push(PATH_HOME);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleChangeImage = (swiper: SwiperCore) => {\n        console.log(swiper);\n    };\n\n    return (\n        <>\n            {benefit && (\n                <ComponentBenefitDetail\n                    data={benefit}\n                    handleClick={handleClick}\n                    dataRanks={dataRanks}\n                    handleChangeImage={handleChangeImage}\n                />\n            )}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}