{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { benefitApi } from \"@api\";\nimport { setLoading } from \"@redux\";\nimport { REWARD } from \"@configs\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModulesBenefit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory(); //page state\n\n  const [reward, setReward] = useState([]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getListBenefit();\n      const data = res.data.docs;\n      console.log(data); //WHAT: xu ly data thanh IData\n\n      const points = data.map(item => item.point);\n      const pointsSet = Array.from(new Set(points));\n      const result = pointsSet.map(item => {\n        const res = data.filter(values => values.point === item);\n        return {\n          point: item,\n          reward: res\n        };\n      });\n      result.sort((firstEl, secondEl) => {\n        if (secondEl.point > firstEl.point) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      setReward(result); // setReward(data);\n\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = value => {\n    var _value$levelIds;\n\n    if ((_value$levelIds = value.levelIds) === null || _value$levelIds === void 0 ? void 0 : _value$levelIds.length) return;\n    history.push(REWARD + \"/\" + value._id); //\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(ModulesBenefit, \"pOKedHo2q/DNHCllTWJUMbdRObg=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = ModulesBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModulesBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useHistory","benefitApi","setLoading","REWARD","ModulesBenefit","dispatch","history","reward","setReward","res","getListBenefit","data","docs","console","log","points","map","item","point","pointsSet","Array","from","Set","result","filter","values","sort","firstEl","secondEl","handleClick","value","levelIds","length","push","_id"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,UAAT,QAAsC,MAAtC;AAGA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B,CAFgC,CAGhC;;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAgB,EAAhB,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTQ,MAAAA,QAAQ,CAACH,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMO,GAAG,GAAG,MAAMR,UAAU,CAACS,cAAX,EAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAJS,CAKT;;AACA,YAAMI,MAAM,GAAGJ,IAAI,CAACK,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAACC,KAAxB,CAAf;AACA,YAAMC,SAAS,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQP,MAAR,CAAX,CAAlB;AACA,YAAMQ,MAAM,GAAGJ,SAAS,CAACH,GAAV,CAAeC,IAAD,IAAU;AACnC,cAAMR,GAAG,GAAGE,IAAI,CAACa,MAAL,CAAaC,MAAD,IAAYA,MAAM,CAACP,KAAP,KAAiBD,IAAzC,CAAZ;AACA,eAAO;AACHC,UAAAA,KAAK,EAAED,IADJ;AAEHV,UAAAA,MAAM,EAAEE;AAFL,SAAP;AAIH,OANc,CAAf;AAOAc,MAAAA,MAAM,CAACG,IAAP,CAAY,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC/B,YAAIA,QAAQ,CAACV,KAAT,GAAiBS,OAAO,CAACT,KAA7B,EAAoC;AAChC,iBAAO,CAAC,CAAR;AACH,SAFD,MAEO;AACH,iBAAO,CAAP;AACH;AACJ,OAND;AAOAV,MAAAA,SAAS,CAACe,MAAD,CAAT,CAtBS,CAuBT;;AACAlB,MAAAA,QAAQ,CAACH,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAzBD;AA0BH,GA3BQ,EA2BN,EA3BM,CAAT;;AA6BA,QAAM2B,WAAW,GAAIC,KAAD,IAAoB;AAAA;;AACpC,2BAAIA,KAAK,CAACC,QAAV,oDAAI,gBAAgBC,MAApB,EAA4B;AAC5B1B,IAAAA,OAAO,CAAC2B,IAAR,CAAa9B,MAAM,GAAG,GAAT,GAAe2B,KAAK,CAACI,GAAlC,EAFoC,CAGpC;AACH,GAJD;;AAMA,sBAAO,qCAAP;AACH,CA1CM;;GAAM9B,c;UACQL,W,EACDC,U;;;KAFPI,c","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { benefitApi, rewardApi } from \"@api\";\nimport { ComponentRewardList } from \"@components\";\nimport { IReward, IDataReward } from \"@interfaces\";\nimport { setLoading } from \"@redux\";\nimport { REWARD } from \"@configs\";\n\nexport const ModulesBenefit = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    //page state\n    const [reward, setReward] = useState<IDataReward[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getListBenefit();\n            const data = res.data.docs as IReward[];\n            console.log(data);\n            //WHAT: xu ly data thanh IData\n            const points = data.map((item) => item.point) as number[];\n            const pointsSet = Array.from(new Set(points));\n            const result = pointsSet.map((item) => {\n                const res = data.filter((values) => values.point === item);\n                return {\n                    point: item,\n                    reward: res,\n                };\n            });\n            result.sort((firstEl, secondEl) => {\n                if (secondEl.point > firstEl.point) {\n                    return -1;\n                } else {\n                    return 0;\n                }\n            });\n            setReward(result);\n            // setReward(data);\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = (value: IReward) => {\n        if (value.levelIds?.length) return;\n        history.push(REWARD + \"/\" + value._id);\n        //\n    };\n\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}