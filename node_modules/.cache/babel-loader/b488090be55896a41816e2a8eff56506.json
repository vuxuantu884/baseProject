{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/tel/SignInTel.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { SharedButton, SharedIntlTelInput } from \"@components\";\nimport { selectMerchant } from \"@redux\";\nimport { memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ComponentSignInTel = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  //page hook\n  const {\n    t\n  } = useTranslation(); //page variable\n\n  const merchant = useSelector(selectMerchant); //page props\n\n  const {\n    values,\n    isSubmitting,\n    handleSubmit,\n    setFieldTouched,\n    setFieldValue,\n    errorPhone,\n    setError\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(SharedIntlTelInput, {\n      setFieldTouched: setFieldTouched,\n      setFieldValue: setFieldValue,\n      value: values.phoneNumber || \"\",\n      isSubmitting: isSubmitting,\n      errorPhone: errorPhone,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SharedButton, {\n      size: \"large\",\n      bg_color: merchant.themeColor,\n      disabled: isSubmitting,\n      type: \"submit\",\n      children: t(\"page.auth.sign_in\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}, \"6VHuB+DUyebMo+Mquqzz8MD0itQ=\", false, function () {\n  return [useTranslation, useSelector];\n}));\n_c2 = ComponentSignInTel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentSignInTel$memo\");\n$RefreshReg$(_c2, \"ComponentSignInTel\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/tel/SignInTel.tsx"],"names":["useTranslation","useSelector","SharedButton","SharedIntlTelInput","selectMerchant","memo","ComponentSignInTel","props","t","merchant","values","isSubmitting","handleSubmit","setFieldTouched","setFieldValue","errorPhone","setError","phoneNumber","themeColor"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,SAAyCC,YAAzC,EAAuDC,kBAAvD,QAAiF,aAAjF;AACA,SAASC,cAAT,QAA+B,QAA/B;AAEA,SAASC,IAAT,QAAqB,OAArB;;AAoBA,OAAO,MAAMC,kBAAkB,gBAAGD,IAAI,SAAEE,KAAD,IAAmB;AAAA;;AACtD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQR,cAAc,EAA5B,CAFsD,CAGtD;;AACA,QAAMS,QAAQ,GAAGR,WAAW,CAACG,cAAD,CAA5B,CAJsD,CAMtD;;AACA,QAAM;AACFM,IAAAA,MADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,eAJE;AAKFC,IAAAA,aALE;AAMFC,IAAAA,UANE;AAOFC,IAAAA;AAPE,MAQFT,KARJ;AAUA,sBACI;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA,4BACI,QAAC,kBAAD;AACI,MAAA,eAAe,EAAEC,eADrB;AAEI,MAAA,aAAa,EAAEC,aAFnB;AAGI,MAAA,KAAK,EAAEJ,MAAM,CAACO,WAAP,IAAsB,EAHjC;AAII,MAAA,YAAY,EAAEN,YAJlB;AAKI,MAAA,UAAU,EAAEI,UALhB;AAMI,MAAA,QAAQ,EAAEC;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,YAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAEP,QAAQ,CAACS,UAFvB;AAGI,MAAA,QAAQ,EAAEP,YAHd;AAII,MAAA,IAAI,EAAC,QAJT;AAAA,gBAMKH,CAAC,CAAC,mBAAD;AANN;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CArCqC;AAAA,UAEpBR,cAFoB,EAIjBC,WAJiB;AAAA,GAA/B;MAAMK,kB","sourcesContent":["import { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport IntlTelInput, { CountryData } from \"react-intl-tel-input\";\nimport { FormikErrors } from \"formik\";\n\nimport { StyledSignUp, SharedSocialLine, SharedButton, SharedIntlTelInput } from \"@components\";\nimport { selectMerchant } from \"@redux\";\nimport { IPhone } from \"@interfaces\";\nimport { memo } from \"react\";\n\ninterface IProps {\n    values: IPhone;\n    errorPhone: string;\n    isSubmitting: boolean;\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IPhone>>;\n    setFieldValue: (\n        field: string,\n        value: any,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IPhone>>;\n    setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const ComponentSignInTel = memo((props: IProps) => {\n    //page hook\n    const { t } = useTranslation();\n    //page variable\n    const merchant = useSelector(selectMerchant);\n\n    //page props\n    const {\n        values,\n        isSubmitting,\n        handleSubmit,\n        setFieldTouched,\n        setFieldValue,\n        errorPhone,\n        setError,\n    } = props;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <SharedIntlTelInput\n                setFieldTouched={setFieldTouched}\n                setFieldValue={setFieldValue}\n                value={values.phoneNumber || \"\"}\n                isSubmitting={isSubmitting}\n                errorPhone={errorPhone}\n                setError={setError}\n            />\n            <SharedButton\n                size=\"large\"\n                bg_color={merchant.themeColor}\n                disabled={isSubmitting}\n                type=\"submit\"\n            >\n                {t(\"page.auth.sign_in\")}\n            </SharedButton>\n        </form>\n    );\n});\n"]},"metadata":{},"sourceType":"module"}