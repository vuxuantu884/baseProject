{"ast":null,"code":"import _regeneratorRuntime from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/vuxuantu/Desktop/rewarding-platform-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useFormik}from\"formik\";import*as Yup from\"yup\";import{useDispatch}from\"react-redux\";import{useTranslation}from\"react-i18next\";import{memo,useCallback}from\"react\";import{ComponentSignInEmail}from\"@components\";import{useYup}from\"@validations\";import{authApi}from\"@api\";import{setAuth,setExternalLogin,setLoading}from\"@redux\";import{useNotify}from\"@utils\";import{enumExternalMethod}from\"@configs\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ModuleEmailSignIn=/*#__PURE__*/memo(function(props){//page props\nvar remember=props.remember;//page hooks\nvar _useYup=useYup(),YubEmailSignIn=_useYup.YubEmailSignIn;var dispatch=useDispatch();var _useNotify=useNotify(),error=_useNotify.error,success=_useNotify.success;var _useTranslation=useTranslation(),t=_useTranslation.t;//page variable\nvar initialValues={email:\"\",password:\"\"};var registerSchema=Yup.object().shape(YubEmailSignIn);var handleLogin=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values,_ref){var setSubmitting,res,data,message;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setSubmitting=_ref.setSubmitting;_context.prev=1;setSubmitting(true);dispatch(setLoading(true));_context.next=6;return authApi.login(values);case 6:res=_context.sent;data=res.data;if(remember){dispatch(setAuth(data));}else{dispatch(setAuth(_objectSpread(_objectSpread({},data),{},{refreshToken:null})));}dispatch(setExternalLogin({type:enumExternalMethod.EMAIL}));success(t(\"message.login.success\"));_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);message=_context.t0.response.data.message;error(message);case 17:_context.prev=17;setSubmitting(false);dispatch(setLoading(false));return _context.finish(17);case 21:case\"end\":return _context.stop();}}},_callee,null,[[1,13,17,21]]);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}(),[remember]);var _useFormik=useFormik({initialValues:initialValues,validationSchema:registerSchema,onSubmit:handleLogin}),values=_useFormik.values,handleChange=_useFormik.handleChange,handleBlur=_useFormik.handleBlur,handleSubmit=_useFormik.handleSubmit,isSubmitting=_useFormik.isSubmitting,errors=_useFormik.errors,touched=_useFormik.touched;return/*#__PURE__*/_jsx(ComponentSignInEmail,{handleBlur:handleBlur,handleChange:handleChange,errors:errors,touched:touched,values:values,handleSubmit:handleSubmit,isSubmitting:isSubmitting});});","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/Email.tsx"],"names":["useFormik","Yup","useDispatch","useTranslation","memo","useCallback","ComponentSignInEmail","useYup","authApi","setAuth","setExternalLogin","setLoading","useNotify","enumExternalMethod","ModuleEmailSignIn","props","remember","YubEmailSignIn","dispatch","error","success","t","initialValues","email","password","registerSchema","object","shape","handleLogin","values","setSubmitting","login","res","data","refreshToken","type","EMAIL","message","response","validationSchema","onSubmit","handleChange","handleBlur","handleSubmit","isSubmitting","errors","touched"],"mappings":"ifAAA,OAASA,SAAT,KAAyC,QAAzC,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,IAAT,CAAeC,WAAf,KAAkC,OAAlC,CAEA,OAASC,oBAAT,KAAqC,aAArC,CAEA,OAASC,MAAT,KAAuB,cAAvB,CACA,OAASC,OAAT,KAAwB,MAAxB,CACA,OAASC,OAAT,CAAkBC,gBAAlB,CAAoCC,UAApC,KAAsD,QAAtD,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAASC,kBAAT,KAAmC,UAAnC,C,2CAMA,MAAO,IAAMC,CAAAA,iBAAiB,cAAGV,IAAI,CAAC,SAACW,KAAD,CAAmB,CACrD;AACA,GAAQC,CAAAA,QAAR,CAAqBD,KAArB,CAAQC,QAAR,CACA;AACA,YAA2BT,MAAM,EAAjC,CAAQU,cAAR,SAAQA,cAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGhB,WAAW,EAA5B,CACA,eAA2BU,SAAS,EAApC,CAAQO,KAAR,YAAQA,KAAR,CAAeC,OAAf,YAAeA,OAAf,CACA,oBAAcjB,cAAc,EAA5B,CAAQkB,CAAR,iBAAQA,CAAR,CACA;AACA,GAAMC,CAAAA,aAAqB,CAAG,CAC1BC,KAAK,CAAE,EADmB,CAE1BC,QAAQ,CAAE,EAFgB,CAA9B,CAKA,GAAMC,CAAAA,cAAc,CAAGxB,GAAG,CAACyB,MAAJ,GAAaC,KAAb,CAAmBV,cAAnB,CAAvB,CAEA,GAAMW,CAAAA,WAAW,CAAGvB,WAAW,2FAC3B,iBAAOwB,MAAP,0JAAyBC,aAAzB,MAAyBA,aAAzB,iBAGQA,aAAa,CAAC,IAAD,CAAb,CACAZ,QAAQ,CAACP,UAAU,CAAC,IAAD,CAAX,CAAR,CAJR,sBAK0BH,CAAAA,OAAO,CAACuB,KAAR,CAAcF,MAAd,CAL1B,QAKcG,GALd,eAMcC,IANd,CAMqBD,GAAG,CAACC,IANzB,CAOQ,GAAIjB,QAAJ,CAAc,CACVE,QAAQ,CAACT,OAAO,CAACwB,IAAD,CAAR,CAAR,CACH,CAFD,IAEO,CACHf,QAAQ,CAACT,OAAO,gCAAMwB,IAAN,MAAYC,YAAY,CAAE,IAA1B,GAAR,CAAR,CACH,CACDhB,QAAQ,CAACR,gBAAgB,CAAC,CAAEyB,IAAI,CAAEtB,kBAAkB,CAACuB,KAA3B,CAAD,CAAjB,CAAR,CACAhB,OAAO,CAACC,CAAC,CAAC,uBAAD,CAAF,CAAP,CAbR,iFAegBgB,OAfhB,CAe4B,YAAOC,QAAP,CAAgBL,IAf5C,CAegBI,OAfhB,CAgBQlB,KAAK,CAACkB,OAAD,CAAL,CAhBR,yBAkBQP,aAAa,CAAC,KAAD,CAAb,CACAZ,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR,CAnBR,sGAD2B,oEAuB3B,CAACK,QAAD,CAvB2B,CAA/B,CA0BA,eACIhB,SAAS,CAAC,CACNsB,aAAa,CAAEA,aADT,CAENiB,gBAAgB,CAAEd,cAFZ,CAGNe,QAAQ,CAAEZ,WAHJ,CAAD,CADb,CAAQC,MAAR,YAAQA,MAAR,CAAgBY,YAAhB,YAAgBA,YAAhB,CAA8BC,UAA9B,YAA8BA,UAA9B,CAA0CC,YAA1C,YAA0CA,YAA1C,CAAwDC,YAAxD,YAAwDA,YAAxD,CAAsEC,MAAtE,YAAsEA,MAAtE,CAA8EC,OAA9E,YAA8EA,OAA9E,CAOA,mBACI,KAAC,oBAAD,EACI,UAAU,CAAEJ,UADhB,CAEI,YAAY,CAAED,YAFlB,CAGI,MAAM,CAAEI,MAHZ,CAII,OAAO,CAAEC,OAJb,CAKI,MAAM,CAAEjB,MALZ,CAMI,YAAY,CAAEc,YANlB,CAOI,YAAY,CAAEC,YAPlB,EADJ,CAWH,CA5DoC,CAA9B","sourcesContent":["import { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport { memo, useCallback } from \"react\";\n\nimport { ComponentSignInEmail } from \"@components\";\nimport { IAuth, ILogin } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { setAuth, setExternalLogin, setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { enumExternalMethod } from \"@configs\";\n\ninterface IProps {\n    remember: boolean;\n}\n\nexport const ModuleEmailSignIn = memo((props: IProps) => {\n    //page props\n    const { remember } = props;\n    //page hooks\n    const { YubEmailSignIn } = useYup();\n    const dispatch = useDispatch();\n    const { error, success } = useNotify();\n    const { t } = useTranslation();\n    //page variable\n    const initialValues: ILogin = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const registerSchema = Yup.object().shape(YubEmailSignIn);\n\n    const handleLogin = useCallback(\n        async (values: ILogin, { setSubmitting }: FormikHelpers<ILogin>) => {\n            //\n            try {\n                setSubmitting(true);\n                dispatch(setLoading(true));\n                const res = await authApi.login(values);\n                const data = res.data as IAuth;\n                if (remember) {\n                    dispatch(setAuth(data));\n                } else {\n                    dispatch(setAuth({ ...data, refreshToken: null }));\n                }\n                dispatch(setExternalLogin({ type: enumExternalMethod.EMAIL }));\n                success(t(\"message.login.success\"));\n            } catch (errors: any) {\n                const { message } = errors.response.data;\n                error(message);\n            } finally {\n                setSubmitting(false);\n                dispatch(setLoading(false));\n            }\n        },\n        [remember]\n    );\n\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: initialValues,\n            validationSchema: registerSchema,\n            onSubmit: handleLogin,\n        });\n\n    return (\n        <ComponentSignInEmail\n            handleBlur={handleBlur}\n            handleChange={handleChange}\n            errors={errors}\n            touched={touched}\n            values={values}\n            handleSubmit={handleSubmit}\n            isSubmitting={isSubmitting}\n        />\n    );\n});\n"]},"metadata":{},"sourceType":"module"}