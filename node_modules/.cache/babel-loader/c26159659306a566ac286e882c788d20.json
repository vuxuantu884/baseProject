{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/user/Save.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport IntlTelInput from \"react-intl-tel-input\";\nimport { SharedButton, SharedInput } from \"@components\";\nimport { useSetting } from \"@configs\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ComponentUserSettingSave = props => {\n  _s();\n\n  //page hooks\n  const {\n    t\n  } = useTranslation(); //page props\n\n  const {\n    values,\n    handleBlur,\n    handleChange,\n    errors,\n    touched,\n    handleSubmit,\n    isSubmitting,\n    title,\n    setFieldTouched,\n    handleChangePhoneNumber\n  } = props;\n\n  const render = () => {\n    switch (title) {\n      case useSetting.FULL_NAME:\n        return t(\"page.user_detail.name\");\n        break;\n\n      case useSetting.PHONE_NUMBER:\n        return t(\"page.user_detail.phone_number\");\n        break;\n\n      case useSetting.EMAIL:\n        return t(\"page.user_detail.email\");\n        break;\n\n      case useSetting.DATE_OF_BIRTH:\n        return t(\"page.user_detail.date\");\n        break;\n\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n        break;\n    }\n  };\n\n  const renderName = () => {\n    switch (title) {\n      case useSetting.FULL_NAME:\n        return useSetting.FULL_NAME;\n        break;\n\n      case useSetting.PHONE_NUMBER:\n        return useSetting.PHONE_NUMBER;\n        break;\n\n      case useSetting.EMAIL:\n        return useSetting.EMAIL;\n        break;\n\n      default:\n        return \"\";\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledSettingSave, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: render()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), title !== useSetting.DATE_OF_BIRTH && (title === useSetting.PHONE_NUMBER ? /*#__PURE__*/_jsxDEV(IntlTelInput, {\n        defaultCountry: \"th\",\n        preferredCountries: [\"fr\", \"gb\", \"es\", \"be\", \"de\"],\n        fieldId: \"phoneNumber\",\n        fieldName: \"phoneNumber\",\n        onPhoneNumberChange: handleChangePhoneNumber,\n        onPhoneNumberBlur: () => {\n          setFieldTouched(values[title].toString(), true);\n        },\n        value: values[title] || \"\",\n        disabled: isSubmitting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(StyledSharedInput, {\n        name: renderName(),\n        value: values[title],\n        onBlur: handleBlur,\n        onChange: handleChange,\n        errors: errors[title],\n        touched: touched[title]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(StyledSharedButton, {\n        size: \"large\",\n        bg_color: \"#05C755\",\n        disabled: isSubmitting,\n        type: \"submit\",\n        children: t(\"page.auth.sign_up\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ComponentUserSettingSave, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ComponentUserSettingSave;\nconst StyledSharedInput = styled(SharedInput)`\n    width: 90%;\n    margin: 0 auto;\n`;\n_c2 = StyledSharedInput;\nconst StyledSettingSave = styled.div`\n    text-align: center;\n    padding-top: 24px;\n    .title {\n        font-family: \"Roboto\", sans-serif;\n        font-style: normal;\n        font-weight: 600;\n        font-size: 14px;\n        color: #707070;\n        margin-bottom: 12px;\n    }\n`;\n_c3 = StyledSettingSave;\nconst StyledSharedButton = styled(SharedButton)`\n    width: 90%;\n`;\n_c4 = StyledSharedButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ComponentUserSettingSave\");\n$RefreshReg$(_c2, \"StyledSharedInput\");\n$RefreshReg$(_c3, \"StyledSettingSave\");\n$RefreshReg$(_c4, \"StyledSharedButton\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/user/Save.tsx"],"names":["styled","useTranslation","IntlTelInput","SharedButton","SharedInput","useSetting","ComponentUserSettingSave","props","t","values","handleBlur","handleChange","errors","touched","handleSubmit","isSubmitting","title","setFieldTouched","handleChangePhoneNumber","render","FULL_NAME","PHONE_NUMBER","EMAIL","DATE_OF_BIRTH","renderName","toString","StyledSharedInput","StyledSettingSave","div","StyledSharedButton"],"mappings":"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","sourcesContent":["import { FormikErrors, FormikTouched } from \"formik\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nimport IntlTelInput, { CountryData } from \"react-intl-tel-input\";\n\nimport { IHandleBlur, IUserSetting, IHandleChange } from \"@interfaces\";\nimport { SharedButton, SharedInput } from \"@components\";\nimport { useSetting } from \"@configs\";\n\ninterface IProps {\n    values: IUserSetting;\n    handleBlur: IHandleBlur;\n    handleChange: IHandleChange;\n    errors: FormikErrors<IUserSetting>;\n    touched: FormikTouched<IUserSetting>;\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement> | undefined) => void;\n    isSubmitting: boolean;\n    title: useSetting;\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IUserSetting>>;\n    handleChangePhoneNumber: (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string,\n        extension: string\n    ) => void;\n}\n\nexport const ComponentUserSettingSave = (props: IProps) => {\n    //page hooks\n    const { t } = useTranslation();\n    //page props\n    const {\n        values,\n        handleBlur,\n        handleChange,\n        errors,\n        touched,\n        handleSubmit,\n        isSubmitting,\n        title,\n        setFieldTouched,\n        handleChangePhoneNumber,\n    } = props;\n\n    const render = () => {\n        switch (title) {\n            case useSetting.FULL_NAME:\n                return t(\"page.user_detail.name\");\n                break;\n            case useSetting.PHONE_NUMBER:\n                return t(\"page.user_detail.phone_number\");\n                break;\n            case useSetting.EMAIL:\n                return t(\"page.user_detail.email\");\n                break;\n            case useSetting.DATE_OF_BIRTH:\n                return t(\"page.user_detail.date\");\n                break;\n            default:\n                return <></>;\n                break;\n        }\n    };\n\n    const renderName = () => {\n        switch (title) {\n            case useSetting.FULL_NAME:\n                return useSetting.FULL_NAME;\n                break;\n            case useSetting.PHONE_NUMBER:\n                return useSetting.PHONE_NUMBER;\n                break;\n            case useSetting.EMAIL:\n                return useSetting.EMAIL;\n                break;\n            default:\n                return \"\";\n                break;\n        }\n    };\n\n    return (\n        <StyledSettingSave>\n            <form onSubmit={handleSubmit}>\n                <div className=\"title\">{render()}</div>\n                {title !== useSetting.DATE_OF_BIRTH &&\n                    (title === useSetting.PHONE_NUMBER ? (\n                        <IntlTelInput\n                            defaultCountry=\"th\"\n                            preferredCountries={[\"fr\", \"gb\", \"es\", \"be\", \"de\"]}\n                            fieldId=\"phoneNumber\"\n                            fieldName=\"phoneNumber\"\n                            onPhoneNumberChange={handleChangePhoneNumber}\n                            onPhoneNumberBlur={() => {\n                                setFieldTouched(values[title].toString(), true);\n                            }}\n                            value={values[title] || \"\"}\n                            disabled={isSubmitting}\n                        />\n                    ) : (\n                        <StyledSharedInput\n                            name={renderName()}\n                            value={values[title]}\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            errors={errors[title]}\n                            touched={touched[title]}\n                        />\n                    ))}\n                <StyledSharedButton\n                    size=\"large\"\n                    bg_color=\"#05C755\"\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                >\n                    {t(\"page.auth.sign_up\")}\n                </StyledSharedButton>\n            </form>\n        </StyledSettingSave>\n    );\n};\n\nconst StyledSharedInput = styled(SharedInput)`\n    width: 90%;\n    margin: 0 auto;\n`;\n\nconst StyledSettingSave = styled.div`\n    text-align: center;\n    padding-top: 24px;\n    .title {\n        font-family: \"Roboto\", sans-serif;\n        font-style: normal;\n        font-weight: 600;\n        font-size: 14px;\n        color: #707070;\n        margin-bottom: 12px;\n    }\n`;\n\nconst StyledSharedButton = styled(SharedButton)`\n    width: 90%;\n`;\n"]},"metadata":{},"sourceType":"module"}