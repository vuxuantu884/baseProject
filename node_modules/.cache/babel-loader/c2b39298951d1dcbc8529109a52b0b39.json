{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { merchantApi } from \"@api\";\nimport { enumStatus, PATH_404, PATH_WELCOME } from \"@configs\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageTrafficSource = () => {\n  _s();\n\n  //page hook\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    merchantConfig();\n  }, []);\n\n  const merchantConfig = async () => {\n    if (id) {\n      const res = await merchantApi.getTrafficSourceId(id);\n      const data = res.data;\n      dispatch(setMerchantID(data.merchantId));\n      const merchantConfig = await merchantApi.getMerchantConfig();\n      const merchant = merchantConfig.data.merchant;\n\n      if (merchant.status !== enumStatus.ACTIVE) {\n        history.push(PATH_404);\n      }\n\n      dispatch(setMerchant(merchant));\n      dispatch(setMainColor(merchant.themeColor));\n      history.push(PATH_WELCOME);\n    } else {\n      history.push(PATH_404);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(PageTrafficSource, \"U0WG1d6005MY9IpWuPYNSa/UzxA=\", false, function () {\n  return [useDispatch, useParams, useHistory];\n});\n\n_c = PageTrafficSource;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageTrafficSource\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/TrafficSource.tsx"],"names":["useEffect","useDispatch","useHistory","useParams","setMainColor","setMerchant","setMerchantID","merchantApi","enumStatus","PATH_404","PATH_WELCOME","PageTrafficSource","dispatch","id","history","merchantConfig","res","getTrafficSourceId","data","merchantId","getMerchantConfig","merchant","status","ACTIVE","push","themeColor"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AAEA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,aAApC,QAAyD,QAAzD;AACA,SAASC,WAAT,QAA4B,MAA5B;AAEA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,YAA/B,QAAmD,UAAnD;;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACnC;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAMW,OAAO,GAAGZ,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AAC/B,QAAIF,EAAJ,EAAQ;AACJ,YAAMG,GAAG,GAAG,MAAMT,WAAW,CAACU,kBAAZ,CAA+BJ,EAA/B,CAAlB;AACA,YAAMK,IAAI,GAAGF,GAAG,CAACE,IAAjB;AACAN,MAAAA,QAAQ,CAACN,aAAa,CAACY,IAAI,CAACC,UAAN,CAAd,CAAR;AACA,YAAMJ,cAAc,GAAG,MAAMR,WAAW,CAACa,iBAAZ,EAA7B;AACA,YAAMC,QAAQ,GAAGN,cAAc,CAACG,IAAf,CAAoBG,QAArC;;AACA,UAAIA,QAAQ,CAACC,MAAT,KAAoBd,UAAU,CAACe,MAAnC,EAA2C;AACvCT,QAAAA,OAAO,CAACU,IAAR,CAAaf,QAAb;AACH;;AACDG,MAAAA,QAAQ,CAACP,WAAW,CAACgB,QAAD,CAAZ,CAAR;AACAT,MAAAA,QAAQ,CAACR,YAAY,CAACiB,QAAQ,CAACI,UAAV,CAAb,CAAR;AACAX,MAAAA,OAAO,CAACU,IAAR,CAAad,YAAb;AACH,KAZD,MAYO;AACHI,MAAAA,OAAO,CAACU,IAAR,CAAaf,QAAb;AACH;AACJ,GAhBD;;AAiBA,sBAAO,qCAAP;AACH,CA5BM;;GAAME,iB;UAEQV,W,EACFE,S,EACCD,U;;;KAJPS,iB","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\n\nimport { setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { merchantApi } from \"@api\";\nimport { IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport { enumStatus, PATH_404, PATH_WELCOME } from \"@configs\";\n\nexport const PageTrafficSource = () => {\n    //page hook\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n\n    useEffect(() => {\n        merchantConfig();\n    }, []);\n\n    const merchantConfig = async () => {\n        if (id) {\n            const res = await merchantApi.getTrafficSourceId(id);\n            const data = res.data as IMerchantQRcode;\n            dispatch(setMerchantID(data.merchantId));\n            const merchantConfig = await merchantApi.getMerchantConfig();\n            const merchant = merchantConfig.data.merchant as IMerchant;\n            if (merchant.status !== enumStatus.ACTIVE) {\n                history.push(PATH_404);\n            }\n            dispatch(setMerchant(merchant));\n            dispatch(setMainColor(merchant.themeColor));\n            history.push(PATH_WELCOME);\n        } else {\n            history.push(PATH_404);\n        }\n    };\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}