{"ast":null,"code":"// a little function to help us with reordering the result\nexport const reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\nexport const SharedReOrderQuoteMap = _ref => {\n  let {\n    quoteMap,\n    source,\n    destination\n  } = _ref;\n  const current = [...quoteMap[source.droppableId]];\n  const next = [...quoteMap[destination.droppableId]];\n  const target = current[source.index];\n\n  if (source.droppableId === destination.droppableId) {\n    const reordered = reorder(current, source.index, destination.index);\n    const result = { ...quoteMap,\n      [source.droppableId]: reordered\n    };\n    return {\n      quoteMap: result\n    };\n  }\n\n  current.splice(source.index, 1);\n  next.splice(destination.index, 0, target);\n  const result = { ...quoteMap,\n    [source.droppableId]: current,\n    [destination.droppableId]: next\n  };\n  return {\n    quoteMap: result\n  };\n};\n_c = SharedReOrderQuoteMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"SharedReOrderQuoteMap\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/Shared/TaskBoard/ReOrder.tsx"],"names":["reorder","list","startIndex","endIndex","result","Array","from","removed","splice","SharedReOrderQuoteMap","quoteMap","source","destination","current","droppableId","next","target","index","reordered"],"mappings":"AAAA;AAEA,OAAO,MAAMA,OAAO,GAAG,CAACC,IAAD,EAAcC,UAAd,EAAkCC,QAAlC,KAAuD;AAC1E,QAAMC,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAWL,IAAX,CAAf;AACA,QAAM,CAACM,OAAD,IAAYH,MAAM,CAACI,MAAP,CAAcN,UAAd,EAA0B,CAA1B,CAAlB;AACAE,EAAAA,MAAM,CAACI,MAAP,CAAcL,QAAd,EAAwB,CAAxB,EAA2BI,OAA3B;AAEA,SAAOH,MAAP;AACH,CANM;AAcP,OAAO,MAAMK,qBAAqB,GAAG,QAA4D;AAAA,MAA3D;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,GAA2D;AAC7F,QAAMC,OAAO,GAAG,CAAC,GAAGH,QAAQ,CAACC,MAAM,CAACG,WAAR,CAAZ,CAAhB;AACA,QAAMC,IAAI,GAAG,CAAC,GAAGL,QAAQ,CAACE,WAAW,CAACE,WAAb,CAAZ,CAAb;AACA,QAAME,MAAM,GAAGH,OAAO,CAACF,MAAM,CAACM,KAAR,CAAtB;;AAEA,MAAIN,MAAM,CAACG,WAAP,KAAuBF,WAAW,CAACE,WAAvC,EAAoD;AAChD,UAAMI,SAAS,GAAGlB,OAAO,CAACa,OAAD,EAAUF,MAAM,CAACM,KAAjB,EAAwBL,WAAW,CAACK,KAApC,CAAzB;AACA,UAAMb,MAAM,GAAG,EACX,GAAGM,QADQ;AAEX,OAACC,MAAM,CAACG,WAAR,GAAsBI;AAFX,KAAf;AAIA,WAAO;AACHR,MAAAA,QAAQ,EAAEN;AADP,KAAP;AAGH;;AAEDS,EAAAA,OAAO,CAACL,MAAR,CAAeG,MAAM,CAACM,KAAtB,EAA6B,CAA7B;AACAF,EAAAA,IAAI,CAACP,MAAL,CAAYI,WAAW,CAACK,KAAxB,EAA+B,CAA/B,EAAkCD,MAAlC;AAEA,QAAMZ,MAAM,GAAG,EACX,GAAGM,QADQ;AAEX,KAACC,MAAM,CAACG,WAAR,GAAsBD,OAFX;AAGX,KAACD,WAAW,CAACE,WAAb,GAA2BC;AAHhB,GAAf;AAMA,SAAO;AACHL,IAAAA,QAAQ,EAAEN;AADP,GAAP;AAGH,CA5BM;KAAMK,qB","sourcesContent":["// a little function to help us with reordering the result\n\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n};\n\ninterface ISharedReOrderProps {\n    quoteMap: any;\n    source: any;\n    destination: any;\n}\n\nexport const SharedReOrderQuoteMap = ({ quoteMap, source, destination }: ISharedReOrderProps) => {\n    const current = [...quoteMap[source.droppableId]];\n    const next = [...quoteMap[destination.droppableId]];\n    const target = current[source.index];\n\n    if (source.droppableId === destination.droppableId) {\n        const reordered = reorder(current, source.index, destination.index);\n        const result = {\n            ...quoteMap,\n            [source.droppableId]: reordered,\n        };\n        return {\n            quoteMap: result,\n        };\n    }\n\n    current.splice(source.index, 1);\n    next.splice(destination.index, 0, target);\n\n    const result = {\n        ...quoteMap,\n        [source.droppableId]: current,\n        [destination.droppableId]: next,\n    };\n\n    return {\n        quoteMap: result,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}