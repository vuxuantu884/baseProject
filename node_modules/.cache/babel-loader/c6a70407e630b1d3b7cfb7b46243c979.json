{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport queryString from \"querystring\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { enumExternalMethod, PATH_SIGN_IN } from \"@configs\";\nimport { logout, setExternalLogin } from \"@redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageLineLogin = () => {\n  _s();\n\n  //page hook\n  const dispatch = useDispatch();\n  const history = useHistory(); //page variable\n\n  const queryParams = queryString.parse(window.location.search.substring(1));\n  console.log(queryParams.state.toString());\n  useEffect(() => {\n    if (queryParams.code) {\n      if (queryParams.state) {\n        dispatch(setExternalLogin({\n          type: enumExternalMethod.LINE,\n          isSignUp: false,\n          line: {\n            code: queryParams.code.toString(),\n            state: queryParams.state.toString()\n          }\n        }));\n        history.push(PATH_SIGN_IN);\n      } else {\n        dispatch(logout());\n      }\n    } else {\n      dispatch(logout());\n    }\n  }, [queryParams]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(PageLineLogin, \"ttHHWC+EsJmhGbpqXwDwA2EruUw=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = PageLineLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageLineLogin\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/authentication/LineLogin.tsx"],"names":["queryString","useEffect","useDispatch","useHistory","enumExternalMethod","PATH_SIGN_IN","logout","setExternalLogin","PageLineLogin","dispatch","history","queryParams","parse","window","location","search","substring","console","log","state","toString","code","type","LINE","isSignUp","line","push"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,UAAjD;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,QAAzC;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC/B;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B,CAH+B,CAI/B;;AACA,QAAMQ,WAAW,GAAGX,WAAW,CAACY,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,CAAlB,CAApB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACQ,KAAZ,CAAkBC,QAAlB,EAAZ;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,WAAW,CAACU,IAAhB,EAAsB;AAClB,UAAIV,WAAW,CAACQ,KAAhB,EAAuB;AACnBV,QAAAA,QAAQ,CACJF,gBAAgB,CAAC;AACbe,UAAAA,IAAI,EAAElB,kBAAkB,CAACmB,IADZ;AAEbC,UAAAA,QAAQ,EAAE,KAFG;AAGbC,UAAAA,IAAI,EAAE;AACFJ,YAAAA,IAAI,EAAEV,WAAW,CAACU,IAAZ,CAAiBD,QAAjB,EADJ;AAEFD,YAAAA,KAAK,EAAER,WAAW,CAACQ,KAAZ,CAAkBC,QAAlB;AAFL;AAHO,SAAD,CADZ,CAAR;AAUAV,QAAAA,OAAO,CAACgB,IAAR,CAAarB,YAAb;AACH,OAZD,MAYO;AACHI,QAAAA,QAAQ,CAACH,MAAM,EAAP,CAAR;AACH;AACJ,KAhBD,MAgBO;AACHG,MAAAA,QAAQ,CAACH,MAAM,EAAP,CAAR;AACH;AACJ,GApBQ,EAoBN,CAACK,WAAD,CApBM,CAAT;AAsBA,sBAAO,qCAAP;AACH,CA/BM;;GAAMH,a;UAEQN,W,EACDC,U;;;KAHPK,a","sourcesContent":["import queryString from \"querystring\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { enumExternalMethod, PATH_SIGN_IN } from \"@configs\";\nimport { logout, setExternalLogin } from \"@redux\";\n\nexport const PageLineLogin = () => {\n    //page hook\n    const dispatch = useDispatch();\n    const history = useHistory();\n    //page variable\n    const queryParams = queryString.parse(window.location.search.substring(1));\n\n    console.log(queryParams.state.toString());\n    useEffect(() => {\n        if (queryParams.code) {\n            if (queryParams.state) {\n                dispatch(\n                    setExternalLogin({\n                        type: enumExternalMethod.LINE,\n                        isSignUp: false,\n                        line: {\n                            code: queryParams.code.toString(),\n                            state: queryParams.state.toString(),\n                        },\n                    })\n                );\n                history.push(PATH_SIGN_IN);\n            } else {\n                dispatch(logout());\n            }\n        } else {\n            dispatch(logout());\n        }\n    }, [queryParams]);\n\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}