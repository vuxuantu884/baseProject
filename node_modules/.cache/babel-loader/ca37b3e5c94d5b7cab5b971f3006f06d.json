{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { theme } from \"@utils\";\nconst initialState = {\n  name: \"\",\n  themeColor: \"\",\n  subColor: \"\",\n  logoUrl: \"\",\n  trafficSourceId: \"\",\n  liffId: \"\"\n};\nconst colorThemes = theme.colors.colorThemes;\nconst merchant = createSlice({\n  name: \"merchant\",\n  initialState,\n  reducers: {\n    setMainColor: (state, action) => {\n      state.themeColor = action.payload;\n      colorThemes.forEach(color => {\n        if (action.payload === color.main) {\n          state.subColor = color.sub;\n        }\n      });\n    },\n    setMerchant: (state, action) => {\n      return action.payload;\n    },\n    setTrafficSourceId: (state, action) => {\n      state.trafficSourceId = action.payload;\n    },\n    setLiffId: (state, action) => {\n      state.liffId = action.payload;\n    }\n  }\n});\nexport const selectMerchant = state => state.merchant;\nexport const {\n  setMainColor,\n  setMerchant,\n  setTrafficSourceId,\n  setLiffId\n} = merchant.actions;\nexport default merchant.reducer;","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Redux/Slices/merchant.ts"],"names":["createSlice","theme","initialState","name","themeColor","subColor","logoUrl","trafficSourceId","liffId","colorThemes","colors","merchant","reducers","setMainColor","state","action","payload","forEach","color","main","sub","setMerchant","setTrafficSourceId","setLiffId","selectMerchant","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAKA,SAASC,KAAT,QAAsB,QAAtB;AAEA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,IAAI,EAAE,EADsB;AAE5BC,EAAAA,UAAU,EAAE,EAFgB;AAG5BC,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,OAAO,EAAE,EAJmB;AAK5BC,EAAAA,eAAe,EAAC,EALY;AAM5BC,EAAAA,MAAM,EAAE;AANoB,CAAhC;AASA,MAAMC,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaD,WAAjC;AAEA,MAAME,QAAQ,GAAGX,WAAW,CAAC;AACzBG,EAAAA,IAAI,EAAE,UADmB;AAEzBD,EAAAA,YAFyB;AAGzBU,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AACpDD,MAAAA,KAAK,CAACV,UAAN,GAAmBW,MAAM,CAACC,OAA1B;AACAP,MAAAA,WAAW,CAACQ,OAAZ,CAAqBC,KAAD,IAAW;AAC3B,YAAIH,MAAM,CAACC,OAAP,KAAmBE,KAAK,CAACC,IAA7B,EAAmC;AAC/BL,UAAAA,KAAK,CAACT,QAAN,GAAiBa,KAAK,CAACE,GAAvB;AACH;AACJ,OAJD;AAKH,KARK;AASNC,IAAAA,WAAW,EAAE,CAACP,KAAD,EAAQC,MAAR,KAA6C;AACtD,aAAOA,MAAM,CAACC,OAAd;AACH,KAXK;AAYNM,IAAAA,kBAAkB,EAAE,CAACR,KAAD,EAAQC,MAAR,KAA0C;AAC1DD,MAAAA,KAAK,CAACP,eAAN,GAAwBQ,MAAM,CAACC,OAA/B;AACH,KAdK;AAeNO,IAAAA,SAAS,EAAE,CAACT,KAAD,EAAQC,MAAR,KAA0C;AACjDD,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACH;AAjBK;AAHe,CAAD,CAA5B;AAwBA,OAAO,MAAMQ,cAAc,GAAIV,KAAD,IAAsBA,KAAK,CAACH,QAAnD;AAEP,OAAO,MAAM;AAAEE,EAAAA,YAAF;AAAgBQ,EAAAA,WAAhB;AAA8BC,EAAAA,kBAA9B;AAAkDC,EAAAA;AAAlD,IAA+DZ,QAAQ,CAACc,OAA9E;AAEP,eAAed,QAAQ,CAACe,OAAxB","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { IMerchant } from \"@interfaces\";\n\nimport { RootState } from \".\";\nimport { theme } from \"@utils\";\n\nconst initialState: IMerchant = {\n    name: \"\",\n    themeColor: \"\",\n    subColor: \"\",\n    logoUrl: \"\",\n    trafficSourceId:\"\",\n    liffId: \"\",\n\n};\nconst colorThemes = theme.colors.colorThemes;\n\nconst merchant = createSlice({\n    name: \"merchant\",\n    initialState,\n    reducers: {\n        setMainColor: (state, action: PayloadAction<string>) => {\n            state.themeColor = action.payload;\n            colorThemes.forEach((color) => {\n                if (action.payload === color.main) {\n                    state.subColor = color.sub;\n                }\n            });\n        },\n        setMerchant: (state, action: PayloadAction<IMerchant>) => {\n            return action.payload;\n        },\n        setTrafficSourceId: (state, action: PayloadAction<string>) => {\n            state.trafficSourceId = action.payload;\n        },\n        setLiffId: (state, action: PayloadAction<string>) => {\n            state.liffId = action.payload;\n        },\n    },\n});\n\nexport const selectMerchant = (state: RootState) => state.merchant;\n\nexport const { setMainColor, setMerchant , setTrafficSourceId, setLiffId} = merchant.actions;\n\nexport default merchant.reducer;\n"]},"metadata":{},"sourceType":"module"}