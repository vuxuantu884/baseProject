{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/SocialMedia.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { ComponentSocialMedia } from \"@components\";\nimport { selectMerchant } from \"@redux\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleSocialMedia = props => {\n  _s();\n\n  //page props\n  const {\n    state\n  } = props; //page hook\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify(); //redux page\n\n  const {\n    signUpSettings\n  } = useSelector(selectMerchant); //page variable\n\n  const signUpMethods = signUpSettings === null || signUpSettings === void 0 ? void 0 : signUpSettings.signUpMethods;\n  useEffect(() => {//\n  }, [signUpMethods]);\n\n  const errorHandler = errors => {\n    //handle Error\n    if (errors.response) {\n      const {\n        data,\n        status\n      } = errors.response;\n\n      if ((data === null || data === void 0 ? void 0 : data.message) && status !== 500) {\n        error(data === null || data === void 0 ? void 0 : data.message);\n      } else {\n        error(t(\"page.auth.sign_in_failed\"));\n      }\n\n      dispatch(logout());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ComponentSocialMedia, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ModuleSocialMedia, \"zxqB249Le2+FVSpPdme54tZSGrI=\", true, function () {\n  return [useSelector];\n});\n\n_c = ModuleSocialMedia;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleSocialMedia\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/SocialMedia.tsx"],"names":["useSelector","ComponentSocialMedia","selectMerchant","useEffect","ModuleSocialMedia","props","state","t","useTranslation","dispatch","useDispatch","error","useNotify","signUpSettings","signUpMethods","errorHandler","errors","response","data","status","message","logout"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,oBAAT,QAAqC,aAArC;AAEA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAMA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAmB;AAAA;;AAChD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,KAAlB,CAFgD,CAGhD;;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAQC,cAAc,EAA5B;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYC,SAAS,EAA3B,CANgD,CAOhD;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAqBb,WAAW,CAACE,cAAD,CAAtC,CARgD,CAShD;;AACA,QAAMY,aAAa,GAAGD,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEC,aAAtC;AAEAX,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACW,aAAD,CAFM,CAAT;;AAIA,QAAMC,YAAY,GAAIC,MAAD,IAAiB;AAClC;AACA,QAAIA,MAAM,CAACC,QAAX,EAAqB;AACjB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAmBH,MAAM,CAACC,QAAhC;;AACA,UAAI,CAAAC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,OAAN,KAAiBD,MAAM,KAAK,GAAhC,EAAqC;AACjCR,QAAAA,KAAK,CAACO,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,OAAP,CAAL;AACH,OAFD,MAEO;AACHT,QAAAA,KAAK,CAACJ,CAAC,CAAC,0BAAD,CAAF,CAAL;AACH;;AACDE,MAAAA,QAAQ,CAACY,MAAM,EAAP,CAAR;AACH;AACJ,GAXD;;AAaA,sBAAO,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA9BM;;GAAMjB,iB;UAQkBJ,W;;;KARlBI,iB","sourcesContent":["import { useSelector } from \"react-redux\";\n\nimport { ComponentSocialMedia } from \"@components\";\nimport { IExternalAuthState } from \"@interfaces\";\nimport { selectMerchant } from \"@redux\";\nimport { useEffect } from \"react\";\n\ninterface IProps {\n    state: IExternalAuthState;\n}\n\nexport const ModuleSocialMedia = (props: IProps) => {\n    //page props\n    const { state } = props;\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    //redux page\n    const { signUpSettings } = useSelector(selectMerchant);\n    //page variable\n    const signUpMethods = signUpSettings?.signUpMethods;\n\n    useEffect(() => {\n        //\n    }, [signUpMethods]);\n\n    const errorHandler = (errors: any) => {\n        //handle Error\n        if (errors.response) {\n            const { data, status } = errors.response;\n            if (data?.message && status !== 500) {\n                error(data?.message);\n            } else {\n                error(t(\"page.auth.sign_in_failed\"));\n            }\n            dispatch(logout());\n        }\n    };\n\n    return <ComponentSocialMedia />;\n};\n"]},"metadata":{},"sourceType":"module"}