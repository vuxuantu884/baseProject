{"ast":null,"code":"import IntlTelInput from\"react-intl-tel-input\";import{useTranslation}from\"react-i18next\";import{StyledError}from\"@components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SharedIntlTelInput=function SharedIntlTelInput(props){//page hooks\nvar _useTranslation=useTranslation(),t=_useTranslation.t;//page props\nvar setFieldTouched=props.setFieldTouched,value=props.value,isSubmitting=props.isSubmitting,errorPhone=props.errorPhone,setFieldValue=props.setFieldValue,setError=props.setError;var handleSelectFlag=function handleSelectFlag(currentNumber,selectedCountryData,fullNumber){setFieldValue(\"phoneNumber\",currentNumber.replace(/(\\s|-)/g,\"\"));setFieldValue(\"phone\",fullNumber.replace(/(\\s|-)/g,\"\"));};var handleChangePhoneNumber=function handleChangePhoneNumber(isValid,value,selectedCountryData,fullNumber){if(!isValid)setError(t(\"validation.isNumber\"));else{setError(\"\");}setFieldValue(\"phoneNumber\",value);setFieldValue(\"phone\",fullNumber.replace(/(\\s|-)/g,\"\"));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IntlTelInput,{defaultCountry:\"th\",preferredCountries:[\"th\",\"vn\"],fieldId:\"phoneNumber\",fieldName:\"phoneNumber\",onPhoneNumberChange:handleChangePhoneNumber,onPhoneNumberBlur:function onPhoneNumberBlur(){setFieldTouched(value||\"\",true);},onSelectFlag:handleSelectFlag,value:value,disabled:isSubmitting,autoFocus:true}),errorPhone&&/*#__PURE__*/_jsx(StyledError,{visible:true,children:errorPhone})]});};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/InputTel.tsx"],"names":["IntlTelInput","useTranslation","StyledError","SharedIntlTelInput","props","t","setFieldTouched","value","isSubmitting","errorPhone","setFieldValue","setError","handleSelectFlag","currentNumber","selectedCountryData","fullNumber","replace","handleChangePhoneNumber","isValid"],"mappings":"AAAA,MAAOA,CAAAA,YAAP,KAA0C,sBAA1C,CACA,OAASC,cAAT,KAA+B,eAA/B,CAEA,OAASC,WAAT,KAA4B,aAA5B,C,6IAiBA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAmB,CACjD;AACA,oBAAcH,cAAc,EAA5B,CAAQI,CAAR,iBAAQA,CAAR,CACA;AACA,GAAQC,CAAAA,eAAR,CAAsFF,KAAtF,CAAQE,eAAR,CAAyBC,KAAzB,CAAsFH,KAAtF,CAAyBG,KAAzB,CAAgCC,YAAhC,CAAsFJ,KAAtF,CAAgCI,YAAhC,CAA8CC,UAA9C,CAAsFL,KAAtF,CAA8CK,UAA9C,CAA0DC,aAA1D,CAAsFN,KAAtF,CAA0DM,aAA1D,CAAyEC,QAAzE,CAAsFP,KAAtF,CAAyEO,QAAzE,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CACrBC,aADqB,CAErBC,mBAFqB,CAGrBC,UAHqB,CAIpB,CACDL,aAAa,CAAC,aAAD,CAAgBG,aAAa,CAACG,OAAd,CAAsB,SAAtB,CAAiC,EAAjC,CAAhB,CAAb,CACAN,aAAa,CAAC,OAAD,CAAUK,UAAU,CAACC,OAAX,CAAmB,SAAnB,CAA8B,EAA9B,CAAV,CAAb,CACH,CAPD,CASA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAC5BC,OAD4B,CAE5BX,KAF4B,CAG5BO,mBAH4B,CAI5BC,UAJ4B,CAK3B,CACD,GAAI,CAACG,OAAL,CAAcP,QAAQ,CAACN,CAAC,CAAC,qBAAD,CAAF,CAAR,CAAd,IACK,CACDM,QAAQ,CAAC,EAAD,CAAR,CACH,CAEDD,aAAa,CAAC,aAAD,CAAgBH,KAAhB,CAAb,CACAG,aAAa,CAAC,OAAD,CAAUK,UAAU,CAACC,OAAX,CAAmB,SAAnB,CAA8B,EAA9B,CAAV,CAAb,CACH,CAbD,CAeA,mBACI,wCACI,KAAC,YAAD,EACI,cAAc,CAAE,IADpB,CAEI,kBAAkB,CAAE,CAAC,IAAD,CAAO,IAAP,CAFxB,CAGI,OAAO,CAAC,aAHZ,CAII,SAAS,CAAC,aAJd,CAKI,mBAAmB,CAAEC,uBALzB,CAMI,iBAAiB,CAAE,4BAAM,CACrBX,eAAe,CAACC,KAAK,EAAI,EAAV,CAAc,IAAd,CAAf,CACH,CARL,CASI,YAAY,CAAEK,gBATlB,CAUI,KAAK,CAAEL,KAVX,CAWI,QAAQ,CAAEC,YAXd,CAYI,SAAS,CAAE,IAZf,EADJ,CAeKC,UAAU,eAAI,KAAC,WAAD,EAAa,OAAO,CAAE,IAAtB,UAA6BA,UAA7B,EAfnB,GADJ,CAmBH,CAjDM","sourcesContent":["import IntlTelInput, { CountryData } from \"react-intl-tel-input\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { StyledError } from \"@components\";\nimport { FormikErrors } from \"formik\";\nimport { IEmailForm, IPhone, IUserSetting } from \"@interfaces\";\n\ninterface IProps {\n    setFieldTouched: (\n        field: string,\n        touched?: boolean | undefined,\n        shouldValidate?: boolean | undefined\n    ) => Promise<void> | Promise<FormikErrors<IUserSetting | IEmailForm | IPhone>>;\n    setFieldValue: any;\n    value: string;\n    isSubmitting: boolean;\n    errorPhone: string;\n    setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const SharedIntlTelInput = (props: IProps) => {\n    //page hooks\n    const { t } = useTranslation();\n    //page props\n    const { setFieldTouched, value, isSubmitting, errorPhone, setFieldValue, setError } = props;\n\n    const handleSelectFlag = (\n        currentNumber: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        setFieldValue(\"phoneNumber\", currentNumber.replace(/(\\s|-)/g, \"\"));\n        setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    const handleChangePhoneNumber = (\n        isValid: boolean,\n        value: string,\n        selectedCountryData: CountryData,\n        fullNumber: string\n    ) => {\n        if (!isValid) setError(t(\"validation.isNumber\"));\n        else {\n            setError(\"\");\n        }\n\n        setFieldValue(\"phoneNumber\", value);\n        setFieldValue(\"phone\", fullNumber.replace(/(\\s|-)/g, \"\"));\n    };\n\n    return (\n        <>\n            <IntlTelInput\n                defaultCountry={\"th\"}\n                preferredCountries={[\"th\", \"vn\"]}\n                fieldId=\"phoneNumber\"\n                fieldName=\"phoneNumber\"\n                onPhoneNumberChange={handleChangePhoneNumber}\n                onPhoneNumberBlur={() => {\n                    setFieldTouched(value || \"\", true);\n                }}\n                onSelectFlag={handleSelectFlag}\n                value={value}\n                disabled={isSubmitting}\n                autoFocus={true}\n            />\n            {errorPhone && <StyledError visible={true}>{errorPhone}</StyledError>}\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}