{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/email/Sign.tsx\",\n    _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ComponentSignUpEmail } from \"@components\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"@redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModuleEmailSignUp = props => {\n  _s();\n\n  //page props\n  const {\n    socials\n  } = props; //page hooks\n\n  const {\n    YubEmailSignUp\n  } = useYup();\n  const dispatch = useDispatch(); //page variable\n\n  const initialValues = {\n    email: \"\"\n  };\n  const registerSchema = Yup.object().shape(YubEmailSignUp);\n\n  const handleRegister = async (values, _ref) => {\n    let {\n      setSubmitting\n    } = _ref;\n\n    //\n    try {\n      setSubmitting(true);\n      dispatch(setLoading(true));\n      const res = await authApi.registerEmail(values.email);\n    } catch (error) {} finally {\n      setSubmitting(true);\n    }\n  };\n\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    errors,\n    touched\n  } = useFormik({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: handleRegister\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComponentSignUpEmail, {\n      handleBlur: handleBlur,\n      handleChange: handleChange,\n      errors: errors,\n      touched: touched,\n      values: values,\n      socials: socials,\n      handleSubmit: handleSubmit,\n      isSubmitting: isSubmitting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModuleEmailSignUp, \"fnjhjZM7rXnr2pSMc30WjL7WEDI=\", false, function () {\n  return [useYup, useDispatch, useFormik];\n});\n\n_c = ModuleEmailSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModuleEmailSignUp\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/email/Sign.tsx"],"names":["useFormik","Yup","ComponentSignUpEmail","useYup","authApi","useDispatch","setLoading","ModuleEmailSignUp","props","socials","YubEmailSignUp","dispatch","initialValues","email","registerSchema","object","shape","handleRegister","values","setSubmitting","res","registerEmail","error","handleChange","handleBlur","handleSubmit","isSubmitting","errors","touched","validationSchema","onSubmit"],"mappings":";;;AAAA,SAASA,SAAT,QAAyC,QAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,oBAAT,QAAqC,aAArC;AAEA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,QAA3B;;;AAMA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAmB;AAAA;;AAChD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB,CAFgD,CAGhD;;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAqBP,MAAM,EAAjC;AACA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B,CALgD,CAMhD;;AACA,QAAMO,aAAqB,GAAG;AAC1BC,IAAAA,KAAK,EAAE;AADmB,GAA9B;AAGA,QAAMC,cAAc,GAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmBN,cAAnB,CAAvB;;AAEA,QAAMO,cAAc,GAAG,OAAOC,MAAP,WAAoE;AAAA,QAA7C;AAAEC,MAAAA;AAAF,KAA6C;;AACvF;AACA,QAAI;AACAA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAR,MAAAA,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMc,GAAG,GAAG,MAAMhB,OAAO,CAACiB,aAAR,CAAsBH,MAAM,CAACL,KAA7B,CAAlB;AACH,KAJD,CAIE,OAAOS,KAAP,EAAc,CACf,CALD,SAKU;AACNH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAVD;;AAWA,QAAM;AAAED,IAAAA,MAAF;AAAUK,IAAAA,YAAV;AAAwBC,IAAAA,UAAxB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,YAAlD;AAAgEC,IAAAA,MAAhE;AAAwEC,IAAAA;AAAxE,MACF5B,SAAS,CAAC;AACNY,IAAAA,aAAa,EAAEA,aADT;AAENiB,IAAAA,gBAAgB,EAAEf,cAFZ;AAGNgB,IAAAA,QAAQ,EAAEb;AAHJ,GAAD,CADb;AAMA,sBACI;AAAA,2BACI,QAAC,oBAAD;AACI,MAAA,UAAU,EAAEO,UADhB;AAEI,MAAA,YAAY,EAAED,YAFlB;AAGI,MAAA,MAAM,EAAEI,MAHZ;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,MAAM,EAAEV,MALZ;AAMI,MAAA,OAAO,EAAET,OANb;AAOI,MAAA,YAAY,EAAEgB,YAPlB;AAQI,MAAA,YAAY,EAAEC;AARlB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAcH,CA3CM;;GAAMnB,iB;UAIkBJ,M,EACVE,W,EAmBbL,S;;;KAxBKO,iB","sourcesContent":["import { useFormik, FormikHelpers } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { ComponentSignUpEmail } from \"@components\";\nimport { IEmail } from \"@interfaces\";\nimport { useYup } from \"@validations\";\nimport { authApi } from \"@api\";\nimport { useDispatch } from \"react-redux\";\nimport { setLoading } from \"@redux\";\n\ninterface IProps {\n    socials: JSX.Element[];\n}\n\nexport const ModuleEmailSignUp = (props: IProps) => {\n    //page props\n    const { socials } = props;\n    //page hooks\n    const { YubEmailSignUp } = useYup();\n    const dispatch = useDispatch();\n    //page variable\n    const initialValues: IEmail = {\n        email: \"\",\n    };\n    const registerSchema = Yup.object().shape(YubEmailSignUp);\n\n    const handleRegister = async (values: IEmail, { setSubmitting }: FormikHelpers<IEmail>) => {\n        //\n        try {\n            setSubmitting(true);\n            dispatch(setLoading(true));\n            const res = await authApi.registerEmail(values.email);\n        } catch (error) {\n        } finally {\n            setSubmitting(true);\n        }\n    };\n    const { values, handleChange, handleBlur, handleSubmit, isSubmitting, errors, touched } =\n        useFormik({\n            initialValues: initialValues,\n            validationSchema: registerSchema,\n            onSubmit: handleRegister,\n        });\n    return (\n        <>\n            <ComponentSignUpEmail\n                handleBlur={handleBlur}\n                handleChange={handleChange}\n                errors={errors}\n                touched={touched}\n                values={values}\n                socials={socials}\n                handleSubmit={handleSubmit}\n                isSubmitting={isSubmitting}\n            />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}