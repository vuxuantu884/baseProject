{"ast":null,"code":"import axiosClient from\"./axiosClient\";import{GOOGLE_USER_INFO}from\"@configs\";export var authApi={login:function login(params){var url=\"/auth/login\";return axiosClient.post(url,params);},getInfo:function getInfo(){var url=\"/users/profile/user\";return axiosClient.get(url);},updateProfile:function updateProfile(values){var url=\"users/profile\";return axiosClient.put(url,values);},refreshToken:function refreshToken(_refreshToken){var url=\"/auth/login-refresh-token\";var params={refreshToken:_refreshToken};return axiosClient.post(url,params);},lineLogin:function lineLogin(params){var url=\"/auth/line-login\";return axiosClient.post(url,params);},lineSignup:function lineSignup(params){var url=\"/auth/line-signup\";return axiosClient.post(url,params);},fbLogin:function fbLogin(params){var url=\"/auth/facebook-login\";return axiosClient.post(url,params);},fbSignup:function fbSignup(params){var url=\"/auth/facebook-signup\";return axiosClient.post(url,params);},//google\nggLogin:function ggLogin(params){var url=\"/auth/google-login\";return axiosClient.post(url,params);},ggSignup:function ggSignup(params){var url=\"/auth/google-signup\";return axiosClient.post(url,params);},getUserInfoByGg:function getUserInfoByGg(params){var url=GOOGLE_USER_INFO;return axiosClient.get(url,{params:params});},changePassword:function changePassword(values){var url=\"users/merchant/password\";return axiosClient.put(url,values);},registerEmail:function registerEmail(email){var url=\"/auth/register\";var params={email:email};return axiosClient.post(url,params);},sendResetPassword:function sendResetPassword(email){var url=\"/auth/send-reset-password\";var params={email:email};return axiosClient.post(url,params);},resetPassword:function resetPassword(values){var url=\"/auth/reset-password\";return axiosClient.put(url,values);},registerPhone:function registerPhone(value){var url=\"/auth/twilio-signup\";return axiosClient.post(url,value);},loginPhone:function loginPhone(value){var url=\"/auth/twilio-login\";return axiosClient.post(url,value);},verifyPhone:function verifyPhone(value){var url=\"/auth/twilio-verify\";return axiosClient.post(url,value);},resendPhone:function resendPhone(value){var url=\"/auth/resend-phone\";return axiosClient.post(url,value);},createPassword:function createPassword(values){var url=\"/auth/sign-up/form\";return axiosClient.put(url,values);}};","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/API/auth.ts"],"names":["axiosClient","GOOGLE_USER_INFO","authApi","login","params","url","post","getInfo","get","updateProfile","values","put","refreshToken","lineLogin","lineSignup","fbLogin","fbSignup","ggLogin","ggSignup","getUserInfoByGg","changePassword","registerEmail","email","sendResetPassword","resetPassword","registerPhone","value","loginPhone","verifyPhone","resendPhone","createPassword"],"mappings":"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","sourcesContent":["import { IFBLogin, IGGLogin } from \"./../Interfaces/auth\";\nimport axiosClient from \"./axiosClient\";\nimport {\n    ILogin,\n    ILineLogin,\n    IChangePassword,\n    ILineSignup,\n    IFBSignup,\n    IGGSignup,\n    IEmailForm,\n    IPhone,\n    ISocialMedia,\n    IResetPassword,\n    IUserSetting,\n    IPagination,\n} from \"@interfaces\";\nimport { GOOGLE_USER_INFO } from \"@configs\";\n\nexport const authApi = {\n    login: (params: ILogin) => {\n        const url = \"/auth/login\";\n        return axiosClient.post(url, params);\n    },\n    getInfo: () => {\n        const url = \"/users/profile/user\";\n        return axiosClient.get(url);\n    },\n    updateProfile: (values: IUserSetting) => {\n        const url = \"users/profile\";\n        return axiosClient.put(url, values);\n    },\n    refreshToken: (refreshToken: string) => {\n        const url = \"/auth/login-refresh-token\";\n        const params = {\n            refreshToken,\n        };\n        return axiosClient.post(url, params);\n    },\n    lineLogin(params: ILineLogin) {\n        const url = \"/auth/line-login\";\n        return axiosClient.post(url, params);\n    },\n    lineSignup(params: ILineSignup) {\n        const url = \"/auth/line-signup\";\n        return axiosClient.post(url, params);\n    },\n    fbLogin(params: IFBLogin) {\n        const url = \"/auth/facebook-login\";\n        return axiosClient.post(url, params);\n    },\n    fbSignup(params: IFBSignup) {\n        const url = \"/auth/facebook-signup\";\n        return axiosClient.post(url, params);\n    },\n    //google\n    ggLogin(params: IGGLogin) {\n        const url = \"/auth/google-login\";\n        return axiosClient.post(url, params);\n    },\n    ggSignup(params: IGGSignup) {\n        const url = \"/auth/google-signup\";\n        return axiosClient.post(url, params);\n    },\n    getUserInfoByGg(params: IPagination) {\n        const url = GOOGLE_USER_INFO;\n        return axiosClient.get(url, {\n            params,\n        });\n    },\n    changePassword(values: IChangePassword) {\n        const url = \"users/merchant/password\";\n        return axiosClient.put(url, values);\n    },\n    registerEmail: (email: string) => {\n        const url = \"/auth/register\";\n        const params = {\n            email,\n        };\n        return axiosClient.post(url, params);\n    },\n    sendResetPassword: (email: string) => {\n        const url = \"/auth/send-reset-password\";\n        const params = {\n            email,\n        };\n        return axiosClient.post(url, params);\n    },\n    resetPassword: (values: IResetPassword) => {\n        const url = \"/auth/reset-password\";\n        return axiosClient.put(url, values);\n    },\n    registerPhone: (value: IPhone) => {\n        const url = \"/auth/twilio-signup\";\n        return axiosClient.post(url, value);\n    },\n    loginPhone: (value: IPhone) => {\n        const url = \"/auth/twilio-login\";\n        return axiosClient.post(url, value);\n    },\n    verifyPhone: (value: IPhone) => {\n        const url = \"/auth/twilio-verify\";\n        return axiosClient.post(url, value);\n    },\n    resendPhone: (value: IPhone) => {\n        const url = \"/auth/resend-phone\";\n        return axiosClient.post(url, value);\n    },\n    createPassword: (values: IEmailForm | ISocialMedia) => {\n        const url = \"/auth/sign-up/form\";\n        return axiosClient.put(url, values);\n    },\n};\n"]},"metadata":{},"sourceType":"module"}