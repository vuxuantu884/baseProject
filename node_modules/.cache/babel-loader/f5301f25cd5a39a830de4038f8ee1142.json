{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\nimport { benefitApi, couponApi, merchantApi } from \"@api\";\nimport { PATH_404, PATH_SIGN_IN_EMAIL, enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { selectAuth, setExternalTypes, setLoading, setMainColor, setMerchant, setMerchantID } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PageBenefit = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //page hook\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const {\n    error,\n    success\n  } = useNotify(); //page rdux\n\n  const {\n    auth\n  } = useSelector(selectAuth); //page state\n\n  const [benefit, setBenefit] = useState(); //page variable\n\n  const token = auth === null || auth === void 0 ? void 0 : auth.accessToken;\n  useEffect(_s(() => {\n    _s();\n\n    useCoupon();\n  }, \"CCFEAyTohPMBrRsGhMXvqgOAwf8=\", false, function () {\n    return [useCoupon];\n  }), []);\n\n  const useCoupon = async () => {\n    try {\n      dispatch(setLoading(true));\n\n      if (id) {\n        if (token) {\n          const res = await benefitApi.getDetailBenefitById(id);\n          console.log(res);\n          const data = res.data; // setCoupon(data);\n        } else {\n          const res = await merchantApi.getCouponId(id);\n          const data = res.data;\n          dispatch(setMerchantID(data.merchantId));\n          const merchantConfig = await merchantApi.getMerchantConfig();\n          const merchant = merchantConfig.data.merchant;\n          dispatch(setMerchant(merchant));\n          dispatch(setMainColor(merchant.themeColor));\n          dispatch(setExternalTypes({\n            type: enumTypes.COUPON,\n            id\n          }));\n          history.push(PATH_SIGN_IN_EMAIL);\n        }\n      } else {\n        history.push(PATH_404);\n      }\n    } catch {\n      history.push(PATH_404);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleUseCoupon = async () => {\n    try {\n      var _coupon;\n\n      dispatch(setLoading(true));\n      const res = await couponApi.redeemedCoupon({\n        objectId: ((_coupon = coupon) === null || _coupon === void 0 ? void 0 : _coupon._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.COUPON\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n        history.push(PATH_HOME);\n      }\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.received.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  const handleRedeemedCoupon = async () => {\n    try {\n      var _coupon2;\n\n      dispatch(setLoading(true));\n      const res = await couponApi.receiveCoupon({\n        objectId: ((_coupon2 = coupon) === null || _coupon2 === void 0 ? void 0 : _coupon2._id) || \"\",\n        status: enumStatus.ACTIVE,\n        type: enumTypes.COUPON\n      });\n\n      if (res.data.message) {\n        success(res.data.message);\n        history.push(PATH_HOME);\n      }\n    } catch (err) {\n      const {\n        message\n      } = err.response.data;\n\n      if (message) {\n        error(message);\n      } else {\n        error(t(\"message.received.fail\"));\n      }\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s2(PageBenefit, \"Y5viCl7dzqMBkhv0TDGV6pvbdYA=\", false, function () {\n  return [useTranslation, useDispatch, useParams, useHistory, useNotify, useSelector];\n});\n\n_c = PageBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useSelector","useHistory","useParams","useTranslation","benefitApi","couponApi","merchantApi","PATH_404","PATH_SIGN_IN_EMAIL","enumStatus","enumTypes","PATH_HOME","selectAuth","setExternalTypes","setLoading","setMainColor","setMerchant","setMerchantID","useNotify","PageBenefit","t","dispatch","id","history","error","success","auth","benefit","setBenefit","token","accessToken","useCoupon","res","getDetailBenefitById","console","log","data","getCouponId","merchantId","merchantConfig","getMerchantConfig","merchant","themeColor","type","COUPON","push","handleUseCoupon","redeemedCoupon","objectId","coupon","_id","status","ACTIVE","message","err","response","handleRedeemedCoupon","receiveCoupon"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,QAAmD,MAAnD;AAEA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,UAAvC,EAAmDC,SAAnD,EAA8DC,SAA9D,QAA+E,UAA/E;AAEA,SACIC,UADJ,EAEIC,gBAFJ,EAGIC,UAHJ,EAIIC,YAJJ,EAKIC,WALJ,EAMIC,aANJ,QAOO,QAPP;AAQA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAAA;;AAC7B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAQjB,cAAc,EAA5B;AACA,QAAMkB,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAM;AAAEuB,IAAAA;AAAF,MAASpB,SAAS,EAAxB;AACA,QAAMqB,OAAO,GAAGtB,UAAU,EAA1B;AACA,QAAM;AAAEuB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBP,SAAS,EAApC,CAN6B,CAO7B;;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAW1B,WAAW,CAACY,UAAD,CAA5B,CAR6B,CAS7B;;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,EAAtC,CAV6B,CAW7B;;AACA,QAAM+B,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,WAApB;AAEAjC,EAAAA,SAAS,IAAC,MAAM;AAAA;;AACZkC,IAAAA,SAAS;AACZ,GAFQ;AAAA,YACLA,SADK;AAAA,MAEN,EAFM,CAAT;;AAIA,QAAMA,SAAS,GAAG,YAAY;AAC1B,QAAI;AACAV,MAAAA,QAAQ,CAACP,UAAU,CAAC,IAAD,CAAX,CAAR;;AACA,UAAIQ,EAAJ,EAAQ;AACJ,YAAIO,KAAJ,EAAW;AACP,gBAAMG,GAAG,GAAG,MAAM5B,UAAU,CAAC6B,oBAAX,CAAgCX,EAAhC,CAAlB;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,gBAAMI,IAAI,GAAGJ,GAAG,CAACI,IAAjB,CAHO,CAIP;AACH,SALD,MAKO;AACH,gBAAMJ,GAAG,GAAG,MAAM1B,WAAW,CAAC+B,WAAZ,CAAwBf,EAAxB,CAAlB;AACA,gBAAMc,IAAI,GAAGJ,GAAG,CAACI,IAAjB;AACAf,UAAAA,QAAQ,CAACJ,aAAa,CAACmB,IAAI,CAACE,UAAN,CAAd,CAAR;AACA,gBAAMC,cAAc,GAAG,MAAMjC,WAAW,CAACkC,iBAAZ,EAA7B;AACA,gBAAMC,QAAQ,GAAGF,cAAc,CAACH,IAAf,CAAoBK,QAArC;AACApB,UAAAA,QAAQ,CAACL,WAAW,CAACyB,QAAD,CAAZ,CAAR;AACApB,UAAAA,QAAQ,CAACN,YAAY,CAAC0B,QAAQ,CAACC,UAAV,CAAb,CAAR;AACArB,UAAAA,QAAQ,CAACR,gBAAgB,CAAC;AAAE8B,YAAAA,IAAI,EAAEjC,SAAS,CAACkC,MAAlB;AAA0BtB,YAAAA;AAA1B,WAAD,CAAjB,CAAR;AACAC,UAAAA,OAAO,CAACsB,IAAR,CAAarC,kBAAb;AACH;AACJ,OAjBD,MAiBO;AACHe,QAAAA,OAAO,CAACsB,IAAR,CAAatC,QAAb;AACH;AACJ,KAtBD,CAsBE,MAAM;AACJgB,MAAAA,OAAO,CAACsB,IAAR,CAAatC,QAAb;AACH,KAxBD,SAwBU;AACNc,MAAAA,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GA5BD;;AA8BA,QAAMgC,eAAe,GAAG,YAAY;AAChC,QAAI;AAAA;;AACAzB,MAAAA,QAAQ,CAACP,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMkB,GAAG,GAAG,MAAM3B,SAAS,CAAC0C,cAAV,CAAyB;AACvCC,QAAAA,QAAQ,EAAE,YAAAC,MAAM,UAAN,0CAAQC,GAAR,KAAe,EADc;AAEvCC,QAAAA,MAAM,EAAE1C,UAAU,CAAC2C,MAFoB;AAGvCT,QAAAA,IAAI,EAAEjC,SAAS,CAACkC;AAHuB,OAAzB,CAAlB;;AAKA,UAAIZ,GAAG,CAACI,IAAJ,CAASiB,OAAb,EAAsB;AAClB5B,QAAAA,OAAO,CAACO,GAAG,CAACI,IAAJ,CAASiB,OAAV,CAAP;AACA9B,QAAAA,OAAO,CAACsB,IAAR,CAAalC,SAAb;AACH;AACJ,KAXD,CAWE,OAAO2C,GAAP,EAAiB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAcC,GAAG,CAACC,QAAJ,CAAanB,IAAjC;;AACA,UAAIiB,OAAJ,EAAa;AACT7B,QAAAA,KAAK,CAAC6B,OAAD,CAAL;AACH,OAFD,MAEO;AACH7B,QAAAA,KAAK,CAACJ,CAAC,CAAC,uBAAD,CAAF,CAAL;AACH;AACJ,KAlBD,SAkBU;AACNC,MAAAA,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAtBD;;AAwBA,QAAM0C,oBAAoB,GAAG,YAAY;AACrC,QAAI;AAAA;;AACAnC,MAAAA,QAAQ,CAACP,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMkB,GAAG,GAAG,MAAM3B,SAAS,CAACoD,aAAV,CAAwB;AACtCT,QAAAA,QAAQ,EAAE,aAAAC,MAAM,UAAN,4CAAQC,GAAR,KAAe,EADa;AAEtCC,QAAAA,MAAM,EAAE1C,UAAU,CAAC2C,MAFmB;AAGtCT,QAAAA,IAAI,EAAEjC,SAAS,CAACkC;AAHsB,OAAxB,CAAlB;;AAKA,UAAIZ,GAAG,CAACI,IAAJ,CAASiB,OAAb,EAAsB;AAClB5B,QAAAA,OAAO,CAACO,GAAG,CAACI,IAAJ,CAASiB,OAAV,CAAP;AACA9B,QAAAA,OAAO,CAACsB,IAAR,CAAalC,SAAb;AACH;AACJ,KAXD,CAWE,OAAO2C,GAAP,EAAiB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAcC,GAAG,CAACC,QAAJ,CAAanB,IAAjC;;AACA,UAAIiB,OAAJ,EAAa;AACT7B,QAAAA,KAAK,CAAC6B,OAAD,CAAL;AACH,OAFD,MAEO;AACH7B,QAAAA,KAAK,CAACJ,CAAC,CAAC,uBAAD,CAAF,CAAL;AACH;AACJ,KAlBD,SAkBU;AACNC,MAAAA,QAAQ,CAACP,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAtBD;;AAwBA,sBAAO,qCAAP;AACH,CAjGM;;IAAMK,W;UAEKhB,c,EACGJ,W,EACFG,S,EACCD,U,EACWiB,S,EAEVlB,W;;;KARRmB,W","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { benefitApi, couponApi, merchantApi } from \"@api\";\nimport { ComponentCouponDetail } from \"@components\";\nimport { PATH_404, PATH_SIGN_IN_EMAIL, enumStatus, enumTypes, PATH_HOME } from \"@configs\";\nimport { IBenefit, ICoupon, IMerchant, IMerchantQRcode } from \"@interfaces\";\nimport {\n    selectAuth,\n    setExternalTypes,\n    setLoading,\n    setMainColor,\n    setMerchant,\n    setMerchantID,\n} from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageBenefit = () => {\n    //page hook\n    const { t } = useTranslation();\n    const dispatch = useDispatch();\n    const { id } = useParams<{ id: string }>();\n    const history = useHistory();\n    const { error, success } = useNotify();\n    //page rdux\n    const { auth } = useSelector(selectAuth);\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit>();\n    //page variable\n    const token = auth?.accessToken;\n\n    useEffect(() => {\n        useCoupon();\n    }, []);\n\n    const useCoupon = async () => {\n        try {\n            dispatch(setLoading(true));\n            if (id) {\n                if (token) {\n                    const res = await benefitApi.getDetailBenefitById(id);\n                    console.log(res);\n                    const data = res.data as IBenefit;\n                    // setCoupon(data);\n                } else {\n                    const res = await merchantApi.getCouponId(id);\n                    const data = res.data as IMerchantQRcode;\n                    dispatch(setMerchantID(data.merchantId));\n                    const merchantConfig = await merchantApi.getMerchantConfig();\n                    const merchant = merchantConfig.data.merchant as IMerchant;\n                    dispatch(setMerchant(merchant));\n                    dispatch(setMainColor(merchant.themeColor));\n                    dispatch(setExternalTypes({ type: enumTypes.COUPON, id }));\n                    history.push(PATH_SIGN_IN_EMAIL);\n                }\n            } else {\n                history.push(PATH_404);\n            }\n        } catch {\n            history.push(PATH_404);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleUseCoupon = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await couponApi.redeemedCoupon({\n                objectId: coupon?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.COUPON,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n                history.push(PATH_HOME);\n            }\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.received.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    const handleRedeemedCoupon = async () => {\n        try {\n            dispatch(setLoading(true));\n            const res = await couponApi.receiveCoupon({\n                objectId: coupon?._id || \"\",\n                status: enumStatus.ACTIVE,\n                type: enumTypes.COUPON,\n            });\n            if (res.data.message) {\n                success(res.data.message);\n                history.push(PATH_HOME);\n            }\n        } catch (err: any) {\n            const { message } = err.response.data;\n            if (message) {\n                error(message);\n            } else {\n                error(t(\"message.received.fail\"));\n            }\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    return <></>;\n};\n"]},"metadata":{},"sourceType":"module"}