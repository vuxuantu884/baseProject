{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/Line.tsx\",\n    _s = $RefreshSig$();\n\nimport querystring from \"querystring\";\nimport { memo, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ComponentLineButton } from \"@components\";\nimport { enumExternalAuthType, enumExternalMethod, LINE_ACCESS_URL, LINE_SCOPE, PATH_LINE_LOGIN } from \"@configs\";\nimport { selectMerchant, setExternalLogin } from \"@redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ModuleLine = /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch(); //props\n\n  const {\n    state\n  } = props; //redux page\n\n  const {\n    lineIntegration\n  } = useSelector(selectMerchant);\n  const handleLineLogin = useCallback(() => {\n    var _lineIntegration$line;\n\n    // Build query string.\n    const query = querystring.stringify({\n      response_type: \"code\",\n      client_id: (lineIntegration === null || lineIntegration === void 0 ? void 0 : (_lineIntegration$line = lineIntegration.lineLoginApi) === null || _lineIntegration$line === void 0 ? void 0 : _lineIntegration$line.channelID) || \"\",\n      state: JSON.stringify(state),\n      redirect_uri: `${process.env.REACT_APP_WEB_URL}${PATH_LINE_LOGIN}`\n    });\n    dispatch(setExternalLogin({\n      type: enumExternalMethod.LINE,\n      isSignUp: state.type === enumExternalAuthType.SIGNUP ? true : false\n    })); // Build the Line authorize URL.\n\n    const lineUrl = `${LINE_ACCESS_URL}/authorize?scope=${LINE_SCOPE}&${query}`;\n    setTimeout(() => {\n      window.location.href = lineUrl;\n    }, 2000); // Redirect to external URL.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ComponentLineButton, {\n    onClick: handleLineLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}, \"jWQMJzJ3n6Hi7zIDIboXiJ9sLqA=\", false, function () {\n  return [useDispatch, useSelector];\n}));\n_c2 = ModuleLine;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModuleLine$memo\");\n$RefreshReg$(_c2, \"ModuleLine\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/authentication/Line.tsx"],"names":["querystring","memo","useCallback","useDispatch","useSelector","ComponentLineButton","enumExternalAuthType","enumExternalMethod","LINE_ACCESS_URL","LINE_SCOPE","PATH_LINE_LOGIN","selectMerchant","setExternalLogin","ModuleLine","props","dispatch","state","lineIntegration","handleLineLogin","query","stringify","response_type","client_id","lineLoginApi","channelID","JSON","redirect_uri","process","env","REACT_APP_WEB_URL","type","LINE","isSignUp","SIGNUP","lineUrl","setTimeout","window","location","href"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,mBAAT,QAAoC,aAApC;AACA,SACIC,oBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,UAJJ,EAKIC,eALJ,QAMO,UANP;AAQA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,QAAjD;;AAMA,OAAO,MAAMC,UAAU,gBAAGZ,IAAI,SAAEa,KAAD,IAAmB;AAAA;;AAC9C;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CAF8C,CAG9C;;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAYF,KAAlB,CAJ8C,CAK9C;;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAsBb,WAAW,CAACO,cAAD,CAAvC;AAEA,QAAMO,eAAe,GAAGhB,WAAW,CAAC,MAAM;AAAA;;AACtC;AAEA,UAAMiB,KAAK,GAAGnB,WAAW,CAACoB,SAAZ,CAAsB;AAChCC,MAAAA,aAAa,EAAE,MADiB;AAEhCC,MAAAA,SAAS,EAAE,CAAAL,eAAe,SAAf,IAAAA,eAAe,WAAf,qCAAAA,eAAe,CAAEM,YAAjB,gFAA+BC,SAA/B,KAA4C,EAFvB;AAGhCR,MAAAA,KAAK,EAAES,IAAI,CAACL,SAAL,CAAeJ,KAAf,CAHyB;AAIhCU,MAAAA,YAAY,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,GAAEnB,eAAgB;AAJjC,KAAtB,CAAd;AAMAK,IAAAA,QAAQ,CACJH,gBAAgB,CAAC;AACbkB,MAAAA,IAAI,EAAEvB,kBAAkB,CAACwB,IADZ;AAEbC,MAAAA,QAAQ,EAAEhB,KAAK,CAACc,IAAN,KAAexB,oBAAoB,CAAC2B,MAApC,GAA6C,IAA7C,GAAoD;AAFjD,KAAD,CADZ,CAAR,CATsC,CAetC;;AACA,UAAMC,OAAO,GAAI,GAAE1B,eAAgB,oBAAmBC,UAAW,IAAGU,KAAM,EAA1E;AAEAgB,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBJ,OAAvB;AACH,KAFS,EAEP,IAFO,CAAV,CAlBsC,CAqBtC;AACH,GAtBkC,EAsBhC,EAtBgC,CAAnC;AAwBA,sBAAO,QAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEhB;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAjC6B;AAAA,UAETf,WAFS,EAMEC,WANF;AAAA,GAAvB;MAAMS,U","sourcesContent":["import querystring from \"querystring\";\nimport { memo, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { ComponentLineButton } from \"@components\";\nimport {\n    enumExternalAuthType,\n    enumExternalMethod,\n    LINE_ACCESS_URL,\n    LINE_SCOPE,\n    PATH_LINE_LOGIN,\n} from \"@configs\";\nimport { IExternalAuthState } from \"@interfaces\";\nimport { selectMerchant, setExternalLogin } from \"@redux\";\n\ninterface IProps {\n    state: IExternalAuthState;\n}\n\nexport const ModuleLine = memo((props: IProps) => {\n    //page hooks\n    const dispatch = useDispatch();\n    //props\n    const { state } = props;\n    //redux page\n    const { lineIntegration } = useSelector(selectMerchant);\n\n    const handleLineLogin = useCallback(() => {\n        // Build query string.\n\n        const query = querystring.stringify({\n            response_type: \"code\",\n            client_id: lineIntegration?.lineLoginApi?.channelID || \"\",\n            state: JSON.stringify(state),\n            redirect_uri: `${process.env.REACT_APP_WEB_URL}${PATH_LINE_LOGIN}`,\n        });\n        dispatch(\n            setExternalLogin({\n                type: enumExternalMethod.LINE,\n                isSignUp: state.type === enumExternalAuthType.SIGNUP ? true : false,\n            })\n        );\n        // Build the Line authorize URL.\n        const lineUrl = `${LINE_ACCESS_URL}/authorize?scope=${LINE_SCOPE}&${query}`;\n\n        setTimeout(() => {\n            window.location.href = lineUrl;\n        }, 2000);\n        // Redirect to external URL.\n    }, []);\n\n    return <ComponentLineButton onClick={handleLineLogin} />;\n});\n"]},"metadata":{},"sourceType":"module"}