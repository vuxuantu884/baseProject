{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Benefit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { benefitApi } from \"@api\";\nimport { ComponentBenefitList } from \"@components\";\nimport { setLoading } from \"@redux\";\nimport { REWARD } from \"@configs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModulesBenefit = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory(); //page state\n\n  const [benefit, setBenefit] = useState([]);\n  useEffect(() => {\n    (async () => {\n      dispatch(setLoading(true));\n      const res = await benefitApi.getListBenefit();\n      const data = res.data.docs;\n      console.log(data);\n      setBenefit(data);\n      dispatch(setLoading(false));\n    })();\n  }, []);\n\n  const handleClick = value => {\n    var _value$levelIds;\n\n    if ((_value$levelIds = value.levelIds) === null || _value$levelIds === void 0 ? void 0 : _value$levelIds.length) return;\n    history.push(REWARD + \"/\" + value._id); //\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComponentBenefitList, {\n      data: benefit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ModulesBenefit, \"i7uz13Yd1q26DdHORNADWq4dOqs=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = ModulesBenefit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModulesBenefit\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Modules/Benefit.tsx"],"names":["useEffect","useState","useDispatch","useHistory","benefitApi","ComponentBenefitList","setLoading","REWARD","ModulesBenefit","dispatch","history","benefit","setBenefit","res","getListBenefit","data","docs","console","log","handleClick","value","levelIds","length","push","_id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,UAAT,QAAsC,MAAtC;AACA,SAASC,oBAAT,QAA0D,aAA1D;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B,CAFgC,CAGhC;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAa,EAAb,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACTS,MAAAA,QAAQ,CAACH,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,YAAMO,GAAG,GAAG,MAAMT,UAAU,CAACU,cAAX,EAAlB;AACA,YAAMC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAH,MAAAA,UAAU,CAACG,IAAD,CAAV;AACAN,MAAAA,QAAQ,CAACH,UAAU,CAAC,KAAD,CAAX,CAAR;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT;;AAWA,QAAMa,WAAW,GAAIC,KAAD,IAAoB;AAAA;;AACpC,2BAAIA,KAAK,CAACC,QAAV,oDAAI,gBAAgBC,MAApB,EAA4B;AAC5BZ,IAAAA,OAAO,CAACa,IAAR,CAAahB,MAAM,GAAG,GAAT,GAAea,KAAK,CAACI,GAAlC,EAFoC,CAGpC;AACH,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEb;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA5BM;;GAAMH,c;UACQN,W,EACDC,U;;;KAFPK,c","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport { benefitApi, rewardApi } from \"@api\";\nimport { ComponentBenefitList, ComponentRewardList } from \"@components\";\nimport { IReward, IDataReward } from \"@interfaces\";\nimport { setLoading } from \"@redux\";\nimport { REWARD } from \"@configs\";\nimport { IBenefit } from \"src/Interfaces/benefit\";\n\nexport const ModulesBenefit = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    //page state\n    const [benefit, setBenefit] = useState<IBenefit[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            dispatch(setLoading(true));\n            const res = await benefitApi.getListBenefit();\n            const data = res.data.docs as IBenefit[];\n            console.log(data);\n            setBenefit(data);\n            dispatch(setLoading(false));\n        })();\n    }, []);\n\n    const handleClick = (value: IReward) => {\n        if (value.levelIds?.length) return;\n        history.push(REWARD + \"/\" + value._id);\n        //\n    };\n\n    return (\n        <>\n            <ComponentBenefitList data={benefit} />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}