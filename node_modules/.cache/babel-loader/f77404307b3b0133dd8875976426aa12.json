{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting } from \"@components\";\nimport { setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageUserSetting = () => {\n  _s();\n\n  //page hooks\n  const dispatch = useDispatch();\n  const {\n    error\n  } = useNotify(); //page state\n\n  const [title, setTitle] = useState(\"\");\n\n  const handleUploadImage = async e => {\n    dispatch(setLoading(true)); //@ts-ignore\n\n    const values = e.file;\n    const formData = new FormData();\n    formData.append(\"file\", values);\n\n    try {\n      const res = await merchantApi.uploadImage(formData);\n      console.log(res);\n    } catch (err) {\n      const mess = Array.isArray(err.response.data.errors) ? err.response.data.errors[0] : err.response.data.errors;\n      error(mess);\n    } finally {\n      dispatch(setLoading(false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ComponentUserSetting, {\n      handleUploadImage: handleUploadImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PageUserSetting, \"JnvfvncKSvXSwS06PS2jbfs9eYc=\", false, function () {\n  return [useDispatch, useNotify];\n});\n\n_c = PageUserSetting;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageUserSetting\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Pages/user/Setting.tsx"],"names":["useDispatch","useState","merchantApi","ComponentUserSetting","setLoading","useNotify","PageUserSetting","dispatch","error","title","setTitle","handleUploadImage","e","values","file","formData","FormData","append","res","uploadImage","console","log","err","mess","Array","isArray","response","data","errors"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,SAASC,WAAT,QAA4B,MAA5B;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACjC;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAYH,SAAS,EAA3B,CAHiC,CAIjC;;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMU,iBAAiB,GAAG,MAAOC,CAAP,IAAqE;AAC3FL,IAAAA,QAAQ,CAACH,UAAU,CAAC,IAAD,CAAX,CAAR,CAD2F,CAE3F;;AACA,UAAMS,MAAM,GAAGD,CAAC,CAACE,IAAjB;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,MAAxB;;AACA,QAAI;AACA,YAAMK,GAAG,GAAG,MAAMhB,WAAW,CAACiB,WAAZ,CAAwBJ,QAAxB,CAAlB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,KAHD,CAGE,OAAOI,GAAP,EAAiB;AACf,YAAMC,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcH,GAAG,CAACI,QAAJ,CAAaC,IAAb,CAAkBC,MAAhC,IACPN,GAAG,CAACI,QAAJ,CAAaC,IAAb,CAAkBC,MAAlB,CAAyB,CAAzB,CADO,GAEPN,GAAG,CAACI,QAAJ,CAAaC,IAAb,CAAkBC,MAFxB;AAGApB,MAAAA,KAAK,CAACe,IAAD,CAAL;AACH,KARD,SAQU;AACNhB,MAAAA,QAAQ,CAACH,UAAU,CAAC,KAAD,CAAX,CAAR;AACH;AACJ,GAjBD;;AAmBA,sBACI;AAAA,2BACI,QAAC,oBAAD;AAAsB,MAAA,iBAAiB,EAAEO;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CA/BM;;GAAML,e;UAEQN,W,EACCK,S;;;KAHTC,e","sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\n\nimport { merchantApi } from \"@api\";\nimport { ComponentUserSetting } from \"@components\";\nimport { setLoading } from \"@redux\";\nimport { useNotify } from \"@utils\";\n\nexport const PageUserSetting = () => {\n    //page hooks\n    const dispatch = useDispatch();\n    const { error } = useNotify();\n    //page state\n    const [title, setTitle] = useState<string>(\"\");\n\n    const handleUploadImage = async (e: React.ChangeEventHandler<HTMLInputElement> | undefined) => {\n        dispatch(setLoading(true));\n        //@ts-ignore\n        const values = e.file;\n        const formData = new FormData();\n        formData.append(\"file\", values);\n        try {\n            const res = await merchantApi.uploadImage(formData);\n            console.log(res);\n        } catch (err: any) {\n            const mess = Array.isArray(err.response.data.errors)\n                ? err.response.data.errors[0]\n                : err.response.data.errors;\n            error(mess);\n        } finally {\n            dispatch(setLoading(false));\n        }\n    };\n\n    return (\n        <>\n            <ComponentUserSetting handleUploadImage={handleUploadImage} />\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}