{"ast":null,"code":"var _jsxFileName = \"/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/WeatherCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowDown, ArrowDownLeft, ArrowDownRight, ArrowLeft, ArrowRight, ArrowUp, ArrowUpLeft, ArrowUpRight } from \"react-feather\";\nimport { Card, Col, Divider, Row, Skeleton } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { capitalize, getWeather, getWeatherIcon, windDirection } from \"@utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DescriptionItem = _ref => {\n  let {\n    title,\n    content\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    type: \"flex\",\n    align: \"middle\",\n    justify: \"space-between\",\n    className: \"mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DescriptionItem;\n\nconst ForecastItem = _ref2 => {\n  let {\n    content\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      display: \"block\"\n    },\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ForecastItem;\n\nconst getWindDirection = degree => {\n  const direction = windDirection(degree);\n\n  switch (direction) {\n    case \"n\":\n      return /*#__PURE__*/_jsxDEV(ArrowUp, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n\n    case \"ne\":\n      return /*#__PURE__*/_jsxDEV(ArrowUpRight, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n\n    case \"e\":\n      return /*#__PURE__*/_jsxDEV(ArrowRight, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n\n    case \"se\":\n      return /*#__PURE__*/_jsxDEV(ArrowDownRight, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n\n    case \"s\":\n      return /*#__PURE__*/_jsxDEV(ArrowDown, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n\n    case \"sw\":\n      return /*#__PURE__*/_jsxDEV(ArrowDownLeft, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n\n    case \"w\":\n      return /*#__PURE__*/_jsxDEV(ArrowLeft, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 20\n      }, this);\n\n    case \"nw\":\n      return /*#__PURE__*/_jsxDEV(ArrowUpLeft, {\n        size: 20,\n        strokeWidth: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n\n    default:\n      break;\n  }\n};\n\nexport const SharedWeatherCard = _ref3 => {\n  _s();\n\n  let {\n    city,\n    country,\n    days\n  } = _ref3;\n  const [current, setCurrent] = useState();\n  const [forecast, setForecast] = useState();\n  useEffect(() => {\n    (async function () {\n      try {\n        const forecast = await getWeather(city, country, days);\n\n        if (forecast) {\n          const current = forecast.list[0];\n          setCurrent(current);\n          setForecast(forecast);\n        }\n      } catch (e) {\n        // eslint-disable-next-line \n        console.error(e);\n      }\n    })();\n  }, [city, country, days]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bodyStyle: {\n      padding: 0\n    },\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n      loading: !current && !forecast,\n      active: true,\n      className: \"p-4\",\n      children: current && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            type: \"flex\",\n            align: \"middle\",\n            justify: \"space-between\",\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [forecast && /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0 font-weight-bold\",\n                children: `${forecast.city.name}, ${forecast.city.country}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-0\",\n                children: format(current.dt * 1000, \"MMMM Do YYYY\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: capitalize(current === null || current === void 0 ? void 0 : current.weather[0].description)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"text-right\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-weight-light mb-0\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [current.main.temp, \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            type: \"flex\",\n            align: \"middle\",\n            justify: \"space-between\",\n            gutter: 16,\n            children: Object.keys(current.main).map((key, index) => /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(DescriptionItem, {\n                title: capitalize(key.replace(/_/g, \" \")),\n                content: current.main[key]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"left\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4\",\n          children: forecast && /*#__PURE__*/_jsxDEV(Row, {\n            type: \"flex\",\n            align: \"middle\",\n            justify: \"space-between\",\n            className: \"text-center\",\n            style: {\n              flexFlow: \"initial\"\n            },\n            children: forecast.list.map((day, index) => index !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(ForecastItem, {\n                content: format(day.dt * 1000, \"ddd\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(ForecastItem, {\n                content: day.weather.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(ForecastItem, {\n                content: getWindDirection(day.wind.deg)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(ForecastItem, {\n                content: getWeatherIcon(day.weather[0].icon, 50)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(ForecastItem, {\n                content: `${day.main.temp}°`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 53\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SharedWeatherCard, \"yNRTajVV4HYjmnJgah7oso5WLQU=\");\n\n_c3 = SharedWeatherCard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DescriptionItem\");\n$RefreshReg$(_c2, \"ForecastItem\");\n$RefreshReg$(_c3, \"SharedWeatherCard\");","map":{"version":3,"sources":["/home/vuxuantu/Desktop/rewarding-platform-client/src/Components/shared/WeatherCard.tsx"],"names":["ArrowDown","ArrowDownLeft","ArrowDownRight","ArrowLeft","ArrowRight","ArrowUp","ArrowUpLeft","ArrowUpRight","Card","Col","Divider","Row","Skeleton","useEffect","useState","format","capitalize","getWeather","getWeatherIcon","windDirection","DescriptionItem","title","content","ForecastItem","display","getWindDirection","degree","direction","SharedWeatherCard","city","country","days","current","setCurrent","forecast","setForecast","list","e","console","error","padding","name","dt","weather","description","main","temp","Object","keys","map","key","index","replace","flexFlow","day","wind","deg","icon"],"mappings":";;;AAAA,SACIA,SADJ,EAEIC,aAFJ,EAGIC,cAHJ,EAIIC,SAJJ,EAKIC,UALJ,EAMIC,OANJ,EAOIC,WAPJ,EAQIC,YARJ,QASO,eATP;AAUA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,QAAlC,QAAkD,MAAlD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,cAAjC,EAAiDC,aAAjD,QAAsE,QAAtE;;;;AAEA,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAAA,sBACpB,QAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,KAAK,EAAC,QAAvB;AAAgC,IAAA,OAAO,EAAC,eAAxC;AAAwD,IAAA,SAAS,EAAC,MAAlE;AAAA,4BACI;AAAA,gBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAQC;AAAR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADoB;AAAA,CAAxB;;KAAMF,e;;AAON,MAAMG,YAAY,GAAG;AAAA,MAAC;AAAED,IAAAA;AAAF,GAAD;AAAA,sBACjB;AACI,IAAA,KAAK,EAAE;AACHE,MAAAA,OAAO,EAAE;AADN,KADX;AAAA,cAKKF;AALL;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAArB;;MAAMC,Y;;AAUN,MAAME,gBAAgB,GAAIC,MAAD,IAAoB;AACzC,QAAMC,SAAS,GAAGR,aAAa,CAACO,MAAD,CAA/B;;AACA,UAAQC,SAAR;AACI,SAAK,GAAL;AACI,0BAAO,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,EAAf;AAAmB,QAAA,WAAW,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,IAAL;AACI,0BAAO,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE,EAApB;AAAwB,QAAA,WAAW,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,GAAL;AACI,0BAAO,QAAC,UAAD;AAAY,QAAA,IAAI,EAAE,EAAlB;AAAsB,QAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,IAAL;AACI,0BAAO,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,EAAtB;AAA0B,QAAA,WAAW,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,GAAL;AACI,0BAAO,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,EAAjB;AAAqB,QAAA,WAAW,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,IAAL;AACI,0BAAO,QAAC,aAAD;AAAe,QAAA,IAAI,EAAE,EAArB;AAAyB,QAAA,WAAW,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,GAAL;AACI,0BAAO,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,EAAjB;AAAqB,QAAA,WAAW,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,IAAL;AACI,0BAAO,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE,EAAnB;AAAuB,QAAA,WAAW,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ;AACI;AAlBR;AAoBH,CAtBD;;AA8BA,OAAO,MAAMC,iBAAiB,GAAG,SAAqC;AAAA;;AAAA,MAApC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAoC;AAClE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,EAAtC;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,EAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,kBAAkB;AACf,UAAI;AACA,cAAMqB,QAAQ,GAAG,MAAMjB,UAAU,CAACY,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,CAAjC;;AAEA,YAAIG,QAAJ,EAAc;AACV,gBAAMF,OAAO,GAAGE,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAhB;AACAH,UAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,UAAAA,WAAW,CAACD,QAAD,CAAX;AACH;AACJ,OARD,CAQE,OAAOG,CAAP,EAAU;AACR;AACAC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ,KAbD;AAcH,GAfQ,EAeN,CAACR,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,CAfM,CAAT;AAiBA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAjB;AAAiC,IAAA,SAAS,EAAC,MAA3C;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAE,CAACR,OAAD,IAAY,CAACE,QAAhC;AAA0C,MAAA,MAAM,MAAhD;AAAiD,MAAA,SAAS,EAAC,KAA3D;AAAA,gBACKF,OAAO,iBACJ;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI,QAAC,GAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,KAAK,EAAC,QAFV;AAGI,YAAA,OAAO,EAAC,eAHZ;AAII,YAAA,SAAS,EAAC,MAJd;AAAA,oCAMI,QAAC,GAAD;AAAA,yBACKE,QAAQ,iBACL;AAAI,gBAAA,SAAS,EAAC,uBAAd;AAAA,0BAAwC,GAAEA,QAAQ,CAACL,IAAT,CAAcY,IAAK,KAAIP,QAAQ,CAACL,IAAT,CAAcC,OAAQ;AAAvF;AAAA;AAAA;AAAA;AAAA,sBAFR,eAII;AAAI,gBAAA,SAAS,EAAC,MAAd;AAAA,0BACKf,MAAM,CAACiB,OAAO,CAACU,EAAR,GAAa,IAAd,EAAoB,cAApB;AADX;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI;AAAA,0BAAQ1B,UAAU,CAACgB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEW,OAAT,CAAiB,CAAjB,EAAoBC,WAArB;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAeI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,qCACI;AAAI,gBAAA,SAAS,EAAC,wBAAd;AAAA,uCACI;AAAA,6BAAOZ,OAAO,CAACa,IAAR,CAAaC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAsBI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,MAAV;AAAiB,YAAA,KAAK,EAAC,QAAvB;AAAgC,YAAA,OAAO,EAAC,eAAxC;AAAwD,YAAA,MAAM,EAAE,EAAhE;AAAA,sBACKC,MAAM,CAACC,IAAP,CAAYhB,OAAO,CAACa,IAApB,EAA0BI,GAA1B,CAA8B,CAACC,GAAD,EAAMC,KAAN,kBAC3B,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,EAAT;AAAA,qCACI,QAAC,eAAD;AACI,gBAAA,KAAK,EAAEnC,UAAU,CAACkC,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,CAAD,CADrB;AAEI,gBAAA,OAAO,EAAEpB,OAAO,CAACa,IAAR,CAAaK,GAAb;AAFb;AAAA;AAAA;AAAA;AAAA;AADJ,eAAkBC,KAAlB;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA,kBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkCI,QAAC,OAAD;AAAS,UAAA,WAAW,EAAC,MAArB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlCJ,eAqCI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,oBACKjB,QAAQ,iBACL,QAAC,GAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,KAAK,EAAC,QAFV;AAGI,YAAA,OAAO,EAAC,eAHZ;AAII,YAAA,SAAS,EAAC,aAJd;AAKI,YAAA,KAAK,EAAE;AAAEmB,cAAAA,QAAQ,EAAE;AAAZ,aALX;AAAA,sBAOKnB,QAAQ,CAACE,IAAT,CAAca,GAAd,CACG,CAACK,GAAD,EAAWH,KAAX,KACIA,KAAK,KAAK,CAAV,iBACI;AAAG,cAAA,SAAS,EAAC,kBAAb;AAAA,sCACI,QAAC,YAAD;AACI,gBAAA,OAAO,EAAEpC,MAAM,CAACuC,GAAG,CAACZ,EAAJ,GAAS,IAAV,EAAgB,KAAhB;AADnB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,YAAD;AACI,gBAAA,OAAO,EAAEY,GAAG,CAACX,OAAJ,CAAYC;AADzB;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAOI,QAAC,YAAD;AACI,gBAAA,OAAO,EAAEnB,gBAAgB,CAAC6B,GAAG,CAACC,IAAJ,CAASC,GAAV;AAD7B;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAUI,QAAC,YAAD;AACI,gBAAA,OAAO,EAAEtC,cAAc,CACnBoC,GAAG,CAACX,OAAJ,CAAY,CAAZ,EAAec,IADI,EAEnB,EAFmB;AAD3B;AAAA;AAAA;AAAA;AAAA,sBAVJ,eAgBI,QAAC,YAAD;AAAc,gBAAA,OAAO,EAAG,GAAEH,GAAG,CAACT,IAAJ,CAASC,IAAK;AAAxC;AAAA;AAAA;AAAA;AAAA,sBAhBJ;AAAA,eAAqCK,KAArC;AAAA;AAAA;AAAA;AAAA,oBAHX;AAPL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBArCJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiFH,CAtGM;;GAAMvB,iB;;MAAAA,iB","sourcesContent":["import {\n    ArrowDown,\n    ArrowDownLeft,\n    ArrowDownRight,\n    ArrowLeft,\n    ArrowRight,\n    ArrowUp,\n    ArrowUpLeft,\n    ArrowUpRight,\n} from \"react-feather\";\nimport { Card, Col, Divider, Row, Skeleton } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\n\nimport { capitalize, getWeather, getWeatherIcon, windDirection } from \"@utils\";\n\nconst DescriptionItem = ({ title, content }: { title: string; content: string }) => (\n    <Row type=\"flex\" align=\"middle\" justify=\"space-between\" className=\"mb-2\">\n        <span>{title}</span>\n        <small>{content}</small>\n    </Row>\n);\n\nconst ForecastItem = ({ content }: { content: JSX.Element | undefined | string }) => (\n    <span\n        style={{\n            display: \"block\",\n        }}\n    >\n        {content}\n    </span>\n);\n\nconst getWindDirection = (degree: number) => {\n    const direction = windDirection(degree);\n    switch (direction) {\n        case \"n\":\n            return <ArrowUp size={20} strokeWidth={1} />;\n        case \"ne\":\n            return <ArrowUpRight size={20} strokeWidth={1} />;\n        case \"e\":\n            return <ArrowRight size={20} strokeWidth={1} />;\n        case \"se\":\n            return <ArrowDownRight size={20} strokeWidth={1} />;\n        case \"s\":\n            return <ArrowDown size={20} strokeWidth={1} />;\n        case \"sw\":\n            return <ArrowDownLeft size={20} strokeWidth={1} />;\n        case \"w\":\n            return <ArrowLeft size={20} strokeWidth={1} />;\n        case \"nw\":\n            return <ArrowUpLeft size={20} strokeWidth={1} />;\n        default:\n            break;\n    }\n};\n\ninterface IProps {\n    city: string;\n    country: string;\n    days: number;\n}\n\nexport const SharedWeatherCard = ({ city, country, days }: IProps) => {\n    const [current, setCurrent] = useState<any>();\n    const [forecast, setForecast] = useState<any>();\n\n    useEffect(() => {\n        (async function () {\n            try {\n                const forecast = await getWeather(city, country, days);\n\n                if (forecast) {\n                    const current = forecast.list[0];\n                    setCurrent(current);\n                    setForecast(forecast);\n                }\n            } catch (e) {\n                // eslint-disable-next-line \n                console.error(e);\n            }\n        })();\n    }, [city, country, days]);\n\n    return (\n        <Card bodyStyle={{ padding: 0 }} className=\"mb-4\">\n            <Skeleton loading={!current && !forecast} active className=\"p-4\">\n                {current && (\n                    <>\n                        <div className=\"p-4\">\n                            <Row\n                                type=\"flex\"\n                                align=\"middle\"\n                                justify=\"space-between\"\n                                className=\"mb-4\"\n                            >\n                                <Col>\n                                    {forecast && (\n                                        <h5 className=\"mb-0 font-weight-bold\">{`${forecast.city.name}, ${forecast.city.country}`}</h5>\n                                    )}\n                                    <h6 className=\"mb-0\">\n                                        {format(current.dt * 1000, \"MMMM Do YYYY\")}\n                                    </h6>\n                                    <small>{capitalize(current?.weather[0].description)}</small>\n                                </Col>\n                                <Col className=\"text-right\">\n                                    <h3 className=\"font-weight-light mb-0\">\n                                        <span>{current.main.temp}&deg;</span>\n                                    </h3>\n                                </Col>\n                            </Row>\n                            <Row type=\"flex\" align=\"middle\" justify=\"space-between\" gutter={16}>\n                                {Object.keys(current.main).map((key, index) => (\n                                    <Col xs={12} key={index}>\n                                        <DescriptionItem\n                                            title={capitalize(key.replace(/_/g, \" \"))}\n                                            content={current.main[key]}\n                                        />\n                                    </Col>\n                                ))}\n                            </Row>\n                        </div>\n                        <Divider orientation=\"left\">\n                            <small>Forecast</small>\n                        </Divider>\n                        <div className=\"p-4\">\n                            {forecast && (\n                                <Row\n                                    type=\"flex\"\n                                    align=\"middle\"\n                                    justify=\"space-between\"\n                                    className=\"text-center\"\n                                    style={{ flexFlow: \"initial\" }}\n                                >\n                                    {forecast.list.map(\n                                        (day: any, index: number) =>\n                                            index !== 0 && (\n                                                <p className=\"text-center mb-0\" key={index}>\n                                                    <ForecastItem\n                                                        content={format(day.dt * 1000, \"ddd\")}\n                                                    />\n                                                    <ForecastItem\n                                                        content={day.weather.description}\n                                                    />\n                                                    <ForecastItem\n                                                        content={getWindDirection(day.wind.deg)}\n                                                    />\n                                                    <ForecastItem\n                                                        content={getWeatherIcon(\n                                                            day.weather[0].icon,\n                                                            50\n                                                        )}\n                                                    />\n                                                    <ForecastItem content={`${day.main.temp}°`} />\n                                                </p>\n                                            )\n                                    )}\n                                </Row>\n                            )}\n                        </div>\n                    </>\n                )}\n            </Skeleton>\n        </Card>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}