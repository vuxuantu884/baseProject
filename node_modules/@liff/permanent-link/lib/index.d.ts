import { LiffModule } from '@liff/use';
export interface PermanentLinkModuleAPI {
    createUrl: () => string;
    createUrlBy: (url: string) => Promise<string>;
    setExtraQueryParam: (paramsToAdd: string) => void;
}
export declare type ExtendLiffCorePermanentLink = {
    permanentLink: PermanentLinkModuleAPI;
};
export declare class PermanentLink implements LiffModule<PermanentLinkModuleAPI> {
    private extraParams;
    get name(): string;
    /**
     * get and validate Context
     * @returns {Context}
     */
    private getAndValidateContext;
    /**
     * Create Permanent Link function.
     * @returns {string} - Generated permanent link
     */
    createUrl: () => string;
    /**
     * Create Permanent Link function.
     * @param {string} paramsToAdd - Extra params to add to permanent link
     * @returns {string} - Generated permanent link
     */
    createUrlBy: (url: string) => Promise<string>;
    /**
     * Give developer ability to add extra params to permanent link.
     * Can be used for tracking parameters for example
     * @param {string} paramsToAdd - Extra params to add to permanent link
     */
    setExtraQueryParam: (paramsToAdd: string) => void;
    /**
     * /a -> /a/b ✓
     * /a -> /a ✓
     * /a -> /b ×
     * /a/b -> /a ×
     * /a/b -> /a/bc ×
     * @param origin endpoint pathname
     * @param target location pathname
     */
    private isAncestor;
    install: () => PermanentLinkModuleAPI;
}
export declare const module: PermanentLink;
